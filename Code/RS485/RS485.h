#ifndef __RS485_H
#define __RS485_H

typedef enum {
    COMMAND_GET_STATUS = 0x00,
    COMMAND_GET_TEMPERATURE = 0x01,
    COMMAND_GET_DEPTH = 0x02,
    COMMAND_GET_RESISTANCE = 0x03,
    COMMAND_GET_CONDUCTIVITY = 0x04,
    COMMAND_GET_SALINITY = 0x05,
    COMMNAD_GET_STANDARD_CONDUCTIVITY = 0x06,
    COMMAND_SET_CONFIG = 0x07,
    COMMAND_RESET = 0xff,
} RS485_Command;

typedef enum {
    STATUS_IDLE = 0x00,
    STATUS_ERROR = 0x01,
    STATUS_BUSY = 0x02,
} RS485_Status;

typedef enum {
    RESPONSE_ACK = 0x00,
    RESPONSE_NACK = 0x01,
} RS485_Response;

typedef enum {
    EXPECTING_NONE = 0x00,
    EXPECTING_ACK = 0x01,
    EXPECTING_STATUS = 0x02,
    EXPECTING_TEMPERATURE = 0x03,
    EXPECTING_DEPTH = 0x04,
    EXPECTING_RESISTANCE = 0x05,
    EXPECTING_CONDUCTIVITY = 0x06,
    EXPECTING_SALINITY = 0x07,
    EXPECTING_SALINITY_DEPTH = 0x08,
    EXPECTING_STANARD_CONDUCTIVITY = 0x09,
    EXPECTING_CONFIG_READY = 0x0a,
} RS485_Expecting;

#define DATA_PACKET_SIZE 3

#define DECIMAL_POINT 0x10
#define NEGATIVE_SIGN 0x20

#endif