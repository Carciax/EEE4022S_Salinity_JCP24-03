ARM GAS  /var/folders/rj/9n9dpytj2n74_jwlj_p0xk9m0000gn/T//ccgVzDuS.s 			page 1


   1              		.cpu cortex-m0
   2              		.arch armv6s-m
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 0
  12              		.eabi_attribute 18, 4
  13              		.file	"stm32f0xx_it.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.file 1 "Core/Src/stm32f0xx_it.c"
  18              		.section	.text.NMI_Handler,"ax",%progbits
  19              		.align	1
  20              		.global	NMI_Handler
  21              		.syntax unified
  22              		.code	16
  23              		.thumb_func
  25              	NMI_Handler:
  26              	.LFB40:
   1:Core/Src/stm32f0xx_it.c **** /* USER CODE BEGIN Header */
   2:Core/Src/stm32f0xx_it.c **** /**
   3:Core/Src/stm32f0xx_it.c ****   ******************************************************************************
   4:Core/Src/stm32f0xx_it.c ****   * @file    stm32f0xx_it.c
   5:Core/Src/stm32f0xx_it.c ****   * @brief   Interrupt Service Routines.
   6:Core/Src/stm32f0xx_it.c ****   ******************************************************************************
   7:Core/Src/stm32f0xx_it.c ****   * @attention
   8:Core/Src/stm32f0xx_it.c ****   *
   9:Core/Src/stm32f0xx_it.c ****   * Copyright (c) 2024 STMicroelectronics.
  10:Core/Src/stm32f0xx_it.c ****   * All rights reserved.
  11:Core/Src/stm32f0xx_it.c ****   *
  12:Core/Src/stm32f0xx_it.c ****   * This software is licensed under terms that can be found in the LICENSE file
  13:Core/Src/stm32f0xx_it.c ****   * in the root directory of this software component.
  14:Core/Src/stm32f0xx_it.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Core/Src/stm32f0xx_it.c ****   *
  16:Core/Src/stm32f0xx_it.c ****   ******************************************************************************
  17:Core/Src/stm32f0xx_it.c ****   */
  18:Core/Src/stm32f0xx_it.c **** /* USER CODE END Header */
  19:Core/Src/stm32f0xx_it.c **** 
  20:Core/Src/stm32f0xx_it.c **** /* Includes ------------------------------------------------------------------*/
  21:Core/Src/stm32f0xx_it.c **** #include "main.h"
  22:Core/Src/stm32f0xx_it.c **** #include "stm32f0xx_it.h"
  23:Core/Src/stm32f0xx_it.c **** /* Private includes ----------------------------------------------------------*/
  24:Core/Src/stm32f0xx_it.c **** /* USER CODE BEGIN Includes */
  25:Core/Src/stm32f0xx_it.c **** /* USER CODE END Includes */
  26:Core/Src/stm32f0xx_it.c **** 
  27:Core/Src/stm32f0xx_it.c **** /* Private typedef -----------------------------------------------------------*/
  28:Core/Src/stm32f0xx_it.c **** /* USER CODE BEGIN TD */
  29:Core/Src/stm32f0xx_it.c **** 
  30:Core/Src/stm32f0xx_it.c **** /* USER CODE END TD */
  31:Core/Src/stm32f0xx_it.c **** 
  32:Core/Src/stm32f0xx_it.c **** /* Private define ------------------------------------------------------------*/
ARM GAS  /var/folders/rj/9n9dpytj2n74_jwlj_p0xk9m0000gn/T//ccgVzDuS.s 			page 2


  33:Core/Src/stm32f0xx_it.c **** /* USER CODE BEGIN PD */
  34:Core/Src/stm32f0xx_it.c **** 
  35:Core/Src/stm32f0xx_it.c **** /* USER CODE END PD */
  36:Core/Src/stm32f0xx_it.c **** 
  37:Core/Src/stm32f0xx_it.c **** /* Private macro -------------------------------------------------------------*/
  38:Core/Src/stm32f0xx_it.c **** /* USER CODE BEGIN PM */
  39:Core/Src/stm32f0xx_it.c **** 
  40:Core/Src/stm32f0xx_it.c **** /* USER CODE END PM */
  41:Core/Src/stm32f0xx_it.c **** 
  42:Core/Src/stm32f0xx_it.c **** /* Private variables ---------------------------------------------------------*/
  43:Core/Src/stm32f0xx_it.c **** /* USER CODE BEGIN PV */
  44:Core/Src/stm32f0xx_it.c **** 
  45:Core/Src/stm32f0xx_it.c **** /* USER CODE END PV */
  46:Core/Src/stm32f0xx_it.c **** 
  47:Core/Src/stm32f0xx_it.c **** /* Private function prototypes -----------------------------------------------*/
  48:Core/Src/stm32f0xx_it.c **** /* USER CODE BEGIN PFP */
  49:Core/Src/stm32f0xx_it.c **** 
  50:Core/Src/stm32f0xx_it.c **** /* USER CODE END PFP */
  51:Core/Src/stm32f0xx_it.c **** 
  52:Core/Src/stm32f0xx_it.c **** /* Private user code ---------------------------------------------------------*/
  53:Core/Src/stm32f0xx_it.c **** /* USER CODE BEGIN 0 */
  54:Core/Src/stm32f0xx_it.c **** 
  55:Core/Src/stm32f0xx_it.c **** /* USER CODE END 0 */
  56:Core/Src/stm32f0xx_it.c **** 
  57:Core/Src/stm32f0xx_it.c **** /* External variables --------------------------------------------------------*/
  58:Core/Src/stm32f0xx_it.c **** extern DMA_HandleTypeDef hdma_tim6_up;
  59:Core/Src/stm32f0xx_it.c **** extern DMA_HandleTypeDef hdma_tim17_ch1_up;
  60:Core/Src/stm32f0xx_it.c **** extern TIM_HandleTypeDef htim6;
  61:Core/Src/stm32f0xx_it.c **** extern UART_HandleTypeDef huart1;
  62:Core/Src/stm32f0xx_it.c **** /* USER CODE BEGIN EV */
  63:Core/Src/stm32f0xx_it.c **** 
  64:Core/Src/stm32f0xx_it.c **** /* USER CODE END EV */
  65:Core/Src/stm32f0xx_it.c **** 
  66:Core/Src/stm32f0xx_it.c **** /******************************************************************************/
  67:Core/Src/stm32f0xx_it.c **** /*           Cortex-M0 Processor Interruption and Exception Handlers          */
  68:Core/Src/stm32f0xx_it.c **** /******************************************************************************/
  69:Core/Src/stm32f0xx_it.c **** /**
  70:Core/Src/stm32f0xx_it.c ****   * @brief This function handles Non maskable interrupt.
  71:Core/Src/stm32f0xx_it.c ****   */
  72:Core/Src/stm32f0xx_it.c **** void NMI_Handler(void)
  73:Core/Src/stm32f0xx_it.c **** {
  27              		.loc 1 73 1 view -0
  28              		.cfi_startproc
  29              		@ Volatile: function does not return.
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		@ link register save eliminated.
  33              	.L2:
  74:Core/Src/stm32f0xx_it.c ****   /* USER CODE BEGIN NonMaskableInt_IRQn 0 */
  75:Core/Src/stm32f0xx_it.c **** 
  76:Core/Src/stm32f0xx_it.c ****   /* USER CODE END NonMaskableInt_IRQn 0 */
  77:Core/Src/stm32f0xx_it.c ****   /* USER CODE BEGIN NonMaskableInt_IRQn 1 */
  78:Core/Src/stm32f0xx_it.c ****    while (1)
  34              		.loc 1 78 4 view .LVU1
  79:Core/Src/stm32f0xx_it.c ****   {
  80:Core/Src/stm32f0xx_it.c ****   }
  35              		.loc 1 80 3 view .LVU2
ARM GAS  /var/folders/rj/9n9dpytj2n74_jwlj_p0xk9m0000gn/T//ccgVzDuS.s 			page 3


  78:Core/Src/stm32f0xx_it.c ****   {
  36              		.loc 1 78 10 view .LVU3
  37 0000 FEE7     		b	.L2
  38              		.cfi_endproc
  39              	.LFE40:
  41              		.section	.text.HardFault_Handler,"ax",%progbits
  42              		.align	1
  43              		.global	HardFault_Handler
  44              		.syntax unified
  45              		.code	16
  46              		.thumb_func
  48              	HardFault_Handler:
  49              	.LFB41:
  81:Core/Src/stm32f0xx_it.c ****   /* USER CODE END NonMaskableInt_IRQn 1 */
  82:Core/Src/stm32f0xx_it.c **** }
  83:Core/Src/stm32f0xx_it.c **** 
  84:Core/Src/stm32f0xx_it.c **** /**
  85:Core/Src/stm32f0xx_it.c ****   * @brief This function handles Hard fault interrupt.
  86:Core/Src/stm32f0xx_it.c ****   */
  87:Core/Src/stm32f0xx_it.c **** void HardFault_Handler(void)
  88:Core/Src/stm32f0xx_it.c **** {
  50              		.loc 1 88 1 view -0
  51              		.cfi_startproc
  52              		@ Volatile: function does not return.
  53              		@ args = 0, pretend = 0, frame = 0
  54              		@ frame_needed = 0, uses_anonymous_args = 0
  55              		@ link register save eliminated.
  56              	.L4:
  89:Core/Src/stm32f0xx_it.c ****   /* USER CODE BEGIN HardFault_IRQn 0 */
  90:Core/Src/stm32f0xx_it.c **** 
  91:Core/Src/stm32f0xx_it.c ****   /* USER CODE END HardFault_IRQn 0 */
  92:Core/Src/stm32f0xx_it.c ****   while (1)
  57              		.loc 1 92 3 view .LVU5
  93:Core/Src/stm32f0xx_it.c ****   {
  94:Core/Src/stm32f0xx_it.c ****     /* USER CODE BEGIN W1_HardFault_IRQn 0 */
  95:Core/Src/stm32f0xx_it.c ****     /* USER CODE END W1_HardFault_IRQn 0 */
  96:Core/Src/stm32f0xx_it.c ****   }
  58              		.loc 1 96 3 view .LVU6
  92:Core/Src/stm32f0xx_it.c ****   {
  59              		.loc 1 92 9 view .LVU7
  60 0000 FEE7     		b	.L4
  61              		.cfi_endproc
  62              	.LFE41:
  64              		.section	.text.SVC_Handler,"ax",%progbits
  65              		.align	1
  66              		.global	SVC_Handler
  67              		.syntax unified
  68              		.code	16
  69              		.thumb_func
  71              	SVC_Handler:
  72              	.LFB42:
  97:Core/Src/stm32f0xx_it.c **** }
  98:Core/Src/stm32f0xx_it.c **** 
  99:Core/Src/stm32f0xx_it.c **** /**
 100:Core/Src/stm32f0xx_it.c ****   * @brief This function handles System service call via SWI instruction.
 101:Core/Src/stm32f0xx_it.c ****   */
 102:Core/Src/stm32f0xx_it.c **** void SVC_Handler(void)
ARM GAS  /var/folders/rj/9n9dpytj2n74_jwlj_p0xk9m0000gn/T//ccgVzDuS.s 			page 4


 103:Core/Src/stm32f0xx_it.c **** {
  73              		.loc 1 103 1 view -0
  74              		.cfi_startproc
  75              		@ args = 0, pretend = 0, frame = 0
  76              		@ frame_needed = 0, uses_anonymous_args = 0
  77              		@ link register save eliminated.
 104:Core/Src/stm32f0xx_it.c ****   /* USER CODE BEGIN SVC_IRQn 0 */
 105:Core/Src/stm32f0xx_it.c **** 
 106:Core/Src/stm32f0xx_it.c ****   /* USER CODE END SVC_IRQn 0 */
 107:Core/Src/stm32f0xx_it.c ****   /* USER CODE BEGIN SVC_IRQn 1 */
 108:Core/Src/stm32f0xx_it.c **** 
 109:Core/Src/stm32f0xx_it.c ****   /* USER CODE END SVC_IRQn 1 */
 110:Core/Src/stm32f0xx_it.c **** }
  78              		.loc 1 110 1 view .LVU9
  79              		@ sp needed
  80 0000 7047     		bx	lr
  81              		.cfi_endproc
  82              	.LFE42:
  84              		.section	.text.PendSV_Handler,"ax",%progbits
  85              		.align	1
  86              		.global	PendSV_Handler
  87              		.syntax unified
  88              		.code	16
  89              		.thumb_func
  91              	PendSV_Handler:
  92              	.LFB43:
 111:Core/Src/stm32f0xx_it.c **** 
 112:Core/Src/stm32f0xx_it.c **** /**
 113:Core/Src/stm32f0xx_it.c ****   * @brief This function handles Pendable request for system service.
 114:Core/Src/stm32f0xx_it.c ****   */
 115:Core/Src/stm32f0xx_it.c **** void PendSV_Handler(void)
 116:Core/Src/stm32f0xx_it.c **** {
  93              		.loc 1 116 1 view -0
  94              		.cfi_startproc
  95              		@ args = 0, pretend = 0, frame = 0
  96              		@ frame_needed = 0, uses_anonymous_args = 0
  97              		@ link register save eliminated.
 117:Core/Src/stm32f0xx_it.c ****   /* USER CODE BEGIN PendSV_IRQn 0 */
 118:Core/Src/stm32f0xx_it.c **** 
 119:Core/Src/stm32f0xx_it.c ****   /* USER CODE END PendSV_IRQn 0 */
 120:Core/Src/stm32f0xx_it.c ****   /* USER CODE BEGIN PendSV_IRQn 1 */
 121:Core/Src/stm32f0xx_it.c **** 
 122:Core/Src/stm32f0xx_it.c ****   /* USER CODE END PendSV_IRQn 1 */
 123:Core/Src/stm32f0xx_it.c **** }
  98              		.loc 1 123 1 view .LVU11
  99              		@ sp needed
 100 0000 7047     		bx	lr
 101              		.cfi_endproc
 102              	.LFE43:
 104              		.section	.text.SysTick_Handler,"ax",%progbits
 105              		.align	1
 106              		.global	SysTick_Handler
 107              		.syntax unified
 108              		.code	16
 109              		.thumb_func
 111              	SysTick_Handler:
 112              	.LFB44:
ARM GAS  /var/folders/rj/9n9dpytj2n74_jwlj_p0xk9m0000gn/T//ccgVzDuS.s 			page 5


 124:Core/Src/stm32f0xx_it.c **** 
 125:Core/Src/stm32f0xx_it.c **** /**
 126:Core/Src/stm32f0xx_it.c ****   * @brief This function handles System tick timer.
 127:Core/Src/stm32f0xx_it.c ****   */
 128:Core/Src/stm32f0xx_it.c **** void SysTick_Handler(void)
 129:Core/Src/stm32f0xx_it.c **** {
 113              		.loc 1 129 1 view -0
 114              		.cfi_startproc
 115              		@ args = 0, pretend = 0, frame = 0
 116              		@ frame_needed = 0, uses_anonymous_args = 0
 117 0000 10B5     		push	{r4, lr}
 118              		.cfi_def_cfa_offset 8
 119              		.cfi_offset 4, -8
 120              		.cfi_offset 14, -4
 130:Core/Src/stm32f0xx_it.c ****   /* USER CODE BEGIN SysTick_IRQn 0 */
 131:Core/Src/stm32f0xx_it.c **** 
 132:Core/Src/stm32f0xx_it.c ****   /* USER CODE END SysTick_IRQn 0 */
 133:Core/Src/stm32f0xx_it.c ****   HAL_IncTick();
 121              		.loc 1 133 3 view .LVU13
 122 0002 FFF7FEFF 		bl	HAL_IncTick
 123              	.LVL0:
 134:Core/Src/stm32f0xx_it.c ****   /* USER CODE BEGIN SysTick_IRQn 1 */
 135:Core/Src/stm32f0xx_it.c **** 
 136:Core/Src/stm32f0xx_it.c ****   /* USER CODE END SysTick_IRQn 1 */
 137:Core/Src/stm32f0xx_it.c **** }
 124              		.loc 1 137 1 is_stmt 0 view .LVU14
 125              		@ sp needed
 126 0006 10BD     		pop	{r4, pc}
 127              		.cfi_endproc
 128              	.LFE44:
 130              		.section	.text.EXTI2_3_IRQHandler,"ax",%progbits
 131              		.align	1
 132              		.global	EXTI2_3_IRQHandler
 133              		.syntax unified
 134              		.code	16
 135              		.thumb_func
 137              	EXTI2_3_IRQHandler:
 138              	.LFB45:
 138:Core/Src/stm32f0xx_it.c **** 
 139:Core/Src/stm32f0xx_it.c **** /******************************************************************************/
 140:Core/Src/stm32f0xx_it.c **** /* STM32F0xx Peripheral Interrupt Handlers                                    */
 141:Core/Src/stm32f0xx_it.c **** /* Add here the Interrupt Handlers for the used peripherals.                  */
 142:Core/Src/stm32f0xx_it.c **** /* For the available peripheral interrupt handler names,                      */
 143:Core/Src/stm32f0xx_it.c **** /* please refer to the startup file (startup_stm32f0xx.s).                    */
 144:Core/Src/stm32f0xx_it.c **** /******************************************************************************/
 145:Core/Src/stm32f0xx_it.c **** 
 146:Core/Src/stm32f0xx_it.c **** /**
 147:Core/Src/stm32f0xx_it.c ****   * @brief This function handles EXTI line 2 and 3 interrupts.
 148:Core/Src/stm32f0xx_it.c ****   */
 149:Core/Src/stm32f0xx_it.c **** void EXTI2_3_IRQHandler(void)
 150:Core/Src/stm32f0xx_it.c **** {
 139              		.loc 1 150 1 is_stmt 1 view -0
 140              		.cfi_startproc
 141              		@ args = 0, pretend = 0, frame = 0
 142              		@ frame_needed = 0, uses_anonymous_args = 0
 143 0000 10B5     		push	{r4, lr}
 144              		.cfi_def_cfa_offset 8
ARM GAS  /var/folders/rj/9n9dpytj2n74_jwlj_p0xk9m0000gn/T//ccgVzDuS.s 			page 6


 145              		.cfi_offset 4, -8
 146              		.cfi_offset 14, -4
 151:Core/Src/stm32f0xx_it.c ****   /* USER CODE BEGIN EXTI2_3_IRQn 0 */
 152:Core/Src/stm32f0xx_it.c **** 
 153:Core/Src/stm32f0xx_it.c ****   /* USER CODE END EXTI2_3_IRQn 0 */
 154:Core/Src/stm32f0xx_it.c ****   HAL_GPIO_EXTI_IRQHandler(DIG1_1_Pin);
 147              		.loc 1 154 3 view .LVU16
 148 0002 0420     		movs	r0, #4
 149 0004 FFF7FEFF 		bl	HAL_GPIO_EXTI_IRQHandler
 150              	.LVL1:
 155:Core/Src/stm32f0xx_it.c ****   /* USER CODE BEGIN EXTI2_3_IRQn 1 */
 156:Core/Src/stm32f0xx_it.c **** 
 157:Core/Src/stm32f0xx_it.c ****   /* USER CODE END EXTI2_3_IRQn 1 */
 158:Core/Src/stm32f0xx_it.c **** }
 151              		.loc 1 158 1 is_stmt 0 view .LVU17
 152              		@ sp needed
 153 0008 10BD     		pop	{r4, pc}
 154              		.cfi_endproc
 155              	.LFE45:
 157              		.section	.text.EXTI4_15_IRQHandler,"ax",%progbits
 158              		.align	1
 159              		.global	EXTI4_15_IRQHandler
 160              		.syntax unified
 161              		.code	16
 162              		.thumb_func
 164              	EXTI4_15_IRQHandler:
 165              	.LFB46:
 159:Core/Src/stm32f0xx_it.c **** 
 160:Core/Src/stm32f0xx_it.c **** /**
 161:Core/Src/stm32f0xx_it.c ****   * @brief This function handles EXTI line 4 to 15 interrupts.
 162:Core/Src/stm32f0xx_it.c ****   */
 163:Core/Src/stm32f0xx_it.c **** void EXTI4_15_IRQHandler(void)
 164:Core/Src/stm32f0xx_it.c **** {
 166              		.loc 1 164 1 is_stmt 1 view -0
 167              		.cfi_startproc
 168              		@ args = 0, pretend = 0, frame = 0
 169              		@ frame_needed = 0, uses_anonymous_args = 0
 170 0000 10B5     		push	{r4, lr}
 171              		.cfi_def_cfa_offset 8
 172              		.cfi_offset 4, -8
 173              		.cfi_offset 14, -4
 165:Core/Src/stm32f0xx_it.c ****   /* USER CODE BEGIN EXTI4_15_IRQn 0 */
 166:Core/Src/stm32f0xx_it.c **** 
 167:Core/Src/stm32f0xx_it.c ****   /* USER CODE END EXTI4_15_IRQn 0 */
 168:Core/Src/stm32f0xx_it.c ****   HAL_GPIO_EXTI_IRQHandler(SW1_Pin);
 174              		.loc 1 168 3 view .LVU19
 175 0002 1020     		movs	r0, #16
 176 0004 FFF7FEFF 		bl	HAL_GPIO_EXTI_IRQHandler
 177              	.LVL2:
 169:Core/Src/stm32f0xx_it.c ****   HAL_GPIO_EXTI_IRQHandler(SW2_Pin);
 178              		.loc 1 169 3 view .LVU20
 179 0008 2020     		movs	r0, #32
 180 000a FFF7FEFF 		bl	HAL_GPIO_EXTI_IRQHandler
 181              	.LVL3:
 170:Core/Src/stm32f0xx_it.c ****   HAL_GPIO_EXTI_IRQHandler(DIG3_1_Pin);
 182              		.loc 1 170 3 view .LVU21
 183 000e 4020     		movs	r0, #64
ARM GAS  /var/folders/rj/9n9dpytj2n74_jwlj_p0xk9m0000gn/T//ccgVzDuS.s 			page 7


 184 0010 FFF7FEFF 		bl	HAL_GPIO_EXTI_IRQHandler
 185              	.LVL4:
 171:Core/Src/stm32f0xx_it.c ****   HAL_GPIO_EXTI_IRQHandler(DIG2_1_Pin);
 186              		.loc 1 171 3 view .LVU22
 187 0014 8020     		movs	r0, #128
 188 0016 C000     		lsls	r0, r0, #3
 189 0018 FFF7FEFF 		bl	HAL_GPIO_EXTI_IRQHandler
 190              	.LVL5:
 172:Core/Src/stm32f0xx_it.c ****   /* USER CODE BEGIN EXTI4_15_IRQn 1 */
 173:Core/Src/stm32f0xx_it.c **** 
 174:Core/Src/stm32f0xx_it.c ****   /* USER CODE END EXTI4_15_IRQn 1 */
 175:Core/Src/stm32f0xx_it.c **** }
 191              		.loc 1 175 1 is_stmt 0 view .LVU23
 192              		@ sp needed
 193 001c 10BD     		pop	{r4, pc}
 194              		.cfi_endproc
 195              	.LFE46:
 197              		.section	.text.DMA1_Channel1_IRQHandler,"ax",%progbits
 198              		.align	1
 199              		.global	DMA1_Channel1_IRQHandler
 200              		.syntax unified
 201              		.code	16
 202              		.thumb_func
 204              	DMA1_Channel1_IRQHandler:
 205              	.LFB47:
 176:Core/Src/stm32f0xx_it.c **** 
 177:Core/Src/stm32f0xx_it.c **** /**
 178:Core/Src/stm32f0xx_it.c ****   * @brief This function handles DMA1 channel 1 interrupt.
 179:Core/Src/stm32f0xx_it.c ****   */
 180:Core/Src/stm32f0xx_it.c **** void DMA1_Channel1_IRQHandler(void)
 181:Core/Src/stm32f0xx_it.c **** {
 206              		.loc 1 181 1 is_stmt 1 view -0
 207              		.cfi_startproc
 208              		@ args = 0, pretend = 0, frame = 0
 209              		@ frame_needed = 0, uses_anonymous_args = 0
 210 0000 10B5     		push	{r4, lr}
 211              		.cfi_def_cfa_offset 8
 212              		.cfi_offset 4, -8
 213              		.cfi_offset 14, -4
 182:Core/Src/stm32f0xx_it.c ****   /* USER CODE BEGIN DMA1_Channel1_IRQn 0 */
 183:Core/Src/stm32f0xx_it.c **** 
 184:Core/Src/stm32f0xx_it.c ****   /* USER CODE END DMA1_Channel1_IRQn 0 */
 185:Core/Src/stm32f0xx_it.c ****   HAL_DMA_IRQHandler(&hdma_tim17_ch1_up);
 214              		.loc 1 185 3 view .LVU25
 215 0002 0248     		ldr	r0, .L11
 216 0004 FFF7FEFF 		bl	HAL_DMA_IRQHandler
 217              	.LVL6:
 186:Core/Src/stm32f0xx_it.c ****   /* USER CODE BEGIN DMA1_Channel1_IRQn 1 */
 187:Core/Src/stm32f0xx_it.c **** 
 188:Core/Src/stm32f0xx_it.c ****   /* USER CODE END DMA1_Channel1_IRQn 1 */
 189:Core/Src/stm32f0xx_it.c **** }
 218              		.loc 1 189 1 is_stmt 0 view .LVU26
 219              		@ sp needed
 220 0008 10BD     		pop	{r4, pc}
 221              	.L12:
 222 000a C046     		.align	2
 223              	.L11:
ARM GAS  /var/folders/rj/9n9dpytj2n74_jwlj_p0xk9m0000gn/T//ccgVzDuS.s 			page 8


 224 000c 00000000 		.word	hdma_tim17_ch1_up
 225              		.cfi_endproc
 226              	.LFE47:
 228              		.section	.text.DMA1_Channel2_3_IRQHandler,"ax",%progbits
 229              		.align	1
 230              		.global	DMA1_Channel2_3_IRQHandler
 231              		.syntax unified
 232              		.code	16
 233              		.thumb_func
 235              	DMA1_Channel2_3_IRQHandler:
 236              	.LFB48:
 190:Core/Src/stm32f0xx_it.c **** 
 191:Core/Src/stm32f0xx_it.c **** /**
 192:Core/Src/stm32f0xx_it.c ****   * @brief This function handles DMA1 channel 2 and 3 interrupts.
 193:Core/Src/stm32f0xx_it.c ****   */
 194:Core/Src/stm32f0xx_it.c **** void DMA1_Channel2_3_IRQHandler(void)
 195:Core/Src/stm32f0xx_it.c **** {
 237              		.loc 1 195 1 is_stmt 1 view -0
 238              		.cfi_startproc
 239              		@ args = 0, pretend = 0, frame = 0
 240              		@ frame_needed = 0, uses_anonymous_args = 0
 241 0000 10B5     		push	{r4, lr}
 242              		.cfi_def_cfa_offset 8
 243              		.cfi_offset 4, -8
 244              		.cfi_offset 14, -4
 196:Core/Src/stm32f0xx_it.c ****   /* USER CODE BEGIN DMA1_Channel2_3_IRQn 0 */
 197:Core/Src/stm32f0xx_it.c **** 
 198:Core/Src/stm32f0xx_it.c ****   /* USER CODE END DMA1_Channel2_3_IRQn 0 */
 199:Core/Src/stm32f0xx_it.c ****   HAL_DMA_IRQHandler(&hdma_tim6_up);
 245              		.loc 1 199 3 view .LVU28
 246 0002 0248     		ldr	r0, .L14
 247 0004 FFF7FEFF 		bl	HAL_DMA_IRQHandler
 248              	.LVL7:
 200:Core/Src/stm32f0xx_it.c ****   /* USER CODE BEGIN DMA1_Channel2_3_IRQn 1 */
 201:Core/Src/stm32f0xx_it.c **** 
 202:Core/Src/stm32f0xx_it.c ****   /* USER CODE END DMA1_Channel2_3_IRQn 1 */
 203:Core/Src/stm32f0xx_it.c **** }
 249              		.loc 1 203 1 is_stmt 0 view .LVU29
 250              		@ sp needed
 251 0008 10BD     		pop	{r4, pc}
 252              	.L15:
 253 000a C046     		.align	2
 254              	.L14:
 255 000c 00000000 		.word	hdma_tim6_up
 256              		.cfi_endproc
 257              	.LFE48:
 259              		.section	.text.TIM6_IRQHandler,"ax",%progbits
 260              		.align	1
 261              		.global	TIM6_IRQHandler
 262              		.syntax unified
 263              		.code	16
 264              		.thumb_func
 266              	TIM6_IRQHandler:
 267              	.LFB49:
 204:Core/Src/stm32f0xx_it.c **** 
 205:Core/Src/stm32f0xx_it.c **** /**
 206:Core/Src/stm32f0xx_it.c ****   * @brief This function handles TIM6 global interrupt.
ARM GAS  /var/folders/rj/9n9dpytj2n74_jwlj_p0xk9m0000gn/T//ccgVzDuS.s 			page 9


 207:Core/Src/stm32f0xx_it.c ****   */
 208:Core/Src/stm32f0xx_it.c **** void TIM6_IRQHandler(void)
 209:Core/Src/stm32f0xx_it.c **** {
 268              		.loc 1 209 1 is_stmt 1 view -0
 269              		.cfi_startproc
 270              		@ args = 0, pretend = 0, frame = 0
 271              		@ frame_needed = 0, uses_anonymous_args = 0
 272 0000 10B5     		push	{r4, lr}
 273              		.cfi_def_cfa_offset 8
 274              		.cfi_offset 4, -8
 275              		.cfi_offset 14, -4
 210:Core/Src/stm32f0xx_it.c ****   /* USER CODE BEGIN TIM6_IRQn 0 */
 211:Core/Src/stm32f0xx_it.c **** 
 212:Core/Src/stm32f0xx_it.c ****   /* USER CODE END TIM6_IRQn 0 */
 213:Core/Src/stm32f0xx_it.c ****   HAL_TIM_IRQHandler(&htim6);
 276              		.loc 1 213 3 view .LVU31
 277 0002 0248     		ldr	r0, .L17
 278 0004 FFF7FEFF 		bl	HAL_TIM_IRQHandler
 279              	.LVL8:
 214:Core/Src/stm32f0xx_it.c ****   /* USER CODE BEGIN TIM6_IRQn 1 */
 215:Core/Src/stm32f0xx_it.c **** 
 216:Core/Src/stm32f0xx_it.c ****   /* USER CODE END TIM6_IRQn 1 */
 217:Core/Src/stm32f0xx_it.c **** }
 280              		.loc 1 217 1 is_stmt 0 view .LVU32
 281              		@ sp needed
 282 0008 10BD     		pop	{r4, pc}
 283              	.L18:
 284 000a C046     		.align	2
 285              	.L17:
 286 000c 00000000 		.word	htim6
 287              		.cfi_endproc
 288              	.LFE49:
 290              		.section	.text.USART1_IRQHandler,"ax",%progbits
 291              		.align	1
 292              		.global	USART1_IRQHandler
 293              		.syntax unified
 294              		.code	16
 295              		.thumb_func
 297              	USART1_IRQHandler:
 298              	.LFB50:
 218:Core/Src/stm32f0xx_it.c **** 
 219:Core/Src/stm32f0xx_it.c **** /**
 220:Core/Src/stm32f0xx_it.c ****   * @brief This function handles USART1 global interrupt.
 221:Core/Src/stm32f0xx_it.c ****   */
 222:Core/Src/stm32f0xx_it.c **** void USART1_IRQHandler(void)
 223:Core/Src/stm32f0xx_it.c **** {
 299              		.loc 1 223 1 is_stmt 1 view -0
 300              		.cfi_startproc
 301              		@ args = 0, pretend = 0, frame = 0
 302              		@ frame_needed = 0, uses_anonymous_args = 0
 303 0000 10B5     		push	{r4, lr}
 304              		.cfi_def_cfa_offset 8
 305              		.cfi_offset 4, -8
 306              		.cfi_offset 14, -4
 224:Core/Src/stm32f0xx_it.c ****   /* USER CODE BEGIN USART1_IRQn 0 */
 225:Core/Src/stm32f0xx_it.c **** 
 226:Core/Src/stm32f0xx_it.c ****   /* USER CODE END USART1_IRQn 0 */
ARM GAS  /var/folders/rj/9n9dpytj2n74_jwlj_p0xk9m0000gn/T//ccgVzDuS.s 			page 10


 227:Core/Src/stm32f0xx_it.c ****   HAL_UART_IRQHandler(&huart1);
 307              		.loc 1 227 3 view .LVU34
 308 0002 0248     		ldr	r0, .L20
 309 0004 FFF7FEFF 		bl	HAL_UART_IRQHandler
 310              	.LVL9:
 228:Core/Src/stm32f0xx_it.c ****   /* USER CODE BEGIN USART1_IRQn 1 */
 229:Core/Src/stm32f0xx_it.c **** 
 230:Core/Src/stm32f0xx_it.c ****   /* USER CODE END USART1_IRQn 1 */
 231:Core/Src/stm32f0xx_it.c **** }
 311              		.loc 1 231 1 is_stmt 0 view .LVU35
 312              		@ sp needed
 313 0008 10BD     		pop	{r4, pc}
 314              	.L21:
 315 000a C046     		.align	2
 316              	.L20:
 317 000c 00000000 		.word	huart1
 318              		.cfi_endproc
 319              	.LFE50:
 321              		.text
 322              	.Letext0:
 323              		.file 2 "/opt/local/arm-none-eabi/include/machine/_default_types.h"
 324              		.file 3 "/opt/local/arm-none-eabi/include/sys/_stdint.h"
 325              		.file 4 "Drivers/CMSIS/Device/ST/STM32F0xx/Include/stm32f030x8.h"
 326              		.file 5 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_def.h"
 327              		.file 6 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_dma.h"
 328              		.file 7 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_tim.h"
 329              		.file 8 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_uart.h"
 330              		.file 9 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_gpio.h"
 331              		.file 10 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal.h"
ARM GAS  /var/folders/rj/9n9dpytj2n74_jwlj_p0xk9m0000gn/T//ccgVzDuS.s 			page 11


DEFINED SYMBOLS
                            *ABS*:00000000 stm32f0xx_it.c
/var/folders/rj/9n9dpytj2n74_jwlj_p0xk9m0000gn/T//ccgVzDuS.s:19     .text.NMI_Handler:00000000 $t
/var/folders/rj/9n9dpytj2n74_jwlj_p0xk9m0000gn/T//ccgVzDuS.s:25     .text.NMI_Handler:00000000 NMI_Handler
/var/folders/rj/9n9dpytj2n74_jwlj_p0xk9m0000gn/T//ccgVzDuS.s:42     .text.HardFault_Handler:00000000 $t
/var/folders/rj/9n9dpytj2n74_jwlj_p0xk9m0000gn/T//ccgVzDuS.s:48     .text.HardFault_Handler:00000000 HardFault_Handler
/var/folders/rj/9n9dpytj2n74_jwlj_p0xk9m0000gn/T//ccgVzDuS.s:65     .text.SVC_Handler:00000000 $t
/var/folders/rj/9n9dpytj2n74_jwlj_p0xk9m0000gn/T//ccgVzDuS.s:71     .text.SVC_Handler:00000000 SVC_Handler
/var/folders/rj/9n9dpytj2n74_jwlj_p0xk9m0000gn/T//ccgVzDuS.s:85     .text.PendSV_Handler:00000000 $t
/var/folders/rj/9n9dpytj2n74_jwlj_p0xk9m0000gn/T//ccgVzDuS.s:91     .text.PendSV_Handler:00000000 PendSV_Handler
/var/folders/rj/9n9dpytj2n74_jwlj_p0xk9m0000gn/T//ccgVzDuS.s:105    .text.SysTick_Handler:00000000 $t
/var/folders/rj/9n9dpytj2n74_jwlj_p0xk9m0000gn/T//ccgVzDuS.s:111    .text.SysTick_Handler:00000000 SysTick_Handler
/var/folders/rj/9n9dpytj2n74_jwlj_p0xk9m0000gn/T//ccgVzDuS.s:131    .text.EXTI2_3_IRQHandler:00000000 $t
/var/folders/rj/9n9dpytj2n74_jwlj_p0xk9m0000gn/T//ccgVzDuS.s:137    .text.EXTI2_3_IRQHandler:00000000 EXTI2_3_IRQHandler
/var/folders/rj/9n9dpytj2n74_jwlj_p0xk9m0000gn/T//ccgVzDuS.s:158    .text.EXTI4_15_IRQHandler:00000000 $t
/var/folders/rj/9n9dpytj2n74_jwlj_p0xk9m0000gn/T//ccgVzDuS.s:164    .text.EXTI4_15_IRQHandler:00000000 EXTI4_15_IRQHandler
/var/folders/rj/9n9dpytj2n74_jwlj_p0xk9m0000gn/T//ccgVzDuS.s:198    .text.DMA1_Channel1_IRQHandler:00000000 $t
/var/folders/rj/9n9dpytj2n74_jwlj_p0xk9m0000gn/T//ccgVzDuS.s:204    .text.DMA1_Channel1_IRQHandler:00000000 DMA1_Channel1_IRQHandler
/var/folders/rj/9n9dpytj2n74_jwlj_p0xk9m0000gn/T//ccgVzDuS.s:224    .text.DMA1_Channel1_IRQHandler:0000000c $d
/var/folders/rj/9n9dpytj2n74_jwlj_p0xk9m0000gn/T//ccgVzDuS.s:229    .text.DMA1_Channel2_3_IRQHandler:00000000 $t
/var/folders/rj/9n9dpytj2n74_jwlj_p0xk9m0000gn/T//ccgVzDuS.s:235    .text.DMA1_Channel2_3_IRQHandler:00000000 DMA1_Channel2_3_IRQHandler
/var/folders/rj/9n9dpytj2n74_jwlj_p0xk9m0000gn/T//ccgVzDuS.s:255    .text.DMA1_Channel2_3_IRQHandler:0000000c $d
/var/folders/rj/9n9dpytj2n74_jwlj_p0xk9m0000gn/T//ccgVzDuS.s:260    .text.TIM6_IRQHandler:00000000 $t
/var/folders/rj/9n9dpytj2n74_jwlj_p0xk9m0000gn/T//ccgVzDuS.s:266    .text.TIM6_IRQHandler:00000000 TIM6_IRQHandler
/var/folders/rj/9n9dpytj2n74_jwlj_p0xk9m0000gn/T//ccgVzDuS.s:286    .text.TIM6_IRQHandler:0000000c $d
/var/folders/rj/9n9dpytj2n74_jwlj_p0xk9m0000gn/T//ccgVzDuS.s:291    .text.USART1_IRQHandler:00000000 $t
/var/folders/rj/9n9dpytj2n74_jwlj_p0xk9m0000gn/T//ccgVzDuS.s:297    .text.USART1_IRQHandler:00000000 USART1_IRQHandler
/var/folders/rj/9n9dpytj2n74_jwlj_p0xk9m0000gn/T//ccgVzDuS.s:317    .text.USART1_IRQHandler:0000000c $d

UNDEFINED SYMBOLS
HAL_IncTick
HAL_GPIO_EXTI_IRQHandler
HAL_DMA_IRQHandler
hdma_tim17_ch1_up
hdma_tim6_up
HAL_TIM_IRQHandler
htim6
HAL_UART_IRQHandler
huart1
