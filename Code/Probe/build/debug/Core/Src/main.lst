ARM GAS  /var/folders/rj/9n9dpytj2n74_jwlj_p0xk9m0000gn/T//ccJgApBP.s 			page 1


   1              		.cpu cortex-m4
   2              		.arch armv7e-m
   3              		.fpu fpv4-sp-d16
   4              		.eabi_attribute 27, 1
   5              		.eabi_attribute 28, 1
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 1
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.file	"main.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.file 1 "Core/Src/main.c"
  20              		.section	.text.MX_NVIC_Init,"ax",%progbits
  21              		.align	1
  22              		.syntax unified
  23              		.thumb
  24              		.thumb_func
  26              	MX_NVIC_Init:
  27              	.LFB225:
   1:Core/Src/main.c **** /* USER CODE BEGIN Header */
   2:Core/Src/main.c **** /**
   3:Core/Src/main.c ****  ******************************************************************************
   4:Core/Src/main.c ****  * @file           : main.c
   5:Core/Src/main.c ****  * @brief          : Main program body
   6:Core/Src/main.c ****  ******************************************************************************
   7:Core/Src/main.c ****  * @attention
   8:Core/Src/main.c ****  *
   9:Core/Src/main.c ****  * Copyright (c) 2024 STMicroelectronics.
  10:Core/Src/main.c ****  * All rights reserved.
  11:Core/Src/main.c ****  *
  12:Core/Src/main.c ****  * This software is licensed under terms that can be found in the LICENSE file
  13:Core/Src/main.c ****  * in the root directory of this software component.
  14:Core/Src/main.c ****  * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Core/Src/main.c ****  *
  16:Core/Src/main.c ****  ******************************************************************************
  17:Core/Src/main.c ****  */
  18:Core/Src/main.c **** /* USER CODE END Header */
  19:Core/Src/main.c **** /* Includes ------------------------------------------------------------------*/
  20:Core/Src/main.c **** #include "main.h"
  21:Core/Src/main.c **** #include "adc.h"
  22:Core/Src/main.c **** #include "i2c.h"
  23:Core/Src/main.c **** #include "tim.h"
  24:Core/Src/main.c **** #include "usart.h"
  25:Core/Src/main.c **** #include "gpio.h"
  26:Core/Src/main.c **** 
  27:Core/Src/main.c **** /* Private includes ----------------------------------------------------------*/
  28:Core/Src/main.c **** /* USER CODE BEGIN Includes */
  29:Core/Src/main.c **** #include "voltage.h"
  30:Core/Src/main.c **** #include "salinity.h"
  31:Core/Src/main.c **** #include "RS485.h"
ARM GAS  /var/folders/rj/9n9dpytj2n74_jwlj_p0xk9m0000gn/T//ccJgApBP.s 			page 2


  32:Core/Src/main.c **** #include "ProbeConfig.h"
  33:Core/Src/main.c **** #include <stdio.h>
  34:Core/Src/main.c **** #include <string.h>
  35:Core/Src/main.c **** /* USER CODE END Includes */
  36:Core/Src/main.c **** 
  37:Core/Src/main.c **** /* Private typedef -----------------------------------------------------------*/
  38:Core/Src/main.c **** /* USER CODE BEGIN PTD */
  39:Core/Src/main.c **** typedef enum
  40:Core/Src/main.c **** {
  41:Core/Src/main.c ****     TASK_NONE = 0x00,
  42:Core/Src/main.c ****     TASK_MEASURE_TEMPERATURE = 0x01,
  43:Core/Src/main.c ****     TASK_MEASURE_DEPTH = 0x02,
  44:Core/Src/main.c ****     TASK_MEASURE_RESISTANCE = 0x03,
  45:Core/Src/main.c ****     TASK_MEASURE_CONDUCTIVITY = 0x04,
  46:Core/Src/main.c ****     TASK_MEASURE_SALINITY = 0x05,
  47:Core/Src/main.c ****     TASK_WAITING_FOR_CONFIG = 0x06,
  48:Core/Src/main.c **** } Task;
  49:Core/Src/main.c **** 
  50:Core/Src/main.c **** typedef enum
  51:Core/Src/main.c **** {
  52:Core/Src/main.c ****     SAMPLE_VOLTAGE = 0x00,
  53:Core/Src/main.c ****     SAMPLE_RESISTANCE = 0x01,
  54:Core/Src/main.c ****     VALUE_CONDUCTIVITY = 0x02,
  55:Core/Src/main.c ****     VALUE_TEMPERATURE = 0x03,
  56:Core/Src/main.c ****     VALUE_PRESSURE = 0x04,
  57:Core/Src/main.c ****     VALUE_SALINITY = 0x05,
  58:Core/Src/main.c **** } Sample_Type;
  59:Core/Src/main.c **** /* USER CODE END PTD */
  60:Core/Src/main.c **** 
  61:Core/Src/main.c **** /* Private define ------------------------------------------------------------*/
  62:Core/Src/main.c **** /* USER CODE BEGIN PD */
  63:Core/Src/main.c **** 
  64:Core/Src/main.c **** /* USER CODE END PD */
  65:Core/Src/main.c **** 
  66:Core/Src/main.c **** /* Private macro -------------------------------------------------------------*/
  67:Core/Src/main.c **** /* USER CODE BEGIN PM */
  68:Core/Src/main.c **** 
  69:Core/Src/main.c **** /* USER CODE END PM */
  70:Core/Src/main.c **** 
  71:Core/Src/main.c **** /* Private variables ---------------------------------------------------------*/
  72:Core/Src/main.c **** 
  73:Core/Src/main.c **** /* USER CODE BEGIN PV */
  74:Core/Src/main.c **** Task current_task = TASK_NONE;
  75:Core/Src/main.c **** uint8_t rx_buffer[CONFIG_PACKET_SIZE];
  76:Core/Src/main.c **** RS485_Status status = STATUS_IDLE;
  77:Core/Src/main.c **** ProbeConfig_TypeDef probe_config = {Au, R1_100, BIDIRECTIONAL, 93, 868, 10, 2, STANARD_CONDUCTIVITY
  78:Core/Src/main.c **** /* USER CODE END PV */
  79:Core/Src/main.c **** 
  80:Core/Src/main.c **** /* Private function prototypes -----------------------------------------------*/
  81:Core/Src/main.c **** void SystemClock_Config(void);
  82:Core/Src/main.c **** static void MX_NVIC_Init(void);
  83:Core/Src/main.c **** /* USER CODE BEGIN PFP */
  84:Core/Src/main.c **** void rs485_transmit(uint8_t *data, uint16_t size);
  85:Core/Src/main.c **** void rs485_transmit_double(double value);
  86:Core/Src/main.c **** void rs485_receive_IT(uint16_t size);
  87:Core/Src/main.c **** void transmit_sample_data_readable(void *samples, uint16_t num_samples, Sample_Type sample_type);
  88:Core/Src/main.c **** void transmit_sample_data_binary(void *samples, uint16_t num_samples, Sample_Type sample_type);
ARM GAS  /var/folders/rj/9n9dpytj2n74_jwlj_p0xk9m0000gn/T//ccJgApBP.s 			page 3


  89:Core/Src/main.c **** /* USER CODE END PFP */
  90:Core/Src/main.c **** 
  91:Core/Src/main.c **** /* Private user code ---------------------------------------------------------*/
  92:Core/Src/main.c **** /* USER CODE BEGIN 0 */
  93:Core/Src/main.c **** 
  94:Core/Src/main.c **** /* USER CODE END 0 */
  95:Core/Src/main.c **** 
  96:Core/Src/main.c **** /**
  97:Core/Src/main.c ****  * @brief  The application entry point.
  98:Core/Src/main.c ****  * @retval int
  99:Core/Src/main.c ****  */
 100:Core/Src/main.c **** int main(void)
 101:Core/Src/main.c **** {
 102:Core/Src/main.c ****     /* USER CODE BEGIN 1 */
 103:Core/Src/main.c **** 
 104:Core/Src/main.c ****     /* USER CODE END 1 */
 105:Core/Src/main.c **** 
 106:Core/Src/main.c ****     /* MCU Configuration--------------------------------------------------------*/
 107:Core/Src/main.c **** 
 108:Core/Src/main.c ****     /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
 109:Core/Src/main.c ****     HAL_Init();
 110:Core/Src/main.c **** 
 111:Core/Src/main.c ****     /* USER CODE BEGIN Init */
 112:Core/Src/main.c **** 
 113:Core/Src/main.c ****     /* USER CODE END Init */
 114:Core/Src/main.c **** 
 115:Core/Src/main.c ****     /* Configure the system clock */
 116:Core/Src/main.c ****     SystemClock_Config();
 117:Core/Src/main.c **** 
 118:Core/Src/main.c ****     /* USER CODE BEGIN SysInit */
 119:Core/Src/main.c **** 
 120:Core/Src/main.c ****     /* USER CODE END SysInit */
 121:Core/Src/main.c **** 
 122:Core/Src/main.c ****     /* Initialize all configured peripherals */
 123:Core/Src/main.c ****     MX_GPIO_Init();
 124:Core/Src/main.c ****     MX_ADC1_Init();
 125:Core/Src/main.c ****     MX_I2C1_Init();
 126:Core/Src/main.c ****     MX_USART1_UART_Init();
 127:Core/Src/main.c ****     MX_USART6_UART_Init();
 128:Core/Src/main.c ****     MX_TIM10_Init();
 129:Core/Src/main.c **** 
 130:Core/Src/main.c ****     /* Initialize interrupts */
 131:Core/Src/main.c ****     MX_NVIC_Init();
 132:Core/Src/main.c ****     /* USER CODE BEGIN 2 */
 133:Core/Src/main.c ****     voltage_init();
 134:Core/Src/main.c ****     HAL_GPIO_WritePin(LED_Green_GPIO_Port, LED_Green_Pin, GPIO_PIN_SET);
 135:Core/Src/main.c ****     /* USER CODE END 2 */
 136:Core/Src/main.c **** 
 137:Core/Src/main.c ****     /* Infinite loop */
 138:Core/Src/main.c ****     /* USER CODE BEGIN WHILE */
 139:Core/Src/main.c ****     double pressure, temperature, resistance, conductivity, salinity;
 140:Core/Src/main.c ****     VoltageSample_TypeDef voltage_samples[MAX_SAMPLES];
 141:Core/Src/main.c ****     ResistanceSample_TypeDef resistance_samples[MAX_SAMPLES];
 142:Core/Src/main.c ****     memset(voltage_samples, 0, sizeof(voltage_samples));
 143:Core/Src/main.c ****     HAL_Delay(5000);
 144:Core/Src/main.c **** 
 145:Core/Src/main.c ****     // GPIOSW->BSRR = SW_Ti1_GND_Pin | SW_Ti2_GND_Pin;
ARM GAS  /var/folders/rj/9n9dpytj2n74_jwlj_p0xk9m0000gn/T//ccJgApBP.s 			page 4


 146:Core/Src/main.c ****     // GPIOSW->BSRR = SW_Ti_Pin_Msk << 16;
 147:Core/Src/main.c ****     // for (uint16_t i = 0; i < 20; i++)
 148:Core/Src/main.c ****     // {
 149:Core/Src/main.c ****     //     measure_ac_sweep(
 150:Core/Src/main.c ****     //         voltage_samples,
 151:Core/Src/main.c ****     //         R1_10k,
 152:Core/Src/main.c ****     //         Ti,
 153:Core/Src/main.c ****     //         4,
 154:Core/Src/main.c ****     //         256,
 155:Core/Src/main.c ****     //         50);
 156:Core/Src/main.c ****     // }
 157:Core/Src/main.c ****     // transmit_sample_data_binary(voltage_samples, 256, SAMPLE_VOLTAGE);
 158:Core/Src/main.c **** 
 159:Core/Src/main.c ****     // measure_voltage_sweep(
 160:Core/Src/main.c ****     //     voltage_samples,
 161:Core/Src/main.c ****     //     BIDIRECTIONAL,
 162:Core/Src/main.c ****     //     R1_100,
 163:Core/Src/main.c ****     //     Au_Shielded,
 164:Core/Src/main.c ****     //     V_MIN,
 165:Core/Src/main.c ****     //     V_MAX,
 166:Core/Src/main.c ****     //     5,
 167:Core/Src/main.c ****     //     5,
 168:Core/Src/main.c ****     //     10,
 169:Core/Src/main.c ****     //     0);
 170:Core/Src/main.c ****     // HAL_Delay(2000);
 171:Core/Src/main.c **** 
 172:Core/Src/main.c ****     measure_voltage_sweep(
 173:Core/Src/main.c ****         voltage_samples,
 174:Core/Src/main.c ****         BIDIRECTIONAL,
 175:Core/Src/main.c ****         R1_100,
 176:Core/Src/main.c ****         Au_Shielded,
 177:Core/Src/main.c ****         512,
 178:Core/Src/main.c ****         512,
 179:Core/Src/main.c ****         1,
 180:Core/Src/main.c ****         5,
 181:Core/Src/main.c ****         100,
 182:Core/Src/main.c ****         0);
 183:Core/Src/main.c ****     transmit_sample_data_binary(voltage_samples, 1, SAMPLE_VOLTAGE);
 184:Core/Src/main.c ****     temperature = measure_temperature();
 185:Core/Src/main.c ****     transmit_sample_data_readable(&temperature, 1, VALUE_TEMPERATURE);
 186:Core/Src/main.c **** 
 187:Core/Src/main.c ****     rs485_receive_IT(1);
 188:Core/Src/main.c **** 
 189:Core/Src/main.c ****     while (1)
 190:Core/Src/main.c ****     {
 191:Core/Src/main.c **** 
 192:Core/Src/main.c ****         // HAL_UART_Transmit(&huart6, (uint8_t *)PACKET_START, sizeof(PACKET_START), 1000);
 193:Core/Src/main.c **** 
 194:Core/Src/main.c ****         // VoltageSample_TypeDef votlage_samples[NUM_SAMPLES];
 195:Core/Src/main.c ****         // measure_voltage_sweep(votlage_samples, BIDIRECTIONAL, R1_100, Ti, VOLTAGE_START, VOLTAGE
 196:Core/Src/main.c ****         // transmit_sample_data_readable(votlage_samples, NUM_SAMPLES, SAMPLE_VOLTAGE);
 197:Core/Src/main.c **** 
 198:Core/Src/main.c ****         // ResistanceSample_TypeDef resistance_samples[NUM_SAMPLES];
 199:Core/Src/main.c ****         // calculate_resistance(votlage_samples, resistance_samples, NUM_SAMPLES);
 200:Core/Src/main.c ****         // transmit_sample_data_readable(resistance_samples, NUM_SAMPLES, SAMPLE_RESISTANCE);
 201:Core/Src/main.c **** 
 202:Core/Src/main.c ****         // double conductivity = calculate_conductivity(Au_Shielded, resistance_samples, NUM_SAMPLE
ARM GAS  /var/folders/rj/9n9dpytj2n74_jwlj_p0xk9m0000gn/T//ccJgApBP.s 			page 5


 203:Core/Src/main.c ****         // transmit_sample_data_readable(&conductivity, 1, VALUE_CONDUCTIVITY);
 204:Core/Src/main.c **** 
 205:Core/Src/main.c ****         // double temperature = measure_temperature();
 206:Core/Src/main.c ****         // transmit_sample_data_readable(&temperature, 1, VALUE_TEMPERATURE);
 207:Core/Src/main.c **** 
 208:Core/Src/main.c ****         // double pressure = measure_pressure();
 209:Core/Src/main.c ****         // transmit_sample_data_readable(&pressure, 1, VALUE_PRESSURE);
 210:Core/Src/main.c **** 
 211:Core/Src/main.c ****         // double salinity = calculate_salinity(conductivity, temperature, pressure);
 212:Core/Src/main.c ****         // transmit_sample_data_readable(&salinity, 1, VALUE_SALINITY);
 213:Core/Src/main.c **** 
 214:Core/Src/main.c ****         // HAL_UART_Transmit(&huart6, (uint8_t *)PACKET_END, sizeof(PACKET_END), 1000);
 215:Core/Src/main.c **** 
 216:Core/Src/main.c ****         // HAL_Delay(5000);
 217:Core/Src/main.c **** 
 218:Core/Src/main.c ****         switch (current_task)
 219:Core/Src/main.c ****         {
 220:Core/Src/main.c ****         case TASK_NONE:
 221:Core/Src/main.c ****             // __WFI();
 222:Core/Src/main.c ****             break;
 223:Core/Src/main.c ****         case TASK_MEASURE_TEMPERATURE:
 224:Core/Src/main.c ****             status = STATUS_BUSY;
 225:Core/Src/main.c ****             current_task = TASK_NONE;
 226:Core/Src/main.c **** 
 227:Core/Src/main.c ****             temperature = measure_temperature();
 228:Core/Src/main.c ****             HAL_UART_Abort_IT(&huart1);
 229:Core/Src/main.c ****             rs485_transmit_double(temperature);
 230:Core/Src/main.c **** 
 231:Core/Src/main.c ****             status = STATUS_IDLE;
 232:Core/Src/main.c ****             rs485_receive_IT(1);
 233:Core/Src/main.c ****             break;
 234:Core/Src/main.c ****         case TASK_MEASURE_DEPTH:
 235:Core/Src/main.c ****             status = STATUS_BUSY;
 236:Core/Src/main.c ****             current_task = TASK_NONE;
 237:Core/Src/main.c **** 
 238:Core/Src/main.c ****             pressure = measure_pressure();
 239:Core/Src/main.c ****             HAL_UART_Abort_IT(&huart1);
 240:Core/Src/main.c ****             rs485_transmit_double(pressure);
 241:Core/Src/main.c **** 
 242:Core/Src/main.c ****             status = STATUS_IDLE;
 243:Core/Src/main.c ****             rs485_receive_IT(1);
 244:Core/Src/main.c ****             break;
 245:Core/Src/main.c ****         case TASK_MEASURE_RESISTANCE:
 246:Core/Src/main.c ****             status = STATUS_BUSY;
 247:Core/Src/main.c ****             current_task = TASK_NONE;
 248:Core/Src/main.c **** 
 249:Core/Src/main.c ****             measure_voltage_sweep(
 250:Core/Src/main.c ****                 voltage_samples,
 251:Core/Src/main.c ****                 probe_config.direction,
 252:Core/Src/main.c ****                 probe_config.r1,
 253:Core/Src/main.c ****                 probe_config.electrode,
 254:Core/Src/main.c ****                 probe_config.voltage_start,
 255:Core/Src/main.c ****                 probe_config.voltage_end,
 256:Core/Src/main.c ****                 probe_config.num_samples,
 257:Core/Src/main.c ****                 probe_config.adc_samples,
 258:Core/Src/main.c ****                 probe_config.voltage_settle_time,
 259:Core/Src/main.c ****                 0);
ARM GAS  /var/folders/rj/9n9dpytj2n74_jwlj_p0xk9m0000gn/T//ccJgApBP.s 			page 6


 260:Core/Src/main.c ****             calculate_resistance(voltage_samples, resistance_samples, probe_config.num_samples);
 261:Core/Src/main.c **** 
 262:Core/Src/main.c ****             resistance = calculate_average_resistance(resistance_samples, probe_config.num_samples)
 263:Core/Src/main.c **** 
 264:Core/Src/main.c ****             HAL_UART_Abort_IT(&huart1);
 265:Core/Src/main.c ****             rs485_transmit_double(resistance);
 266:Core/Src/main.c **** 
 267:Core/Src/main.c ****             status = STATUS_IDLE;
 268:Core/Src/main.c ****             rs485_receive_IT(1);
 269:Core/Src/main.c ****             break;
 270:Core/Src/main.c ****         case TASK_MEASURE_CONDUCTIVITY:
 271:Core/Src/main.c ****             status = STATUS_BUSY;
 272:Core/Src/main.c ****             current_task = TASK_NONE;
 273:Core/Src/main.c **** 
 274:Core/Src/main.c ****             measure_voltage_sweep(
 275:Core/Src/main.c ****                 voltage_samples,
 276:Core/Src/main.c ****                 probe_config.direction,
 277:Core/Src/main.c ****                 probe_config.r1,
 278:Core/Src/main.c ****                 probe_config.electrode,
 279:Core/Src/main.c ****                 probe_config.voltage_start,
 280:Core/Src/main.c ****                 probe_config.voltage_end,
 281:Core/Src/main.c ****                 probe_config.num_samples,
 282:Core/Src/main.c ****                 probe_config.adc_samples,
 283:Core/Src/main.c ****                 probe_config.voltage_settle_time,
 284:Core/Src/main.c ****                 0);
 285:Core/Src/main.c ****             calculate_resistance(voltage_samples, resistance_samples, probe_config.num_samples);
 286:Core/Src/main.c **** 
 287:Core/Src/main.c ****             conductivity = calculate_conductivity(probe_config.electrode, resistance_samples, probe
 288:Core/Src/main.c **** 
 289:Core/Src/main.c ****             HAL_UART_Abort_IT(&huart1);
 290:Core/Src/main.c ****             rs485_transmit_double(conductivity);
 291:Core/Src/main.c **** 
 292:Core/Src/main.c ****             status = STATUS_IDLE;
 293:Core/Src/main.c ****             rs485_receive_IT(1);
 294:Core/Src/main.c ****             break;
 295:Core/Src/main.c ****         case TASK_MEASURE_SALINITY:
 296:Core/Src/main.c ****             status = STATUS_BUSY;
 297:Core/Src/main.c ****             current_task = TASK_NONE;
 298:Core/Src/main.c **** 
 299:Core/Src/main.c ****             measure_voltage_sweep(
 300:Core/Src/main.c ****                 voltage_samples,
 301:Core/Src/main.c ****                 probe_config.direction,
 302:Core/Src/main.c ****                 probe_config.r1,
 303:Core/Src/main.c ****                 probe_config.electrode,
 304:Core/Src/main.c ****                 probe_config.voltage_start,
 305:Core/Src/main.c ****                 probe_config.voltage_end,
 306:Core/Src/main.c ****                 probe_config.num_samples,
 307:Core/Src/main.c ****                 probe_config.adc_samples,
 308:Core/Src/main.c ****                 probe_config.voltage_settle_time,
 309:Core/Src/main.c ****                 0);
 310:Core/Src/main.c ****             calculate_resistance(voltage_samples, resistance_samples, probe_config.num_samples);
 311:Core/Src/main.c **** 
 312:Core/Src/main.c ****             conductivity = calculate_conductivity(probe_config.electrode, resistance_samples, probe
 313:Core/Src/main.c ****             temperature = measure_temperature();
 314:Core/Src/main.c ****             pressure = measure_pressure();
 315:Core/Src/main.c **** 
 316:Core/Src/main.c ****             salinity = calculate_salinity(conductivity, temperature, pressure, (double)probe_config
ARM GAS  /var/folders/rj/9n9dpytj2n74_jwlj_p0xk9m0000gn/T//ccJgApBP.s 			page 7


 317:Core/Src/main.c ****             HAL_UART_Abort_IT(&huart1);
 318:Core/Src/main.c ****             rs485_transmit_double(salinity);
 319:Core/Src/main.c **** 
 320:Core/Src/main.c ****             status = STATUS_IDLE;
 321:Core/Src/main.c ****             rs485_receive_IT(1);
 322:Core/Src/main.c ****             break;
 323:Core/Src/main.c ****         case TASK_WAITING_FOR_CONFIG:
 324:Core/Src/main.c ****             break;
 325:Core/Src/main.c ****         default:
 326:Core/Src/main.c ****             break;
 327:Core/Src/main.c ****         }
 328:Core/Src/main.c **** 
 329:Core/Src/main.c ****         /* USER CODE END WHILE */
 330:Core/Src/main.c **** 
 331:Core/Src/main.c ****         /* USER CODE BEGIN 3 */
 332:Core/Src/main.c ****     }
 333:Core/Src/main.c ****     /* USER CODE END 3 */
 334:Core/Src/main.c **** }
 335:Core/Src/main.c **** 
 336:Core/Src/main.c **** /**
 337:Core/Src/main.c ****  * @brief System Clock Configuration
 338:Core/Src/main.c ****  * @retval None
 339:Core/Src/main.c ****  */
 340:Core/Src/main.c **** void SystemClock_Config(void)
 341:Core/Src/main.c **** {
 342:Core/Src/main.c ****     RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 343:Core/Src/main.c ****     RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 344:Core/Src/main.c **** 
 345:Core/Src/main.c ****     /** Configure the main internal regulator output voltage
 346:Core/Src/main.c ****      */
 347:Core/Src/main.c ****     __HAL_RCC_PWR_CLK_ENABLE();
 348:Core/Src/main.c ****     __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE2);
 349:Core/Src/main.c **** 
 350:Core/Src/main.c ****     /** Initializes the RCC Oscillators according to the specified parameters
 351:Core/Src/main.c ****      * in the RCC_OscInitTypeDef structure.
 352:Core/Src/main.c ****      */
 353:Core/Src/main.c ****     RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI;
 354:Core/Src/main.c ****     RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 355:Core/Src/main.c ****     RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 356:Core/Src/main.c ****     RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 357:Core/Src/main.c ****     if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 358:Core/Src/main.c ****     {
 359:Core/Src/main.c ****         Error_Handler();
 360:Core/Src/main.c ****     }
 361:Core/Src/main.c **** 
 362:Core/Src/main.c ****     /** Initializes the CPU, AHB and APB buses clocks
 363:Core/Src/main.c ****      */
 364:Core/Src/main.c ****     RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK | RCC_CLOCKTYPE_SYSCLK | RCC_CLOCKTYPE_PCLK1 |
 365:Core/Src/main.c ****     RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_HSI;
 366:Core/Src/main.c ****     RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 367:Core/Src/main.c ****     RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 368:Core/Src/main.c ****     RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 369:Core/Src/main.c **** 
 370:Core/Src/main.c ****     if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_0) != HAL_OK)
 371:Core/Src/main.c ****     {
 372:Core/Src/main.c ****         Error_Handler();
 373:Core/Src/main.c ****     }
ARM GAS  /var/folders/rj/9n9dpytj2n74_jwlj_p0xk9m0000gn/T//ccJgApBP.s 			page 8


 374:Core/Src/main.c **** }
 375:Core/Src/main.c **** 
 376:Core/Src/main.c **** /**
 377:Core/Src/main.c ****  * @brief NVIC Configuration.
 378:Core/Src/main.c ****  * @retval None
 379:Core/Src/main.c ****  */
 380:Core/Src/main.c **** static void MX_NVIC_Init(void)
 381:Core/Src/main.c **** {
  28              		.loc 1 381 1 view -0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32 0000 08B5     		push	{r3, lr}
  33              		.cfi_def_cfa_offset 8
  34              		.cfi_offset 3, -8
  35              		.cfi_offset 14, -4
 382:Core/Src/main.c ****     /* USART1_IRQn interrupt configuration */
 383:Core/Src/main.c ****     HAL_NVIC_SetPriority(USART1_IRQn, 0, 0);
  36              		.loc 1 383 5 view .LVU1
  37 0002 0022     		movs	r2, #0
  38 0004 1146     		mov	r1, r2
  39 0006 2520     		movs	r0, #37
  40 0008 FFF7FEFF 		bl	HAL_NVIC_SetPriority
  41              	.LVL0:
 384:Core/Src/main.c ****     HAL_NVIC_EnableIRQ(USART1_IRQn);
  42              		.loc 1 384 5 view .LVU2
  43 000c 2520     		movs	r0, #37
  44 000e FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
  45              	.LVL1:
 385:Core/Src/main.c ****     /* USART6_IRQn interrupt configuration */
 386:Core/Src/main.c ****     HAL_NVIC_SetPriority(USART6_IRQn, 0, 0);
  46              		.loc 1 386 5 view .LVU3
  47 0012 0022     		movs	r2, #0
  48 0014 1146     		mov	r1, r2
  49 0016 4720     		movs	r0, #71
  50 0018 FFF7FEFF 		bl	HAL_NVIC_SetPriority
  51              	.LVL2:
 387:Core/Src/main.c ****     HAL_NVIC_EnableIRQ(USART6_IRQn);
  52              		.loc 1 387 5 view .LVU4
  53 001c 4720     		movs	r0, #71
  54 001e FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
  55              	.LVL3:
 388:Core/Src/main.c **** }
  56              		.loc 1 388 1 is_stmt 0 view .LVU5
  57 0022 08BD     		pop	{r3, pc}
  58              		.cfi_endproc
  59              	.LFE225:
  61              		.global	__aeabi_f2d
  62              		.global	__aeabi_dmul
  63              		.section	.rodata.transmit_sample_data_readable.str1.4,"aMS",%progbits,1
  64              		.align	2
  65              	.LC0:
  66 0000 44414320 		.ascii	"DAC Input: %.2f, DAC Output: %.2f, Calib x 11: %.3f"
  66      496E7075 
  66      743A2025 
  66      2E32662C 
  66      20444143 
ARM GAS  /var/folders/rj/9n9dpytj2n74_jwlj_p0xk9m0000gn/T//ccJgApBP.s 			page 9


  67 0033 2C204D65 		.ascii	", Measurement x 11: %.3f\012\000"
  67      61737572 
  67      656D656E 
  67      74207820 
  67      31313A20 
  68 004d 000000   		.align	2
  69              	.LC1:
  70 0050 566F6C74 		.ascii	"Voltage: %.2f, Resistance: %.2f\012\000"
  70      6167653A 
  70      20252E32 
  70      662C2052 
  70      65736973 
  71 0071 000000   		.align	2
  72              	.LC2:
  73 0074 436F6E64 		.ascii	"Conductivity: %.3f\012\000"
  73      75637469 
  73      76697479 
  73      3A20252E 
  73      33660A00 
  74              		.align	2
  75              	.LC3:
  76 0088 0A0A5465 		.ascii	"\012\012Temperature: %.1f\000"
  76      6D706572 
  76      61747572 
  76      653A2025 
  76      2E316600 
  77              		.align	2
  78              	.LC4:
  79 009c 50726573 		.ascii	"Pressure: %.3f\012\000"
  79      73757265 
  79      3A20252E 
  79      33660A00 
  80              		.align	2
  81              	.LC5:
  82 00ac 53616C69 		.ascii	"Salinity: %.3f\012\000"
  82      6E697479 
  82      3A20252E 
  82      33660A00 
  83              		.section	.text.transmit_sample_data_readable,"ax",%progbits
  84              		.align	1
  85              		.global	transmit_sample_data_readable
  86              		.syntax unified
  87              		.thumb
  88              		.thumb_func
  90              	transmit_sample_data_readable:
  91              	.LVL4:
  92              	.LFB230:
 389:Core/Src/main.c **** 
 390:Core/Src/main.c **** /* USER CODE BEGIN 4 */
 391:Core/Src/main.c **** 
 392:Core/Src/main.c **** void HAL_UART_RxCpltCallback(UART_HandleTypeDef *huart)
 393:Core/Src/main.c **** {
 394:Core/Src/main.c ****     HAL_GPIO_TogglePin(LED_Green_GPIO_Port, LED_Green_Pin);
 395:Core/Src/main.c ****     uint8_t response;
 396:Core/Src/main.c ****     if (huart->Instance == USART1)
 397:Core/Src/main.c ****     {
 398:Core/Src/main.c ****         if (current_task == TASK_WAITING_FOR_CONFIG)
ARM GAS  /var/folders/rj/9n9dpytj2n74_jwlj_p0xk9m0000gn/T//ccJgApBP.s 			page 10


 399:Core/Src/main.c ****         {
 400:Core/Src/main.c ****             current_task = TASK_NONE;
 401:Core/Src/main.c ****             response = RESPONSE_ACK;
 402:Core/Src/main.c ****             rs485_transmit(&response, 1);
 403:Core/Src/main.c **** 
 404:Core/Src/main.c ****             memcpy(&probe_config, rx_buffer, sizeof(ProbeConfig_TypeDef));
 405:Core/Src/main.c **** 
 406:Core/Src/main.c ****             rs485_receive_IT(1);
 407:Core/Src/main.c ****         }
 408:Core/Src/main.c ****         else
 409:Core/Src/main.c ****         {
 410:Core/Src/main.c ****             switch ((RS485_Command)rx_buffer[0])
 411:Core/Src/main.c ****             {
 412:Core/Src/main.c ****             case COMMAND_GET_STATUS:
 413:Core/Src/main.c ****                 rs485_transmit((uint8_t *)&status, 1);
 414:Core/Src/main.c ****                 rs485_receive_IT(1);
 415:Core/Src/main.c ****                 break;
 416:Core/Src/main.c ****             case COMMAND_GET_TEMPERATURE:
 417:Core/Src/main.c ****                 current_task = TASK_MEASURE_TEMPERATURE;
 418:Core/Src/main.c ****                 rs485_receive_IT(1);
 419:Core/Src/main.c ****                 break;
 420:Core/Src/main.c ****             case COMMAND_GET_DEPTH:
 421:Core/Src/main.c ****                 current_task = TASK_MEASURE_DEPTH;
 422:Core/Src/main.c ****                 rs485_receive_IT(1);
 423:Core/Src/main.c ****                 break;
 424:Core/Src/main.c ****             case COMMAND_GET_RESISTANCE:
 425:Core/Src/main.c ****                 current_task = TASK_MEASURE_RESISTANCE;
 426:Core/Src/main.c ****                 rs485_receive_IT(1);
 427:Core/Src/main.c ****                 break;
 428:Core/Src/main.c ****             case COMMAND_GET_CONDUCTIVITY:
 429:Core/Src/main.c ****                 current_task = TASK_MEASURE_CONDUCTIVITY;
 430:Core/Src/main.c ****                 rs485_receive_IT(1);
 431:Core/Src/main.c ****                 break;
 432:Core/Src/main.c ****             case COMMAND_GET_SALINITY:
 433:Core/Src/main.c ****                 current_task = TASK_MEASURE_SALINITY;
 434:Core/Src/main.c ****                 rs485_receive_IT(1);
 435:Core/Src/main.c ****                 break;
 436:Core/Src/main.c ****             case COMMAND_SET_CONFIG:
 437:Core/Src/main.c ****                 current_task = TASK_WAITING_FOR_CONFIG;
 438:Core/Src/main.c ****                 response = RESPONSE_ACK;
 439:Core/Src/main.c ****                 rs485_transmit(&response, 1);
 440:Core/Src/main.c ****                 rs485_receive_IT(CONFIG_PACKET_SIZE);
 441:Core/Src/main.c ****                 break;
 442:Core/Src/main.c ****             case COMMAND_RESET:
 443:Core/Src/main.c ****                 HAL_NVIC_SystemReset();
 444:Core/Src/main.c ****                 break;
 445:Core/Src/main.c ****             default:
 446:Core/Src/main.c ****                 response = RESPONSE_NACK;
 447:Core/Src/main.c ****                 rs485_transmit(&response, 1);
 448:Core/Src/main.c ****                 rs485_receive_IT(1);
 449:Core/Src/main.c ****             }
 450:Core/Src/main.c ****         }
 451:Core/Src/main.c ****     }
 452:Core/Src/main.c **** }
 453:Core/Src/main.c **** 
 454:Core/Src/main.c **** void rs485_transmit(uint8_t *data, uint16_t size)
 455:Core/Src/main.c **** {
ARM GAS  /var/folders/rj/9n9dpytj2n74_jwlj_p0xk9m0000gn/T//ccJgApBP.s 			page 11


 456:Core/Src/main.c ****     HAL_GPIO_WritePin(RS485_DE_GPIO_Port, RS485_DE_Pin, GPIO_PIN_SET);
 457:Core/Src/main.c ****     if (HAL_HalfDuplex_EnableTransmitter(&huart1) != HAL_OK)
 458:Core/Src/main.c ****     {
 459:Core/Src/main.c ****         Error_Handler();
 460:Core/Src/main.c ****     }
 461:Core/Src/main.c ****     if (HAL_UART_Transmit(&huart1, data, size, 1000) != HAL_OK)
 462:Core/Src/main.c ****     {
 463:Core/Src/main.c ****         Error_Handler();
 464:Core/Src/main.c ****     }
 465:Core/Src/main.c **** }
 466:Core/Src/main.c **** 
 467:Core/Src/main.c **** void rs485_transmit_double(double value)
 468:Core/Src/main.c **** {
 469:Core/Src/main.c ****     if ((value >= 1000) | (value <= -100))
 470:Core/Src/main.c ****     {
 471:Core/Src/main.c ****         uint8_t digits[3] = {NEGATIVE_SIGN, NEGATIVE_SIGN, NEGATIVE_SIGN};
 472:Core/Src/main.c ****         return rs485_transmit(digits, DATA_PACKET_SIZE);
 473:Core/Src/main.c ****     }
 474:Core/Src/main.c **** 
 475:Core/Src/main.c ****     uint8_t digits[3];
 476:Core/Src/main.c **** 
 477:Core/Src/main.c ****     if (value == 0)
 478:Core/Src/main.c ****     {
 479:Core/Src/main.c ****         digits[0] = DECIMAL_POINT;
 480:Core/Src/main.c ****         digits[1] = 0;
 481:Core/Src/main.c ****         digits[2] = 0;
 482:Core/Src/main.c ****     }
 483:Core/Src/main.c ****     else if (value > 0)
 484:Core/Src/main.c ****     {
 485:Core/Src/main.c ****         int8_t log_value = (int8_t)log10(value);
 486:Core/Src/main.c ****         if (log_value > 0)
 487:Core/Src/main.c ****         {
 488:Core/Src/main.c ****             value = value * pow(10, -log_value);
 489:Core/Src/main.c ****         }
 490:Core/Src/main.c **** 
 491:Core/Src/main.c ****         digits[0] = (uint8_t)value;
 492:Core/Src/main.c ****         value = fmod(value, 1) * 10;
 493:Core/Src/main.c ****         digits[1] = (uint8_t)value;
 494:Core/Src/main.c ****         value = fmod(value, 1) * 10;
 495:Core/Src/main.c ****         digits[2] = (uint8_t)round(value);
 496:Core/Src/main.c **** 
 497:Core/Src/main.c ****         if (log_value > 0)
 498:Core/Src/main.c ****         {
 499:Core/Src/main.c ****             if (log_value < 2)
 500:Core/Src/main.c ****             {
 501:Core/Src/main.c ****                 digits[log_value] |= DECIMAL_POINT;
 502:Core/Src/main.c ****             }
 503:Core/Src/main.c ****         }
 504:Core/Src/main.c ****         else
 505:Core/Src/main.c ****         {
 506:Core/Src/main.c **** 
 507:Core/Src/main.c ****             digits[0] |= DECIMAL_POINT;
 508:Core/Src/main.c ****         }
 509:Core/Src/main.c ****     }
 510:Core/Src/main.c ****     else
 511:Core/Src/main.c ****     {
 512:Core/Src/main.c ****         value = -value;
ARM GAS  /var/folders/rj/9n9dpytj2n74_jwlj_p0xk9m0000gn/T//ccJgApBP.s 			page 12


 513:Core/Src/main.c ****         int8_t log_value = (int8_t)log10(value) + 1;
 514:Core/Src/main.c ****         if (log_value > 0)
 515:Core/Src/main.c ****         {
 516:Core/Src/main.c ****             value = value * pow(10, -log_value);
 517:Core/Src/main.c ****         }
 518:Core/Src/main.c ****         else if (log_value == 0)
 519:Core/Src/main.c ****         {
 520:Core/Src/main.c ****             value = value / 10;
 521:Core/Src/main.c ****         }
 522:Core/Src/main.c **** 
 523:Core/Src/main.c ****         digits[0] = NEGATIVE_SIGN;
 524:Core/Src/main.c ****         value = fmod(value, 1) * 10;
 525:Core/Src/main.c ****         digits[1] = (uint8_t)value;
 526:Core/Src/main.c ****         value = fmod(value, 1) * 10;
 527:Core/Src/main.c ****         digits[2] = (uint8_t)round(value);
 528:Core/Src/main.c **** 
 529:Core/Src/main.c ****         if (log_value > 0)
 530:Core/Src/main.c ****         {
 531:Core/Src/main.c ****             if (log_value < 2)
 532:Core/Src/main.c ****             {
 533:Core/Src/main.c ****                 digits[log_value] |= DECIMAL_POINT;
 534:Core/Src/main.c ****             }
 535:Core/Src/main.c ****         }
 536:Core/Src/main.c ****         else
 537:Core/Src/main.c ****         {
 538:Core/Src/main.c ****             digits[1] |= DECIMAL_POINT;
 539:Core/Src/main.c ****         }
 540:Core/Src/main.c ****     }
 541:Core/Src/main.c **** 
 542:Core/Src/main.c ****     return rs485_transmit(digits, DATA_PACKET_SIZE);
 543:Core/Src/main.c **** }
 544:Core/Src/main.c **** 
 545:Core/Src/main.c **** void rs485_receive_IT(uint16_t size)
 546:Core/Src/main.c **** {
 547:Core/Src/main.c ****     HAL_GPIO_WritePin(RS485_DE_GPIO_Port, RS485_DE_Pin, GPIO_PIN_RESET);
 548:Core/Src/main.c ****     if (HAL_HalfDuplex_EnableReceiver(&huart1) != HAL_OK)
 549:Core/Src/main.c ****     {
 550:Core/Src/main.c ****         Error_Handler();
 551:Core/Src/main.c ****     }
 552:Core/Src/main.c ****     if (HAL_UART_Receive_IT(&huart1, rx_buffer, size) != HAL_OK)
 553:Core/Src/main.c ****     {
 554:Core/Src/main.c ****         Error_Handler();
 555:Core/Src/main.c ****     }
 556:Core/Src/main.c **** }
 557:Core/Src/main.c **** 
 558:Core/Src/main.c **** void transmit_sample_data_readable(void *samples, uint16_t num_samples, Sample_Type sample_type)
 559:Core/Src/main.c **** {
  93              		.loc 1 559 1 is_stmt 1 view -0
  94              		.cfi_startproc
  95              		@ args = 0, pretend = 0, frame = 144
  96              		@ frame_needed = 0, uses_anonymous_args = 0
  97              		.loc 1 559 1 is_stmt 0 view .LVU7
  98 0000 2DE9F047 		push	{r4, r5, r6, r7, r8, r9, r10, lr}
  99              		.cfi_def_cfa_offset 32
 100              		.cfi_offset 4, -32
 101              		.cfi_offset 5, -28
 102              		.cfi_offset 6, -24
ARM GAS  /var/folders/rj/9n9dpytj2n74_jwlj_p0xk9m0000gn/T//ccJgApBP.s 			page 13


 103              		.cfi_offset 7, -20
 104              		.cfi_offset 8, -16
 105              		.cfi_offset 9, -12
 106              		.cfi_offset 10, -8
 107              		.cfi_offset 14, -4
 108 0004 2DED028B 		vpush.64	{d8}
 109              		.cfi_def_cfa_offset 40
 110              		.cfi_offset 80, -40
 111              		.cfi_offset 81, -36
 112 0008 AAB0     		sub	sp, sp, #168
 113              		.cfi_def_cfa_offset 208
 114 000a 0446     		mov	r4, r0
 115 000c 0D46     		mov	r5, r1
 560:Core/Src/main.c ****     switch (sample_type)
 116              		.loc 1 560 5 is_stmt 1 view .LVU8
 117 000e 052A     		cmp	r2, #5
 118 0010 7FD8     		bhi	.L3
 119 0012 DFE812F0 		tbh	[pc, r2, lsl #1]
 120              	.L6:
 121 0016 8300     		.2byte	(.L18-.L6)/2
 122 0018 B400     		.2byte	(.L19-.L6)/2
 123 001a CD00     		.2byte	(.L20-.L6)/2
 124 001c E600     		.2byte	(.L21-.L6)/2
 125 001e FF00     		.2byte	(.L22-.L6)/2
 126 0020 1801     		.2byte	(.L23-.L6)/2
 127              	.LVL5:
 128              		.p2align 1
 129              	.L12:
 130              	.LBB4:
 131              	.LBB5:
 132              	.LBB6:
 561:Core/Src/main.c ****     {
 562:Core/Src/main.c ****     case SAMPLE_VOLTAGE:
 563:Core/Src/main.c ****         VoltageSample_TypeDef *voltage_samples = (VoltageSample_TypeDef *)samples;
 564:Core/Src/main.c ****         for (uint16_t i = 0; i < num_samples; i++)
 565:Core/Src/main.c ****         {
 566:Core/Src/main.c ****             char buf[128];
 133              		.loc 1 566 13 view .LVU9
 567:Core/Src/main.c ****             sprintf(buf, "DAC Input: %.2f, DAC Output: %.2f, Calib x 11: %.3f, Measurement x 11: %.
 134              		.loc 1 567 13 view .LVU10
 135              		.loc 1 567 129 is_stmt 0 view .LVU11
 136 0022 04EBCA06 		add	r6, r4, r10, lsl #3
 137              		.loc 1 567 132 view .LVU12
 138 0026 34F93A30 		ldrsh	r3, [r4, r10, lsl #3]
 139 002a 07EE903A 		vmov	s15, r3	@ int
 140              		.loc 1 567 107 view .LVU13
 141 002e F8EEE77A 		vcvt.f32.s32	s15, s15
 142              		.loc 1 567 143 view .LVU14
 143 0032 9FED897A 		vldr.32	s14, .L26+8
 144 0036 67EE877A 		vmul.f32	s15, s15, s14
 145 003a 17EE900A 		vmov	r0, s15
 146 003e FFF7FEFF 		bl	__aeabi_f2d
 147              	.LVL6:
 148 0042 8046     		mov	r8, r0
 149 0044 8946     		mov	r9, r1
 150              		.loc 1 567 182 view .LVU15
 151 0046 B6F90230 		ldrsh	r3, [r6, #2]
ARM GAS  /var/folders/rj/9n9dpytj2n74_jwlj_p0xk9m0000gn/T//ccJgApBP.s 			page 14


 152 004a 07EE903A 		vmov	s15, r3	@ int
 153              		.loc 1 567 157 view .LVU16
 154 004e F8EEE77A 		vcvt.f32.s32	s15, s15
 155              		.loc 1 567 194 view .LVU17
 156 0052 9FED828A 		vldr.32	s16, .L26+12
 157 0056 67EE887A 		vmul.f32	s15, s15, s16
 158 005a 17EE900A 		vmov	r0, s15
 159 005e FFF7FEFF 		bl	__aeabi_f2d
 160              	.LVL7:
 161 0062 CDE90601 		strd	r0, [sp, #24]
 162              		.loc 1 567 233 view .LVU18
 163 0066 B6F90430 		ldrsh	r3, [r6, #4]
 164 006a 07EE903A 		vmov	s15, r3	@ int
 165              		.loc 1 567 208 view .LVU19
 166 006e F8EEE77A 		vcvt.f32.s32	s15, s15
 167              		.loc 1 567 240 view .LVU20
 168 0072 67EE887A 		vmul.f32	s15, s15, s16
 169 0076 17EE900A 		vmov	r0, s15
 170 007a FFF7FEFF 		bl	__aeabi_f2d
 171              	.LVL8:
 172 007e CDE90801 		strd	r0, [sp, #32]
 173              		.loc 1 567 279 view .LVU21
 174 0082 B6F90630 		ldrsh	r3, [r6, #6]
 175 0086 07EE903A 		vmov	s15, r3	@ int
 176              		.loc 1 567 254 view .LVU22
 177 008a F8EEE77A 		vcvt.f32.s32	s15, s15
 178              		.loc 1 567 292 view .LVU23
 179 008e 67EE887A 		vmul.f32	s15, s15, s16
 180 0092 17EE900A 		vmov	r0, s15
 181 0096 FFF7FEFF 		bl	__aeabi_f2d
 182              	.LVL9:
 183 009a 0646     		mov	r6, r0
 184 009c 0F46     		mov	r7, r1
 185              		.loc 1 567 13 view .LVU24
 186 009e 6CA3     		adr	r3, .L26
 187 00a0 D3E90023 		ldrd	r2, [r3]
 188 00a4 4046     		mov	r0, r8
 189 00a6 4946     		mov	r1, r9
 190 00a8 FFF7FEFF 		bl	__aeabi_dmul
 191              	.LVL10:
 192 00ac 8046     		mov	r8, r0
 193 00ae 8946     		mov	r9, r1
 194 00b0 67A3     		adr	r3, .L26
 195 00b2 D3E90023 		ldrd	r2, [r3]
 196 00b6 3046     		mov	r0, r6
 197 00b8 3946     		mov	r1, r7
 198 00ba FFF7FEFF 		bl	__aeabi_dmul
 199              	.LVL11:
 200 00be CDE90401 		strd	r0, [sp, #16]
 201 00c2 63A3     		adr	r3, .L26
 202 00c4 D3E90023 		ldrd	r2, [r3]
 203 00c8 DDE90801 		ldrd	r0, [sp, #32]
 204 00cc FFF7FEFF 		bl	__aeabi_dmul
 205              	.LVL12:
 206 00d0 CDE90201 		strd	r0, [sp, #8]
 207 00d4 5EA3     		adr	r3, .L26
 208 00d6 D3E90023 		ldrd	r2, [r3]
ARM GAS  /var/folders/rj/9n9dpytj2n74_jwlj_p0xk9m0000gn/T//ccJgApBP.s 			page 15


 209 00da DDE90601 		ldrd	r0, [sp, #24]
 210 00de FFF7FEFF 		bl	__aeabi_dmul
 211              	.LVL13:
 212 00e2 CDE90001 		strd	r0, [sp]
 213 00e6 4246     		mov	r2, r8
 214 00e8 4B46     		mov	r3, r9
 215 00ea 5D49     		ldr	r1, .L26+16
 216 00ec 0AA8     		add	r0, sp, #40
 217 00ee FFF7FEFF 		bl	sprintf
 218              	.LVL14:
 568:Core/Src/main.c ****             HAL_UART_Transmit(&huart6, (uint8_t *)buf, strlen(buf), 1000);
 219              		.loc 1 568 13 is_stmt 1 view .LVU25
 220              		.loc 1 568 56 is_stmt 0 view .LVU26
 221 00f2 0AA8     		add	r0, sp, #40
 222 00f4 FFF7FEFF 		bl	strlen
 223              	.LVL15:
 224              		.loc 1 568 13 discriminator 1 view .LVU27
 225 00f8 4FF47A73 		mov	r3, #1000
 226 00fc 82B2     		uxth	r2, r0
 227 00fe 0AA9     		add	r1, sp, #40
 228 0100 5848     		ldr	r0, .L26+20
 229 0102 FFF7FEFF 		bl	HAL_UART_Transmit
 230              	.LVL16:
 231              	.LBE6:
 564:Core/Src/main.c ****         {
 232              		.loc 1 564 48 is_stmt 1 discriminator 3 view .LVU28
 233 0106 0AF1010A 		add	r10, r10, #1
 234              	.LVL17:
 564:Core/Src/main.c ****         {
 235              		.loc 1 564 48 is_stmt 0 discriminator 3 view .LVU29
 236 010a 1FFA8AFA 		uxth	r10, r10
 237              	.LVL18:
 238              	.L11:
 564:Core/Src/main.c ****         {
 239              		.loc 1 564 32 is_stmt 1 discriminator 1 view .LVU30
 240 010e AA45     		cmp	r10, r5
 241 0110 87D3     		bcc	.L12
 242              	.LVL19:
 243              	.L3:
 564:Core/Src/main.c ****         {
 244              		.loc 1 564 32 is_stmt 0 discriminator 1 view .LVU31
 245              	.LBE5:
 246              	.LBE4:
 569:Core/Src/main.c ****         }
 570:Core/Src/main.c ****         break;
 571:Core/Src/main.c ****     case SAMPLE_RESISTANCE:
 572:Core/Src/main.c ****         ResistanceSample_TypeDef *resistance_samples = (ResistanceSample_TypeDef *)samples;
 573:Core/Src/main.c ****         for (uint16_t i = 0; i < num_samples; i++)
 574:Core/Src/main.c ****         {
 575:Core/Src/main.c ****             char buf[64];
 576:Core/Src/main.c ****             sprintf(buf, "Voltage: %.2f, Resistance: %.2f\n", (float)resistance_samples[i].voltage 
 577:Core/Src/main.c ****             HAL_UART_Transmit(&huart6, (uint8_t *)buf, strlen(buf), 1000);
 578:Core/Src/main.c ****         }
 579:Core/Src/main.c ****         break;
 580:Core/Src/main.c ****     case VALUE_CONDUCTIVITY:
 581:Core/Src/main.c ****         double *conductivity_values = (double *)samples;
 582:Core/Src/main.c ****         for (uint16_t i = 0; i < num_samples; i++)
ARM GAS  /var/folders/rj/9n9dpytj2n74_jwlj_p0xk9m0000gn/T//ccJgApBP.s 			page 16


 583:Core/Src/main.c ****         {
 584:Core/Src/main.c ****             char buf[64];
 585:Core/Src/main.c ****             sprintf(buf, "Conductivity: %.3f\n", conductivity_values[i]);
 586:Core/Src/main.c ****             HAL_UART_Transmit(&huart6, (uint8_t *)buf, strlen(buf), 1000);
 587:Core/Src/main.c ****         }
 588:Core/Src/main.c ****         break;
 589:Core/Src/main.c ****     case VALUE_TEMPERATURE:
 590:Core/Src/main.c ****         double *temperature_values = (double *)samples;
 591:Core/Src/main.c ****         for (uint16_t i = 0; i < num_samples; i++)
 592:Core/Src/main.c ****         {
 593:Core/Src/main.c ****             char buf[64];
 594:Core/Src/main.c ****             sprintf(buf, "\n\nTemperature: %.1f", temperature_values[i]);
 595:Core/Src/main.c ****             HAL_UART_Transmit(&huart6, (uint8_t *)buf, strlen(buf), 1000);
 596:Core/Src/main.c ****         }
 597:Core/Src/main.c ****         break;
 598:Core/Src/main.c ****     case VALUE_PRESSURE:
 599:Core/Src/main.c ****         double *pressure_values = (double *)samples;
 600:Core/Src/main.c ****         for (uint16_t i = 0; i < num_samples; i++)
 601:Core/Src/main.c ****         {
 602:Core/Src/main.c ****             char buf[64];
 603:Core/Src/main.c ****             sprintf(buf, "Pressure: %.3f\n", pressure_values[i]);
 604:Core/Src/main.c ****             HAL_UART_Transmit(&huart6, (uint8_t *)buf, strlen(buf), 1000);
 605:Core/Src/main.c ****         }
 606:Core/Src/main.c ****         break;
 607:Core/Src/main.c ****     case VALUE_SALINITY:
 608:Core/Src/main.c ****         double *salinity_values = (double *)samples;
 609:Core/Src/main.c ****         for (uint16_t i = 0; i < num_samples; i++)
 610:Core/Src/main.c ****         {
 611:Core/Src/main.c ****             char buf[64];
 612:Core/Src/main.c ****             sprintf(buf, "Salinity: %.3f\n", salinity_values[i]);
 613:Core/Src/main.c ****             HAL_UART_Transmit(&huart6, (uint8_t *)buf, strlen(buf), 1000);
 614:Core/Src/main.c ****         }
 615:Core/Src/main.c ****         break;
 616:Core/Src/main.c ****     }
 617:Core/Src/main.c **** }
 247              		.loc 1 617 1 view .LVU32
 248 0112 2AB0     		add	sp, sp, #168
 249              		.cfi_remember_state
 250              		.cfi_def_cfa_offset 40
 251              		@ sp needed
 252 0114 BDEC028B 		vldm	sp!, {d8}
 253              		.cfi_restore 80
 254              		.cfi_restore 81
 255              		.cfi_def_cfa_offset 32
 256 0118 BDE8F087 		pop	{r4, r5, r6, r7, r8, r9, r10, pc}
 257              	.LVL20:
 258              	.L18:
 259              		.cfi_restore_state
 560:Core/Src/main.c ****     {
 260              		.loc 1 560 5 view .LVU33
 261 011c 4FF0000A 		mov	r10, #0
 262 0120 F5E7     		b	.L11
 263              	.LVL21:
 264              	.L13:
 265              	.LBB17:
 266              	.LBB7:
 267              	.LBB8:
ARM GAS  /var/folders/rj/9n9dpytj2n74_jwlj_p0xk9m0000gn/T//ccJgApBP.s 			page 17


 575:Core/Src/main.c ****             sprintf(buf, "Voltage: %.2f, Resistance: %.2f\n", (float)resistance_samples[i].voltage 
 268              		.loc 1 575 13 is_stmt 1 view .LVU34
 576:Core/Src/main.c ****             HAL_UART_Transmit(&huart6, (uint8_t *)buf, strlen(buf), 1000);
 269              		.loc 1 576 13 view .LVU35
 576:Core/Src/main.c ****             HAL_UART_Transmit(&huart6, (uint8_t *)buf, strlen(buf), 1000);
 270              		.loc 1 576 88 is_stmt 0 view .LVU36
 271 0122 3301     		lsls	r3, r6, #4
 272 0124 04EB0617 		add	r7, r4, r6, lsl #4
 576:Core/Src/main.c ****             HAL_UART_Transmit(&huart6, (uint8_t *)buf, strlen(buf), 1000);
 273              		.loc 1 576 91 view .LVU37
 274 0128 E35A     		ldrh	r3, [r4, r3]
 275 012a 07EE903A 		vmov	s15, r3	@ int
 576:Core/Src/main.c ****             HAL_UART_Transmit(&huart6, (uint8_t *)buf, strlen(buf), 1000);
 276              		.loc 1 576 63 view .LVU38
 277 012e F8EE677A 		vcvt.f32.u32	s15, s15
 576:Core/Src/main.c ****             HAL_UART_Transmit(&huart6, (uint8_t *)buf, strlen(buf), 1000);
 278              		.loc 1 576 100 view .LVU39
 279 0132 9FED4A7A 		vldr.32	s14, .L26+12
 280 0136 67EE877A 		vmul.f32	s15, s15, s14
 281 013a 17EE900A 		vmov	r0, s15
 282 013e FFF7FEFF 		bl	__aeabi_f2d
 283              	.LVL22:
 576:Core/Src/main.c ****             HAL_UART_Transmit(&huart6, (uint8_t *)buf, strlen(buf), 1000);
 284              		.loc 1 576 13 view .LVU40
 285 0142 43A3     		adr	r3, .L26
 286 0144 D3E90023 		ldrd	r2, [r3]
 287 0148 FFF7FEFF 		bl	__aeabi_dmul
 288              	.LVL23:
 289 014c 0246     		mov	r2, r0
 290 014e 0B46     		mov	r3, r1
 291 0150 D7E90201 		ldrd	r0, [r7, #8]
 292 0154 CDE90001 		strd	r0, [sp]
 293 0158 4349     		ldr	r1, .L26+24
 294 015a 0AA8     		add	r0, sp, #40
 295 015c FFF7FEFF 		bl	sprintf
 296              	.LVL24:
 577:Core/Src/main.c ****         }
 297              		.loc 1 577 13 is_stmt 1 view .LVU41
 577:Core/Src/main.c ****         }
 298              		.loc 1 577 56 is_stmt 0 view .LVU42
 299 0160 0AA8     		add	r0, sp, #40
 300 0162 FFF7FEFF 		bl	strlen
 301              	.LVL25:
 577:Core/Src/main.c ****         }
 302              		.loc 1 577 13 discriminator 1 view .LVU43
 303 0166 4FF47A73 		mov	r3, #1000
 304 016a 82B2     		uxth	r2, r0
 305 016c 0AA9     		add	r1, sp, #40
 306 016e 3D48     		ldr	r0, .L26+20
 307 0170 FFF7FEFF 		bl	HAL_UART_Transmit
 308              	.LVL26:
 309              	.LBE8:
 573:Core/Src/main.c ****         {
 310              		.loc 1 573 48 is_stmt 1 discriminator 3 view .LVU44
 311 0174 0136     		adds	r6, r6, #1
 312              	.LVL27:
 573:Core/Src/main.c ****         {
ARM GAS  /var/folders/rj/9n9dpytj2n74_jwlj_p0xk9m0000gn/T//ccJgApBP.s 			page 18


 313              		.loc 1 573 48 is_stmt 0 discriminator 3 view .LVU45
 314 0176 B6B2     		uxth	r6, r6
 315              	.LVL28:
 316              	.L10:
 573:Core/Src/main.c ****         {
 317              		.loc 1 573 32 is_stmt 1 discriminator 1 view .LVU46
 318 0178 AE42     		cmp	r6, r5
 319 017a D2D3     		bcc	.L13
 320 017c C9E7     		b	.L3
 321              	.LVL29:
 322              	.L19:
 573:Core/Src/main.c ****         {
 323              		.loc 1 573 32 is_stmt 0 discriminator 1 view .LVU47
 324              	.LBE7:
 325              	.LBE17:
 560:Core/Src/main.c ****     {
 326              		.loc 1 560 5 view .LVU48
 327 017e 0026     		movs	r6, #0
 328 0180 FAE7     		b	.L10
 329              	.LVL30:
 330              	.L14:
 331              	.LBB18:
 332              	.LBB9:
 333              	.LBB10:
 584:Core/Src/main.c ****             sprintf(buf, "Conductivity: %.3f\n", conductivity_values[i]);
 334              		.loc 1 584 13 is_stmt 1 view .LVU49
 585:Core/Src/main.c ****             HAL_UART_Transmit(&huart6, (uint8_t *)buf, strlen(buf), 1000);
 335              		.loc 1 585 13 view .LVU50
 585:Core/Src/main.c ****             HAL_UART_Transmit(&huart6, (uint8_t *)buf, strlen(buf), 1000);
 336              		.loc 1 585 69 is_stmt 0 view .LVU51
 337 0182 04EBC603 		add	r3, r4, r6, lsl #3
 585:Core/Src/main.c ****             HAL_UART_Transmit(&huart6, (uint8_t *)buf, strlen(buf), 1000);
 338              		.loc 1 585 13 view .LVU52
 339 0186 D3E90023 		ldrd	r2, [r3]
 340 018a 3849     		ldr	r1, .L26+28
 341 018c 0AA8     		add	r0, sp, #40
 342 018e FFF7FEFF 		bl	sprintf
 343              	.LVL31:
 586:Core/Src/main.c ****         }
 344              		.loc 1 586 13 is_stmt 1 view .LVU53
 586:Core/Src/main.c ****         }
 345              		.loc 1 586 56 is_stmt 0 view .LVU54
 346 0192 0AA8     		add	r0, sp, #40
 347 0194 FFF7FEFF 		bl	strlen
 348              	.LVL32:
 586:Core/Src/main.c ****         }
 349              		.loc 1 586 13 discriminator 1 view .LVU55
 350 0198 4FF47A73 		mov	r3, #1000
 351 019c 82B2     		uxth	r2, r0
 352 019e 0AA9     		add	r1, sp, #40
 353 01a0 3048     		ldr	r0, .L26+20
 354 01a2 FFF7FEFF 		bl	HAL_UART_Transmit
 355              	.LVL33:
 356              	.LBE10:
 582:Core/Src/main.c ****         {
 357              		.loc 1 582 48 is_stmt 1 discriminator 3 view .LVU56
 358 01a6 0136     		adds	r6, r6, #1
ARM GAS  /var/folders/rj/9n9dpytj2n74_jwlj_p0xk9m0000gn/T//ccJgApBP.s 			page 19


 359              	.LVL34:
 582:Core/Src/main.c ****         {
 360              		.loc 1 582 48 is_stmt 0 discriminator 3 view .LVU57
 361 01a8 B6B2     		uxth	r6, r6
 362              	.LVL35:
 363              	.L9:
 582:Core/Src/main.c ****         {
 364              		.loc 1 582 32 is_stmt 1 discriminator 1 view .LVU58
 365 01aa AE42     		cmp	r6, r5
 366 01ac E9D3     		bcc	.L14
 367 01ae B0E7     		b	.L3
 368              	.LVL36:
 369              	.L20:
 582:Core/Src/main.c ****         {
 370              		.loc 1 582 32 is_stmt 0 discriminator 1 view .LVU59
 371              	.LBE9:
 372              	.LBE18:
 560:Core/Src/main.c ****     {
 373              		.loc 1 560 5 view .LVU60
 374 01b0 0026     		movs	r6, #0
 375 01b2 FAE7     		b	.L9
 376              	.LVL37:
 377              	.L15:
 378              	.LBB19:
 379              	.LBB11:
 380              	.LBB12:
 593:Core/Src/main.c ****             sprintf(buf, "\n\nTemperature: %.1f", temperature_values[i]);
 381              		.loc 1 593 13 is_stmt 1 view .LVU61
 594:Core/Src/main.c ****             HAL_UART_Transmit(&huart6, (uint8_t *)buf, strlen(buf), 1000);
 382              		.loc 1 594 13 view .LVU62
 594:Core/Src/main.c ****             HAL_UART_Transmit(&huart6, (uint8_t *)buf, strlen(buf), 1000);
 383              		.loc 1 594 69 is_stmt 0 view .LVU63
 384 01b4 04EBC603 		add	r3, r4, r6, lsl #3
 594:Core/Src/main.c ****             HAL_UART_Transmit(&huart6, (uint8_t *)buf, strlen(buf), 1000);
 385              		.loc 1 594 13 view .LVU64
 386 01b8 D3E90023 		ldrd	r2, [r3]
 387 01bc 2C49     		ldr	r1, .L26+32
 388 01be 0AA8     		add	r0, sp, #40
 389 01c0 FFF7FEFF 		bl	sprintf
 390              	.LVL38:
 595:Core/Src/main.c ****         }
 391              		.loc 1 595 13 is_stmt 1 view .LVU65
 595:Core/Src/main.c ****         }
 392              		.loc 1 595 56 is_stmt 0 view .LVU66
 393 01c4 0AA8     		add	r0, sp, #40
 394 01c6 FFF7FEFF 		bl	strlen
 395              	.LVL39:
 595:Core/Src/main.c ****         }
 396              		.loc 1 595 13 discriminator 1 view .LVU67
 397 01ca 4FF47A73 		mov	r3, #1000
 398 01ce 82B2     		uxth	r2, r0
 399 01d0 0AA9     		add	r1, sp, #40
 400 01d2 2448     		ldr	r0, .L26+20
 401 01d4 FFF7FEFF 		bl	HAL_UART_Transmit
 402              	.LVL40:
 403              	.LBE12:
 591:Core/Src/main.c ****         {
ARM GAS  /var/folders/rj/9n9dpytj2n74_jwlj_p0xk9m0000gn/T//ccJgApBP.s 			page 20


 404              		.loc 1 591 48 is_stmt 1 discriminator 3 view .LVU68
 405 01d8 0136     		adds	r6, r6, #1
 406              	.LVL41:
 591:Core/Src/main.c ****         {
 407              		.loc 1 591 48 is_stmt 0 discriminator 3 view .LVU69
 408 01da B6B2     		uxth	r6, r6
 409              	.LVL42:
 410              	.L8:
 591:Core/Src/main.c ****         {
 411              		.loc 1 591 32 is_stmt 1 discriminator 1 view .LVU70
 412 01dc AE42     		cmp	r6, r5
 413 01de E9D3     		bcc	.L15
 414 01e0 97E7     		b	.L3
 415              	.LVL43:
 416              	.L21:
 591:Core/Src/main.c ****         {
 417              		.loc 1 591 32 is_stmt 0 discriminator 1 view .LVU71
 418              	.LBE11:
 419              	.LBE19:
 560:Core/Src/main.c ****     {
 420              		.loc 1 560 5 view .LVU72
 421 01e2 0026     		movs	r6, #0
 422 01e4 FAE7     		b	.L8
 423              	.LVL44:
 424              	.L16:
 425              	.LBB20:
 426              	.LBB13:
 427              	.LBB14:
 602:Core/Src/main.c ****             sprintf(buf, "Pressure: %.3f\n", pressure_values[i]);
 428              		.loc 1 602 13 is_stmt 1 view .LVU73
 603:Core/Src/main.c ****             HAL_UART_Transmit(&huart6, (uint8_t *)buf, strlen(buf), 1000);
 429              		.loc 1 603 13 view .LVU74
 603:Core/Src/main.c ****             HAL_UART_Transmit(&huart6, (uint8_t *)buf, strlen(buf), 1000);
 430              		.loc 1 603 61 is_stmt 0 view .LVU75
 431 01e6 04EBC603 		add	r3, r4, r6, lsl #3
 603:Core/Src/main.c ****             HAL_UART_Transmit(&huart6, (uint8_t *)buf, strlen(buf), 1000);
 432              		.loc 1 603 13 view .LVU76
 433 01ea D3E90023 		ldrd	r2, [r3]
 434 01ee 2149     		ldr	r1, .L26+36
 435 01f0 0AA8     		add	r0, sp, #40
 436 01f2 FFF7FEFF 		bl	sprintf
 437              	.LVL45:
 604:Core/Src/main.c ****         }
 438              		.loc 1 604 13 is_stmt 1 view .LVU77
 604:Core/Src/main.c ****         }
 439              		.loc 1 604 56 is_stmt 0 view .LVU78
 440 01f6 0AA8     		add	r0, sp, #40
 441 01f8 FFF7FEFF 		bl	strlen
 442              	.LVL46:
 604:Core/Src/main.c ****         }
 443              		.loc 1 604 13 discriminator 1 view .LVU79
 444 01fc 4FF47A73 		mov	r3, #1000
 445 0200 82B2     		uxth	r2, r0
 446 0202 0AA9     		add	r1, sp, #40
 447 0204 1748     		ldr	r0, .L26+20
 448 0206 FFF7FEFF 		bl	HAL_UART_Transmit
 449              	.LVL47:
ARM GAS  /var/folders/rj/9n9dpytj2n74_jwlj_p0xk9m0000gn/T//ccJgApBP.s 			page 21


 450              	.LBE14:
 600:Core/Src/main.c ****         {
 451              		.loc 1 600 48 is_stmt 1 discriminator 3 view .LVU80
 452 020a 0136     		adds	r6, r6, #1
 453              	.LVL48:
 600:Core/Src/main.c ****         {
 454              		.loc 1 600 48 is_stmt 0 discriminator 3 view .LVU81
 455 020c B6B2     		uxth	r6, r6
 456              	.LVL49:
 457              	.L7:
 600:Core/Src/main.c ****         {
 458              		.loc 1 600 32 is_stmt 1 discriminator 1 view .LVU82
 459 020e AE42     		cmp	r6, r5
 460 0210 E9D3     		bcc	.L16
 461 0212 7EE7     		b	.L3
 462              	.LVL50:
 463              	.L22:
 600:Core/Src/main.c ****         {
 464              		.loc 1 600 32 is_stmt 0 discriminator 1 view .LVU83
 465              	.LBE13:
 466              	.LBE20:
 560:Core/Src/main.c ****     {
 467              		.loc 1 560 5 view .LVU84
 468 0214 0026     		movs	r6, #0
 469 0216 FAE7     		b	.L7
 470              	.LVL51:
 471              	.L17:
 472              	.LBB21:
 473              	.LBB15:
 474              	.LBB16:
 611:Core/Src/main.c ****             sprintf(buf, "Salinity: %.3f\n", salinity_values[i]);
 475              		.loc 1 611 13 is_stmt 1 view .LVU85
 612:Core/Src/main.c ****             HAL_UART_Transmit(&huart6, (uint8_t *)buf, strlen(buf), 1000);
 476              		.loc 1 612 13 view .LVU86
 612:Core/Src/main.c ****             HAL_UART_Transmit(&huart6, (uint8_t *)buf, strlen(buf), 1000);
 477              		.loc 1 612 61 is_stmt 0 view .LVU87
 478 0218 04EBC603 		add	r3, r4, r6, lsl #3
 612:Core/Src/main.c ****             HAL_UART_Transmit(&huart6, (uint8_t *)buf, strlen(buf), 1000);
 479              		.loc 1 612 13 view .LVU88
 480 021c D3E90023 		ldrd	r2, [r3]
 481 0220 1549     		ldr	r1, .L26+40
 482 0222 0AA8     		add	r0, sp, #40
 483 0224 FFF7FEFF 		bl	sprintf
 484              	.LVL52:
 613:Core/Src/main.c ****         }
 485              		.loc 1 613 13 is_stmt 1 view .LVU89
 613:Core/Src/main.c ****         }
 486              		.loc 1 613 56 is_stmt 0 view .LVU90
 487 0228 0AA8     		add	r0, sp, #40
 488 022a FFF7FEFF 		bl	strlen
 489              	.LVL53:
 613:Core/Src/main.c ****         }
 490              		.loc 1 613 13 discriminator 1 view .LVU91
 491 022e 4FF47A73 		mov	r3, #1000
 492 0232 82B2     		uxth	r2, r0
 493 0234 0AA9     		add	r1, sp, #40
 494 0236 0B48     		ldr	r0, .L26+20
ARM GAS  /var/folders/rj/9n9dpytj2n74_jwlj_p0xk9m0000gn/T//ccJgApBP.s 			page 22


 495 0238 FFF7FEFF 		bl	HAL_UART_Transmit
 496              	.LVL54:
 497              	.LBE16:
 609:Core/Src/main.c ****         {
 498              		.loc 1 609 48 is_stmt 1 discriminator 3 view .LVU92
 499 023c 0136     		adds	r6, r6, #1
 500              	.LVL55:
 609:Core/Src/main.c ****         {
 501              		.loc 1 609 48 is_stmt 0 discriminator 3 view .LVU93
 502 023e B6B2     		uxth	r6, r6
 503              	.LVL56:
 504              	.L5:
 609:Core/Src/main.c ****         {
 505              		.loc 1 609 32 is_stmt 1 discriminator 1 view .LVU94
 506 0240 AE42     		cmp	r6, r5
 507 0242 E9D3     		bcc	.L17
 508 0244 65E7     		b	.L3
 509              	.LVL57:
 510              	.L23:
 609:Core/Src/main.c ****         {
 511              		.loc 1 609 32 is_stmt 0 discriminator 1 view .LVU95
 512              	.LBE15:
 513              	.LBE21:
 560:Core/Src/main.c ****     {
 514              		.loc 1 560 5 view .LVU96
 515 0246 0026     		movs	r6, #0
 516 0248 FAE7     		b	.L5
 517              	.L27:
 518 024a 00BFAFF3 		.align	3
 518      0080
 519              	.L26:
 520 0250 66666666 		.word	1717986918
 521 0254 66660A40 		.word	1074423398
 522 0258 0000803A 		.word	981467136
 523 025c 00008039 		.word	964689920
 524 0260 00000000 		.word	.LC0
 525 0264 00000000 		.word	huart6
 526 0268 50000000 		.word	.LC1
 527 026c 74000000 		.word	.LC2
 528 0270 88000000 		.word	.LC3
 529 0274 9C000000 		.word	.LC4
 530 0278 AC000000 		.word	.LC5
 531              		.cfi_endproc
 532              	.LFE230:
 534              		.section	.rodata.transmit_sample_data_binary.str1.4,"aMS",%progbits,1
 535              		.align	2
 536              	.LC7:
 537 0000 25642C25 		.ascii	"%d,%d,%d,%d;\000"
 537      642C2564 
 537      2C25643B 
 537      00
 538 000d 000000   		.align	2
 539              	.LC6:
 540 0010 0A0A7C44 		.ascii	"\012\012|DAC Input|DAC Output|Calib x 11|Measuremen"
 540      41432049 
 540      6E707574 
 540      7C444143 
ARM GAS  /var/folders/rj/9n9dpytj2n74_jwlj_p0xk9m0000gn/T//ccJgApBP.s 			page 23


 540      204F7574 
 541 003d 74207820 		.ascii	"t x 11|\012\000"
 541      31317C0A 
 541      00
 542              		.section	.text.transmit_sample_data_binary,"ax",%progbits
 543              		.align	1
 544              		.global	transmit_sample_data_binary
 545              		.syntax unified
 546              		.thumb
 547              		.thumb_func
 549              	transmit_sample_data_binary:
 550              	.LVL58:
 551              	.LFB231:
 618:Core/Src/main.c **** 
 619:Core/Src/main.c **** void transmit_sample_data_binary(void *samples, uint16_t num_samples, Sample_Type sample_type)
 620:Core/Src/main.c **** {
 552              		.loc 1 620 1 is_stmt 1 view -0
 553              		.cfi_startproc
 554              		@ args = 0, pretend = 0, frame = 56
 555              		@ frame_needed = 0, uses_anonymous_args = 0
 621:Core/Src/main.c ****     switch (sample_type)
 556              		.loc 1 621 5 view .LVU98
 557 0000 02B1     		cbz	r2, .L38
 558 0002 7047     		bx	lr
 559              	.L38:
 620:Core/Src/main.c ****     switch (sample_type)
 560              		.loc 1 620 1 is_stmt 0 view .LVU99
 561 0004 F0B5     		push	{r4, r5, r6, r7, lr}
 562              		.cfi_def_cfa_offset 20
 563              		.cfi_offset 4, -20
 564              		.cfi_offset 5, -16
 565              		.cfi_offset 6, -12
 566              		.cfi_offset 7, -8
 567              		.cfi_offset 14, -4
 568 0006 91B0     		sub	sp, sp, #68
 569              		.cfi_def_cfa_offset 88
 570 0008 0546     		mov	r5, r0
 571 000a 0F46     		mov	r7, r1
 572              	.LBB22:
 622:Core/Src/main.c ****     {
 623:Core/Src/main.c ****     case SAMPLE_VOLTAGE:
 624:Core/Src/main.c ****         VoltageSample_TypeDef *voltage_samples = (VoltageSample_TypeDef *)samples;
 573              		.loc 1 624 9 is_stmt 1 view .LVU100
 574              	.LVL59:
 625:Core/Src/main.c ****         char buf[] = "\n\n|DAC Input|DAC Output|Calib x 11|Measurement x 11|\n";
 575              		.loc 1 625 9 view .LVU101
 576              		.loc 1 625 14 is_stmt 0 view .LVU102
 577 000c 02AC     		add	r4, sp, #8
 578 000e 1C4E     		ldr	r6, .L39
 579 0010 0FCE     		ldmia	r6!, {r0, r1, r2, r3}
 580              	.LVL60:
 581              		.loc 1 625 14 view .LVU103
 582 0012 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 583 0014 0FCE     		ldmia	r6!, {r0, r1, r2, r3}
 584 0016 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 585 0018 0FCE     		ldmia	r6!, {r0, r1, r2, r3}
 586 001a 0FC4     		stmia	r4!, {r0, r1, r2, r3}
ARM GAS  /var/folders/rj/9n9dpytj2n74_jwlj_p0xk9m0000gn/T//ccJgApBP.s 			page 24


 587 001c 96E80300 		ldm	r6, {r0, r1}
 588 0020 44F8040B 		str	r0, [r4], #4
 589 0024 2180     		strh	r1, [r4]	@ movhi
 626:Core/Src/main.c ****         HAL_UART_Transmit(&huart6, (uint8_t *)buf, strlen(buf), 1000);
 590              		.loc 1 626 9 is_stmt 1 view .LVU104
 591              		.loc 1 626 52 is_stmt 0 view .LVU105
 592 0026 02A8     		add	r0, sp, #8
 593 0028 FFF7FEFF 		bl	strlen
 594              	.LVL61:
 595              		.loc 1 626 9 discriminator 1 view .LVU106
 596 002c 4FF47A73 		mov	r3, #1000
 597 0030 82B2     		uxth	r2, r0
 598 0032 02A9     		add	r1, sp, #8
 599 0034 1348     		ldr	r0, .L39+4
 600 0036 FFF7FEFF 		bl	HAL_UART_Transmit
 601              	.LVL62:
 627:Core/Src/main.c ****         for (uint16_t i = 0; i < num_samples; i++)
 602              		.loc 1 627 9 is_stmt 1 view .LVU107
 603              	.LBB23:
 604              		.loc 1 627 14 view .LVU108
 605              		.loc 1 627 23 is_stmt 0 view .LVU109
 606 003a 0024     		movs	r4, #0
 607              		.loc 1 627 9 view .LVU110
 608 003c 1BE0     		b	.L32
 609              	.LVL63:
 610              	.L33:
 628:Core/Src/main.c ****         {
 629:Core/Src/main.c ****             sprintf(buf, "%d,%d,%d,%d;", voltage_samples[i].dac_input, voltage_samples[i].dac_outpu
 611              		.loc 1 629 13 is_stmt 1 view .LVU111
 612              		.loc 1 629 57 is_stmt 0 view .LVU112
 613 003e 05EBC403 		add	r3, r5, r4, lsl #3
 614              		.loc 1 629 121 view .LVU113
 615 0042 B3F90420 		ldrsh	r2, [r3, #4]
 616              		.loc 1 629 147 view .LVU114
 617 0046 B3F90610 		ldrsh	r1, [r3, #6]
 618              		.loc 1 629 13 view .LVU115
 619 004a 0191     		str	r1, [sp, #4]
 620 004c 0092     		str	r2, [sp]
 621 004e B3F90230 		ldrsh	r3, [r3, #2]
 622 0052 35F93420 		ldrsh	r2, [r5, r4, lsl #3]
 623 0056 0C49     		ldr	r1, .L39+8
 624 0058 02A8     		add	r0, sp, #8
 625 005a FFF7FEFF 		bl	sprintf
 626              	.LVL64:
 630:Core/Src/main.c ****             HAL_UART_Transmit(&huart6, (uint8_t *)buf, strlen(buf), 1000);
 627              		.loc 1 630 13 is_stmt 1 view .LVU116
 628              		.loc 1 630 56 is_stmt 0 view .LVU117
 629 005e 02A8     		add	r0, sp, #8
 630 0060 FFF7FEFF 		bl	strlen
 631              	.LVL65:
 632              		.loc 1 630 13 discriminator 1 view .LVU118
 633 0064 4FF47A73 		mov	r3, #1000
 634 0068 82B2     		uxth	r2, r0
 635 006a 02A9     		add	r1, sp, #8
 636 006c 0548     		ldr	r0, .L39+4
 637 006e FFF7FEFF 		bl	HAL_UART_Transmit
 638              	.LVL66:
ARM GAS  /var/folders/rj/9n9dpytj2n74_jwlj_p0xk9m0000gn/T//ccJgApBP.s 			page 25


 627:Core/Src/main.c ****         for (uint16_t i = 0; i < num_samples; i++)
 639              		.loc 1 627 48 is_stmt 1 discriminator 3 view .LVU119
 640 0072 0134     		adds	r4, r4, #1
 641              	.LVL67:
 627:Core/Src/main.c ****         for (uint16_t i = 0; i < num_samples; i++)
 642              		.loc 1 627 48 is_stmt 0 discriminator 3 view .LVU120
 643 0074 A4B2     		uxth	r4, r4
 644              	.LVL68:
 645              	.L32:
 627:Core/Src/main.c ****         for (uint16_t i = 0; i < num_samples; i++)
 646              		.loc 1 627 32 is_stmt 1 discriminator 1 view .LVU121
 647 0076 BC42     		cmp	r4, r7
 648 0078 E1D3     		bcc	.L33
 649              	.LBE23:
 650              	.LBE22:
 631:Core/Src/main.c ****         }
 632:Core/Src/main.c ****         break;
 633:Core/Src/main.c ****     case SAMPLE_RESISTANCE:
 634:Core/Src/main.c ****         // ResistanceSample_TypeDef *resistance_samples = (ResistanceSample_TypeDef *)samples;
 635:Core/Src/main.c ****         break;
 636:Core/Src/main.c ****     case VALUE_CONDUCTIVITY:
 637:Core/Src/main.c ****         // double *conductivity_values = (double *)samples;
 638:Core/Src/main.c ****         break;
 639:Core/Src/main.c ****     case VALUE_TEMPERATURE:
 640:Core/Src/main.c ****         // double *temperature_values = (double *)samples;
 641:Core/Src/main.c ****         break;
 642:Core/Src/main.c ****     case VALUE_PRESSURE:
 643:Core/Src/main.c ****         // double *pressure_values = (double *)samples;
 644:Core/Src/main.c ****         break;
 645:Core/Src/main.c ****     case VALUE_SALINITY:
 646:Core/Src/main.c ****         // double *salinity_values = (double *)samples;
 647:Core/Src/main.c ****         break;
 648:Core/Src/main.c ****     }
 649:Core/Src/main.c **** }
 651              		.loc 1 649 1 is_stmt 0 view .LVU122
 652 007a 11B0     		add	sp, sp, #68
 653              		.cfi_def_cfa_offset 20
 654              		@ sp needed
 655 007c F0BD     		pop	{r4, r5, r6, r7, pc}
 656              	.LVL69:
 657              	.L40:
 658              		.loc 1 649 1 view .LVU123
 659 007e 00BF     		.align	2
 660              	.L39:
 661 0080 10000000 		.word	.LC6
 662 0084 00000000 		.word	huart6
 663 0088 00000000 		.word	.LC7
 664              		.cfi_endproc
 665              	.LFE231:
 667              		.section	.text.Error_Handler,"ax",%progbits
 668              		.align	1
 669              		.global	Error_Handler
 670              		.syntax unified
 671              		.thumb
 672              		.thumb_func
 674              	Error_Handler:
 675              	.LFB232:
ARM GAS  /var/folders/rj/9n9dpytj2n74_jwlj_p0xk9m0000gn/T//ccJgApBP.s 			page 26


 650:Core/Src/main.c **** 
 651:Core/Src/main.c **** /* USER CODE END 4 */
 652:Core/Src/main.c **** 
 653:Core/Src/main.c **** /**
 654:Core/Src/main.c ****  * @brief  This function is executed in case of error occurrence.
 655:Core/Src/main.c ****  * @retval None
 656:Core/Src/main.c ****  */
 657:Core/Src/main.c **** void Error_Handler(void)
 658:Core/Src/main.c **** {
 676              		.loc 1 658 1 is_stmt 1 view -0
 677              		.cfi_startproc
 678              		@ Volatile: function does not return.
 679              		@ args = 0, pretend = 0, frame = 0
 680              		@ frame_needed = 0, uses_anonymous_args = 0
 681 0000 08B5     		push	{r3, lr}
 682              		.cfi_def_cfa_offset 8
 683              		.cfi_offset 3, -8
 684              		.cfi_offset 14, -4
 659:Core/Src/main.c ****     /* USER CODE BEGIN Error_Handler_Debug */
 660:Core/Src/main.c ****     /* User can add his own implementation to report the HAL error return state */
 661:Core/Src/main.c ****     __disable_irq();
 685              		.loc 1 661 5 view .LVU125
 686              	.LBB24:
 687              	.LBI24:
 688              		.file 2 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.4.1
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     27. May 2021
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2021 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
ARM GAS  /var/folders/rj/9n9dpytj2n74_jwlj_p0xk9m0000gn/T//ccJgApBP.s 			page 27


  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
ARM GAS  /var/folders/rj/9n9dpytj2n74_jwlj_p0xk9m0000gn/T//ccJgApBP.s 			page 28


  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __COMPILER_BARRIER
 117:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __COMPILER_BARRIER()                   __ASM volatile("":::"memory")
 118:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 120:Drivers/CMSIS/Include/cmsis_gcc.h **** /* #########################  Startup and Lowlevel Init  ######################## */
 121:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 122:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __PROGRAM_START
 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Initializes data and bss sections
 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details This default implementations initialized all data and additional bss
 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            sections relying on .copy.table and .zero.table specified properly
 128:Drivers/CMSIS/Include/cmsis_gcc.h ****            in the used linker script.
 129:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 130:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 131:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE __NO_RETURN void __cmsis_start(void)
 132:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 133:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern void _start(void) __NO_RETURN;
 134:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 135:Drivers/CMSIS/Include/cmsis_gcc.h ****   typedef struct {
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t const* src;
 137:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t* dest;
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t  wlen;
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****   } __copy_table_t;
 140:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 141:Drivers/CMSIS/Include/cmsis_gcc.h ****   typedef struct {
 142:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t* dest;
 143:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t  wlen;
 144:Drivers/CMSIS/Include/cmsis_gcc.h ****   } __zero_table_t;
 145:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 146:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __copy_table_t __copy_table_start__;
ARM GAS  /var/folders/rj/9n9dpytj2n74_jwlj_p0xk9m0000gn/T//ccJgApBP.s 			page 29


 147:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __copy_table_t __copy_table_end__;
 148:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __zero_table_t __zero_table_start__;
 149:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __zero_table_t __zero_table_end__;
 150:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 151:Drivers/CMSIS/Include/cmsis_gcc.h ****   for (__copy_table_t const* pTable = &__copy_table_start__; pTable < &__copy_table_end__; ++pTable
 152:Drivers/CMSIS/Include/cmsis_gcc.h ****     for(uint32_t i=0u; i<pTable->wlen; ++i) {
 153:Drivers/CMSIS/Include/cmsis_gcc.h ****       pTable->dest[i] = pTable->src[i];
 154:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 155:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 156:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 157:Drivers/CMSIS/Include/cmsis_gcc.h ****   for (__zero_table_t const* pTable = &__zero_table_start__; pTable < &__zero_table_end__; ++pTable
 158:Drivers/CMSIS/Include/cmsis_gcc.h ****     for(uint32_t i=0u; i<pTable->wlen; ++i) {
 159:Drivers/CMSIS/Include/cmsis_gcc.h ****       pTable->dest[i] = 0u;
 160:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 161:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 162:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 163:Drivers/CMSIS/Include/cmsis_gcc.h ****   _start();
 164:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 165:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 166:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __PROGRAM_START           __cmsis_start
 167:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 168:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 169:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __INITIAL_SP
 170:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __INITIAL_SP              __StackTop
 171:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 172:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 173:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __STACK_LIMIT
 174:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __STACK_LIMIT             __StackLimit
 175:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 176:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 177:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __VECTOR_TABLE
 178:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __VECTOR_TABLE            __Vectors
 179:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 180:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 181:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __VECTOR_TABLE_ATTRIBUTE
 182:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __VECTOR_TABLE_ATTRIBUTE  __attribute__((used, section(".vectors")))
 183:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 184:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 185:Drivers/CMSIS/Include/cmsis_gcc.h **** #if defined (__ARM_FEATURE_CMSE) && (__ARM_FEATURE_CMSE == 3U)
 186:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __STACK_SEAL
 187:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __STACK_SEAL              __StackSeal
 188:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 189:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 190:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __TZ_STACK_SEAL_SIZE
 191:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __TZ_STACK_SEAL_SIZE      8U
 192:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 193:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 194:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __TZ_STACK_SEAL_VALUE
 195:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __TZ_STACK_SEAL_VALUE     0xFEF5EDA5FEF5EDA5ULL
 196:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 197:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 198:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 199:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_STACKSEAL_S (uint32_t* stackTop) {
 200:Drivers/CMSIS/Include/cmsis_gcc.h ****   *((uint64_t *)stackTop) = __TZ_STACK_SEAL_VALUE;
 201:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 202:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 203:Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  /var/folders/rj/9n9dpytj2n74_jwlj_p0xk9m0000gn/T//ccJgApBP.s 			page 30


 204:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 205:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ##########################  Core Instruction Access  ######################### */
 206:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \defgroup CMSIS_Core_InstructionInterface CMSIS Core Instruction Interface
 207:Drivers/CMSIS/Include/cmsis_gcc.h ****   Access to dedicated instructions
 208:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 209:Drivers/CMSIS/Include/cmsis_gcc.h **** */
 210:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 211:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Define macros for porting to both thumb1 and thumb2.
 212:Drivers/CMSIS/Include/cmsis_gcc.h ****  * For thumb1, use low register (r0-r7), specified by constraint "l"
 213:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Otherwise, use general registers, specified by constraint "r" */
 214:Drivers/CMSIS/Include/cmsis_gcc.h **** #if defined (__thumb__) && !defined (__thumb2__)
 215:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=l" (r)
 216:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_RW_REG(r) "+l" (r)
 217:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "l" (r)
 218:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 219:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=r" (r)
 220:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_RW_REG(r) "+r" (r)
 221:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "r" (r)
 222:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 223:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 224:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 225:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   No Operation
 226:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details No Operation does nothing. This instruction can be used for code alignment purposes.
 227:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 228:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __NOP()                             __ASM volatile ("nop")
 229:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 230:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 231:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Wait For Interrupt
 232:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Wait For Interrupt is a hint instruction that suspends execution until one of a number o
 233:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 234:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __WFI()                             __ASM volatile ("wfi":::"memory")
 235:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 236:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 237:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 238:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Wait For Event
 239:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Wait For Event is a hint instruction that permits the processor to enter
 240:Drivers/CMSIS/Include/cmsis_gcc.h ****            a low-power state until one of a number of events occurs.
 241:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 242:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __WFE()                             __ASM volatile ("wfe":::"memory")
 243:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 244:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 245:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 246:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Send Event
 247:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Send Event is a hint instruction. It causes an event to be signaled to the CPU.
 248:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 249:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __SEV()                             __ASM volatile ("sev")
 250:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 251:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 252:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 253:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Instruction Synchronization Barrier
 254:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Instruction Synchronization Barrier flushes the pipeline in the processor,
 255:Drivers/CMSIS/Include/cmsis_gcc.h ****            so that all instructions following the ISB are fetched from cache or memory,
 256:Drivers/CMSIS/Include/cmsis_gcc.h ****            after the instruction has been completed.
 257:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 258:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __ISB(void)
 259:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 260:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("isb 0xF":::"memory");
ARM GAS  /var/folders/rj/9n9dpytj2n74_jwlj_p0xk9m0000gn/T//ccJgApBP.s 			page 31


 261:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 262:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 263:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 264:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 265:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Data Synchronization Barrier
 266:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Acts as a special kind of Data Memory Barrier.
 267:Drivers/CMSIS/Include/cmsis_gcc.h ****            It completes when all explicit memory accesses before this instruction complete.
 268:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 269:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __DSB(void)
 270:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 271:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("dsb 0xF":::"memory");
 272:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 273:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 274:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 275:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 276:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Data Memory Barrier
 277:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Ensures the apparent order of the explicit memory operations before
 278:Drivers/CMSIS/Include/cmsis_gcc.h ****            and after the instruction, without ensuring their completion.
 279:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 280:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __DMB(void)
 281:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 282:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("dmb 0xF":::"memory");
 283:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 284:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 285:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 286:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 287:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse byte order (32 bit)
 288:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the byte order in unsigned integer value. For example, 0x12345678 becomes 0x785
 289:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 290:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 291:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 292:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __REV(uint32_t value)
 293:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 294:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 5)
 295:Drivers/CMSIS/Include/cmsis_gcc.h ****   return __builtin_bswap32(value);
 296:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 297:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 298:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 299:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM ("rev %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 300:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 301:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 302:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 303:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 304:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 305:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 306:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse byte order (16 bit)
 307:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the byte order within each halfword of a word. For example, 0x12345678 becomes 
 308:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 309:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 310:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 311:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __REV16(uint32_t value)
 312:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 313:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 314:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 315:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM ("rev16 %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 316:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 317:Drivers/CMSIS/Include/cmsis_gcc.h **** }
ARM GAS  /var/folders/rj/9n9dpytj2n74_jwlj_p0xk9m0000gn/T//ccJgApBP.s 			page 32


 318:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 319:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 320:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 321:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse byte order (16 bit)
 322:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the byte order in a 16-bit value and returns the signed 16-bit result. For exam
 323:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 324:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 325:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 326:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE int16_t __REVSH(int16_t value)
 327:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 328:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
 329:Drivers/CMSIS/Include/cmsis_gcc.h ****   return (int16_t)__builtin_bswap16(value);
 330:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 331:Drivers/CMSIS/Include/cmsis_gcc.h ****   int16_t result;
 332:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 333:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM ("revsh %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 334:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 335:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 336:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 337:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 338:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 339:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 340:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Rotate Right in unsigned value (32 bit)
 341:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Rotate Right (immediate) provides the value of the contents of a register rotated by a v
 342:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    op1  Value to rotate
 343:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    op2  Number of Bits to rotate
 344:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Rotated value
 345:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 346:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __ROR(uint32_t op1, uint32_t op2)
 347:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 348:Drivers/CMSIS/Include/cmsis_gcc.h ****   op2 %= 32U;
 349:Drivers/CMSIS/Include/cmsis_gcc.h ****   if (op2 == 0U)
 350:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 351:Drivers/CMSIS/Include/cmsis_gcc.h ****     return op1;
 352:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 353:Drivers/CMSIS/Include/cmsis_gcc.h ****   return (op1 >> op2) | (op1 << (32U - op2));
 354:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 355:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 356:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 357:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 358:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Breakpoint
 359:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Causes the processor to enter Debug state.
 360:Drivers/CMSIS/Include/cmsis_gcc.h ****            Debug tools can use this to investigate system state when the instruction at a particula
 361:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  is ignored by the processor.
 362:Drivers/CMSIS/Include/cmsis_gcc.h ****                  If required, a debugger can use it to store additional information about the break
 363:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 364:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __BKPT(value)                       __ASM volatile ("bkpt "#value)
 365:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 366:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 367:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 368:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse bit order of value
 369:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the bit order of the given value.
 370:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 371:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 372:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 373:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __RBIT(uint32_t value)
 374:Drivers/CMSIS/Include/cmsis_gcc.h **** {
ARM GAS  /var/folders/rj/9n9dpytj2n74_jwlj_p0xk9m0000gn/T//ccJgApBP.s 			page 33


 375:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 376:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 377:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 378:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 379:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 380:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM ("rbit %0, %1" : "=r" (result) : "r" (value) );
 381:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 382:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t s = (4U /*sizeof(v)*/ * 8U) - 1U; /* extra shift needed at end */
 383:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 384:Drivers/CMSIS/Include/cmsis_gcc.h ****   result = value;                      /* r will be reversed bits of v; first get LSB of v */
 385:Drivers/CMSIS/Include/cmsis_gcc.h ****   for (value >>= 1U; value != 0U; value >>= 1U)
 386:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 387:Drivers/CMSIS/Include/cmsis_gcc.h ****     result <<= 1U;
 388:Drivers/CMSIS/Include/cmsis_gcc.h ****     result |= value & 1U;
 389:Drivers/CMSIS/Include/cmsis_gcc.h ****     s--;
 390:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 391:Drivers/CMSIS/Include/cmsis_gcc.h ****   result <<= s;                        /* shift when v's highest bits are zero */
 392:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 393:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 394:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 395:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 396:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 397:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 398:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Count leading zeros
 399:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Counts the number of leading zeros of a data value.
 400:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to count the leading zeros
 401:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             number of leading zeros in value
 402:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 403:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __CLZ(uint32_t value)
 404:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 405:Drivers/CMSIS/Include/cmsis_gcc.h ****   /* Even though __builtin_clz produces a CLZ instruction on ARM, formally
 406:Drivers/CMSIS/Include/cmsis_gcc.h ****      __builtin_clz(0) is undefined behaviour, so handle this case specially.
 407:Drivers/CMSIS/Include/cmsis_gcc.h ****      This guarantees ARM-compatible results if happening to compile on a non-ARM
 408:Drivers/CMSIS/Include/cmsis_gcc.h ****      target, and ensures the compiler doesn't decide to activate any
 409:Drivers/CMSIS/Include/cmsis_gcc.h ****      optimisations using the logic "value was passed to __builtin_clz, so it
 410:Drivers/CMSIS/Include/cmsis_gcc.h ****      is non-zero".
 411:Drivers/CMSIS/Include/cmsis_gcc.h ****      ARM GCC 7.3 and possibly earlier will optimise this test away, leaving a
 412:Drivers/CMSIS/Include/cmsis_gcc.h ****      single CLZ instruction.
 413:Drivers/CMSIS/Include/cmsis_gcc.h ****    */
 414:Drivers/CMSIS/Include/cmsis_gcc.h ****   if (value == 0U)
 415:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 416:Drivers/CMSIS/Include/cmsis_gcc.h ****     return 32U;
 417:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 418:Drivers/CMSIS/Include/cmsis_gcc.h ****   return __builtin_clz(value);
 419:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 420:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 421:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 422:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 423:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 424:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 425:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    )
 426:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 427:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDR Exclusive (8 bit)
 428:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive LDR instruction for 8 bit value.
 429:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 430:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             value of type uint8_t at (*ptr)
 431:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
ARM GAS  /var/folders/rj/9n9dpytj2n74_jwlj_p0xk9m0000gn/T//ccJgApBP.s 			page 34


 432:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __LDREXB(volatile uint8_t *addr)
 433:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 434:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 435:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 436:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
 437:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrexb %0, %1" : "=r" (result) : "Q" (*addr) );
 438:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 439:Drivers/CMSIS/Include/cmsis_gcc.h ****     /* Prior to GCC 4.8, "Q" will be expanded to [rx, #0] which is not
 440:Drivers/CMSIS/Include/cmsis_gcc.h ****        accepted by assembler. So has to use following less efficient pattern.
 441:Drivers/CMSIS/Include/cmsis_gcc.h ****     */
 442:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrexb %0, [%1]" : "=r" (result) : "r" (addr) : "memory" );
 443:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 444:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint8_t) result);    /* Add explicit type cast here */
 445:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 446:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 447:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 448:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 449:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDR Exclusive (16 bit)
 450:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive LDR instruction for 16 bit values.
 451:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 452:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint16_t at (*ptr)
 453:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 454:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint16_t __LDREXH(volatile uint16_t *addr)
 455:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 456:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 457:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 458:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
 459:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrexh %0, %1" : "=r" (result) : "Q" (*addr) );
 460:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 461:Drivers/CMSIS/Include/cmsis_gcc.h ****     /* Prior to GCC 4.8, "Q" will be expanded to [rx, #0] which is not
 462:Drivers/CMSIS/Include/cmsis_gcc.h ****        accepted by assembler. So has to use following less efficient pattern.
 463:Drivers/CMSIS/Include/cmsis_gcc.h ****     */
 464:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrexh %0, [%1]" : "=r" (result) : "r" (addr) : "memory" );
 465:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 466:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint16_t) result);    /* Add explicit type cast here */
 467:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 468:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 469:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 470:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 471:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDR Exclusive (32 bit)
 472:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive LDR instruction for 32 bit values.
 473:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 474:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint32_t at (*ptr)
 475:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 476:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __LDREXW(volatile uint32_t *addr)
 477:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 478:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 479:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 480:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 481:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 482:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 483:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 484:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 485:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 486:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STR Exclusive (8 bit)
 487:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive STR instruction for 8 bit values.
 488:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
ARM GAS  /var/folders/rj/9n9dpytj2n74_jwlj_p0xk9m0000gn/T//ccJgApBP.s 			page 35


 489:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 490:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
 491:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
 492:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 493:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STREXB(uint8_t value, volatile uint8_t *addr)
 494:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 495:Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
 496:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 497:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strexb %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" ((uint32_t)value) );
 498:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 499:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 500:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 501:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 502:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 503:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STR Exclusive (16 bit)
 504:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive STR instruction for 16 bit values.
 505:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 506:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 507:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
 508:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
 509:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 510:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STREXH(uint16_t value, volatile uint16_t *addr)
 511:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 512:Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
 513:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 514:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strexh %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" ((uint32_t)value) );
 515:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 516:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 517:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 518:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 519:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 520:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STR Exclusive (32 bit)
 521:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive STR instruction for 32 bit values.
 522:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 523:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 524:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
 525:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
 526:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 527:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STREXW(uint32_t value, volatile uint32_t *addr)
 528:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 529:Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
 530:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 531:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 532:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 533:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 534:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 535:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 536:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 537:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Remove the exclusive lock
 538:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Removes the exclusive lock which is created by LDREX.
 539:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 540:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __CLREX(void)
 541:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 542:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("clrex" ::: "memory");
 543:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 544:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 545:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
ARM GAS  /var/folders/rj/9n9dpytj2n74_jwlj_p0xk9m0000gn/T//ccJgApBP.s 			page 36


 546:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 547:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 548:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    ) */
 549:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 550:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 551:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 552:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 553:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 554:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 555:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Signed Saturate
 556:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Saturates a signed value.
 557:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  ARG1  Value to be saturated
 558:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  ARG2  Bit position to saturate to (1..32)
 559:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             Saturated value
 560:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 561:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __SSAT(ARG1, ARG2) \
 562:Drivers/CMSIS/Include/cmsis_gcc.h **** __extension__ \
 563:Drivers/CMSIS/Include/cmsis_gcc.h **** ({                          \
 564:Drivers/CMSIS/Include/cmsis_gcc.h ****   int32_t __RES, __ARG1 = (ARG1); \
 565:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("ssat %0, %1, %2" : "=r" (__RES) :  "I" (ARG2), "r" (__ARG1) : "cc" ); \
 566:Drivers/CMSIS/Include/cmsis_gcc.h ****   __RES; \
 567:Drivers/CMSIS/Include/cmsis_gcc.h ****  })
 568:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 569:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 570:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 571:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Unsigned Saturate
 572:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Saturates an unsigned value.
 573:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  ARG1  Value to be saturated
 574:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  ARG2  Bit position to saturate to (0..31)
 575:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             Saturated value
 576:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 577:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __USAT(ARG1, ARG2) \
 578:Drivers/CMSIS/Include/cmsis_gcc.h **** __extension__ \
 579:Drivers/CMSIS/Include/cmsis_gcc.h **** ({                          \
 580:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t __RES, __ARG1 = (ARG1); \
 581:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("usat %0, %1, %2" : "=r" (__RES) :  "I" (ARG2), "r" (__ARG1) : "cc" ); \
 582:Drivers/CMSIS/Include/cmsis_gcc.h ****   __RES; \
 583:Drivers/CMSIS/Include/cmsis_gcc.h ****  })
 584:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 585:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 586:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 587:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Rotate Right with Extend (32 bit)
 588:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Moves each bit of a bitstring right by one bit.
 589:Drivers/CMSIS/Include/cmsis_gcc.h ****            The carry input is shifted in at the left end of the bitstring.
 590:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to rotate
 591:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Rotated value
 592:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 593:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __RRX(uint32_t value)
 594:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 595:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 596:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 597:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("rrx %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 598:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 599:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 600:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 601:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 602:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
ARM GAS  /var/folders/rj/9n9dpytj2n74_jwlj_p0xk9m0000gn/T//ccJgApBP.s 			page 37


 603:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDRT Unprivileged (8 bit)
 604:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a Unprivileged LDRT instruction for 8 bit value.
 605:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 606:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             value of type uint8_t at (*ptr)
 607:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 608:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __LDRBT(volatile uint8_t *ptr)
 609:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 610:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 611:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 612:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
 613:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrbt %0, %1" : "=r" (result) : "Q" (*ptr) );
 614:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 615:Drivers/CMSIS/Include/cmsis_gcc.h ****     /* Prior to GCC 4.8, "Q" will be expanded to [rx, #0] which is not
 616:Drivers/CMSIS/Include/cmsis_gcc.h ****        accepted by assembler. So has to use following less efficient pattern.
 617:Drivers/CMSIS/Include/cmsis_gcc.h ****     */
 618:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrbt %0, [%1]" : "=r" (result) : "r" (ptr) : "memory" );
 619:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 620:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint8_t) result);    /* Add explicit type cast here */
 621:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 622:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 623:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 624:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 625:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDRT Unprivileged (16 bit)
 626:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a Unprivileged LDRT instruction for 16 bit values.
 627:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 628:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint16_t at (*ptr)
 629:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 630:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint16_t __LDRHT(volatile uint16_t *ptr)
 631:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 632:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 633:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 634:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
 635:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrht %0, %1" : "=r" (result) : "Q" (*ptr) );
 636:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 637:Drivers/CMSIS/Include/cmsis_gcc.h ****     /* Prior to GCC 4.8, "Q" will be expanded to [rx, #0] which is not
 638:Drivers/CMSIS/Include/cmsis_gcc.h ****        accepted by assembler. So has to use following less efficient pattern.
 639:Drivers/CMSIS/Include/cmsis_gcc.h ****     */
 640:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrht %0, [%1]" : "=r" (result) : "r" (ptr) : "memory" );
 641:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 642:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint16_t) result);    /* Add explicit type cast here */
 643:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 644:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 645:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 646:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 647:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDRT Unprivileged (32 bit)
 648:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a Unprivileged LDRT instruction for 32 bit values.
 649:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 650:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint32_t at (*ptr)
 651:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 652:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __LDRT(volatile uint32_t *ptr)
 653:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 654:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 655:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 656:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrt %0, %1" : "=r" (result) : "Q" (*ptr) );
 657:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 658:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 659:Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  /var/folders/rj/9n9dpytj2n74_jwlj_p0xk9m0000gn/T//ccJgApBP.s 			page 38


 660:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 661:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 662:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STRT Unprivileged (8 bit)
 663:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a Unprivileged STRT instruction for 8 bit values.
 664:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 665:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 666:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 667:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STRBT(uint8_t value, volatile uint8_t *ptr)
 668:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 669:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strbt %1, %0" : "=Q" (*ptr) : "r" ((uint32_t)value) );
 670:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 671:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 672:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 673:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 674:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STRT Unprivileged (16 bit)
 675:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a Unprivileged STRT instruction for 16 bit values.
 676:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 677:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 678:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 679:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STRHT(uint16_t value, volatile uint16_t *ptr)
 680:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 681:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strht %1, %0" : "=Q" (*ptr) : "r" ((uint32_t)value) );
 682:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 683:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 684:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 685:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 686:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STRT Unprivileged (32 bit)
 687:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a Unprivileged STRT instruction for 32 bit values.
 688:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 689:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 690:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 691:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STRT(uint32_t value, volatile uint32_t *ptr)
 692:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 693:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strt %1, %0" : "=Q" (*ptr) : "r" (value) );
 694:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 695:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 696:Drivers/CMSIS/Include/cmsis_gcc.h **** #else  /* ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 697:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 698:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    ) */
 699:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 700:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 701:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Signed Saturate
 702:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Saturates a signed value.
 703:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to be saturated
 704:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    sat  Bit position to saturate to (1..32)
 705:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             Saturated value
 706:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 707:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE int32_t __SSAT(int32_t val, uint32_t sat)
 708:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 709:Drivers/CMSIS/Include/cmsis_gcc.h ****   if ((sat >= 1U) && (sat <= 32U))
 710:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 711:Drivers/CMSIS/Include/cmsis_gcc.h ****     const int32_t max = (int32_t)((1U << (sat - 1U)) - 1U);
 712:Drivers/CMSIS/Include/cmsis_gcc.h ****     const int32_t min = -1 - max ;
 713:Drivers/CMSIS/Include/cmsis_gcc.h ****     if (val > max)
 714:Drivers/CMSIS/Include/cmsis_gcc.h ****     {
 715:Drivers/CMSIS/Include/cmsis_gcc.h ****       return max;
 716:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
ARM GAS  /var/folders/rj/9n9dpytj2n74_jwlj_p0xk9m0000gn/T//ccJgApBP.s 			page 39


 717:Drivers/CMSIS/Include/cmsis_gcc.h ****     else if (val < min)
 718:Drivers/CMSIS/Include/cmsis_gcc.h ****     {
 719:Drivers/CMSIS/Include/cmsis_gcc.h ****       return min;
 720:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 721:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 722:Drivers/CMSIS/Include/cmsis_gcc.h ****   return val;
 723:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 724:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 725:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 726:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Unsigned Saturate
 727:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Saturates an unsigned value.
 728:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to be saturated
 729:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    sat  Bit position to saturate to (0..31)
 730:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             Saturated value
 731:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 732:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __USAT(int32_t val, uint32_t sat)
 733:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 734:Drivers/CMSIS/Include/cmsis_gcc.h ****   if (sat <= 31U)
 735:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 736:Drivers/CMSIS/Include/cmsis_gcc.h ****     const uint32_t max = ((1U << sat) - 1U);
 737:Drivers/CMSIS/Include/cmsis_gcc.h ****     if (val > (int32_t)max)
 738:Drivers/CMSIS/Include/cmsis_gcc.h ****     {
 739:Drivers/CMSIS/Include/cmsis_gcc.h ****       return max;
 740:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 741:Drivers/CMSIS/Include/cmsis_gcc.h ****     else if (val < 0)
 742:Drivers/CMSIS/Include/cmsis_gcc.h ****     {
 743:Drivers/CMSIS/Include/cmsis_gcc.h ****       return 0U;
 744:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 745:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 746:Drivers/CMSIS/Include/cmsis_gcc.h ****   return (uint32_t)val;
 747:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 748:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 749:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 750:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 751:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    ) */
 752:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 753:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 754:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 755:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    )
 756:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 757:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Load-Acquire (8 bit)
 758:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a LDAB instruction for 8 bit value.
 759:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 760:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             value of type uint8_t at (*ptr)
 761:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 762:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __LDAB(volatile uint8_t *ptr)
 763:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 764:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 765:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 766:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldab %0, %1" : "=r" (result) : "Q" (*ptr) : "memory" );
 767:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint8_t) result);
 768:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 769:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 770:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 771:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 772:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Load-Acquire (16 bit)
 773:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a LDAH instruction for 16 bit values.
ARM GAS  /var/folders/rj/9n9dpytj2n74_jwlj_p0xk9m0000gn/T//ccJgApBP.s 			page 40


 774:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 775:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint16_t at (*ptr)
 776:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 777:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint16_t __LDAH(volatile uint16_t *ptr)
 778:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 779:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 780:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 781:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldah %0, %1" : "=r" (result) : "Q" (*ptr) : "memory" );
 782:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint16_t) result);
 783:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 784:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 785:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 786:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 787:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Load-Acquire (32 bit)
 788:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a LDA instruction for 32 bit values.
 789:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 790:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint32_t at (*ptr)
 791:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 792:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __LDA(volatile uint32_t *ptr)
 793:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 794:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 795:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 796:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("lda %0, %1" : "=r" (result) : "Q" (*ptr) : "memory" );
 797:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 798:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 799:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 800:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 801:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 802:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Store-Release (8 bit)
 803:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a STLB instruction for 8 bit values.
 804:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 805:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 806:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 807:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STLB(uint8_t value, volatile uint8_t *ptr)
 808:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 809:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("stlb %1, %0" : "=Q" (*ptr) : "r" ((uint32_t)value) : "memory" );
 810:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 811:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 812:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 813:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 814:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Store-Release (16 bit)
 815:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a STLH instruction for 16 bit values.
 816:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 817:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 818:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 819:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STLH(uint16_t value, volatile uint16_t *ptr)
 820:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 821:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("stlh %1, %0" : "=Q" (*ptr) : "r" ((uint32_t)value) : "memory" );
 822:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 823:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 824:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 825:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 826:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Store-Release (32 bit)
 827:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a STL instruction for 32 bit values.
 828:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 829:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 830:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
ARM GAS  /var/folders/rj/9n9dpytj2n74_jwlj_p0xk9m0000gn/T//ccJgApBP.s 			page 41


 831:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STL(uint32_t value, volatile uint32_t *ptr)
 832:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 833:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("stl %1, %0" : "=Q" (*ptr) : "r" ((uint32_t)value) : "memory" );
 834:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 835:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 836:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 837:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 838:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Load-Acquire Exclusive (8 bit)
 839:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a LDAB exclusive instruction for 8 bit value.
 840:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 841:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             value of type uint8_t at (*ptr)
 842:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 843:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __LDAEXB(volatile uint8_t *ptr)
 844:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 845:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 846:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 847:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldaexb %0, %1" : "=r" (result) : "Q" (*ptr) : "memory" );
 848:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint8_t) result);
 849:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 850:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 851:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 852:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 853:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Load-Acquire Exclusive (16 bit)
 854:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a LDAH exclusive instruction for 16 bit values.
 855:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 856:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint16_t at (*ptr)
 857:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 858:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint16_t __LDAEXH(volatile uint16_t *ptr)
 859:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 860:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 861:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 862:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldaexh %0, %1" : "=r" (result) : "Q" (*ptr) : "memory" );
 863:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint16_t) result);
 864:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 865:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 866:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 867:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 868:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Load-Acquire Exclusive (32 bit)
 869:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a LDA exclusive instruction for 32 bit values.
 870:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 871:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint32_t at (*ptr)
 872:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 873:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __LDAEX(volatile uint32_t *ptr)
 874:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 875:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 876:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 877:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldaex %0, %1" : "=r" (result) : "Q" (*ptr) : "memory" );
 878:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 879:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 880:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 881:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 882:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 883:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Store-Release Exclusive (8 bit)
 884:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a STLB exclusive instruction for 8 bit values.
 885:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 886:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 887:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
ARM GAS  /var/folders/rj/9n9dpytj2n74_jwlj_p0xk9m0000gn/T//ccJgApBP.s 			page 42


 888:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
 889:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 890:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STLEXB(uint8_t value, volatile uint8_t *ptr)
 891:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 892:Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
 893:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 894:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("stlexb %0, %2, %1" : "=&r" (result), "=Q" (*ptr) : "r" ((uint32_t)value) : "mem
 895:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 896:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 897:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 898:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 899:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 900:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Store-Release Exclusive (16 bit)
 901:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a STLH exclusive instruction for 16 bit values.
 902:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 903:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 904:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
 905:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
 906:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 907:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STLEXH(uint16_t value, volatile uint16_t *ptr)
 908:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 909:Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
 910:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 911:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("stlexh %0, %2, %1" : "=&r" (result), "=Q" (*ptr) : "r" ((uint32_t)value) : "mem
 912:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 913:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 914:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 915:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 916:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 917:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Store-Release Exclusive (32 bit)
 918:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a STL exclusive instruction for 32 bit values.
 919:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 920:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 921:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
 922:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
 923:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 924:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STLEX(uint32_t value, volatile uint32_t *ptr)
 925:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 926:Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
 927:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 928:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("stlex %0, %2, %1" : "=&r" (result), "=Q" (*ptr) : "r" ((uint32_t)value) : "memo
 929:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 930:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 931:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 932:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 933:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    ) */
 934:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 935:Drivers/CMSIS/Include/cmsis_gcc.h **** /*@}*/ /* end of group CMSIS_Core_InstructionInterface */
 936:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 937:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 938:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 939:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 940:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 941:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 942:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 943:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 944:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
ARM GAS  /var/folders/rj/9n9dpytj2n74_jwlj_p0xk9m0000gn/T//ccJgApBP.s 			page 43


 945:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 946:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing special-purpose register PRIMASK.
 947:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 948:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 949:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 950:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 951:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 952:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 953:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 954:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 955:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 956:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 957:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting special-purpose register PRIMASK.
 958:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 959:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 960:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 689              		.loc 2 960 27 view .LVU126
 690              	.LBB25:
 961:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 962:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 691              		.loc 2 962 3 view .LVU127
 692              		.syntax unified
 693              	@ 962 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 694 0002 72B6     		cpsid i
 695              	@ 0 "" 2
 696              		.thumb
 697              		.syntax unified
 698              	.LBE25:
 699              	.LBE24:
 662:Core/Src/main.c ****     HAL_GPIO_WritePin(LED_Red_GPIO_Port, LED_Red_Pin, GPIO_PIN_SET);
 700              		.loc 1 662 5 view .LVU128
 701 0004 0122     		movs	r2, #1
 702 0006 0221     		movs	r1, #2
 703 0008 0448     		ldr	r0, .L44
 704 000a FFF7FEFF 		bl	HAL_GPIO_WritePin
 705              	.LVL70:
 663:Core/Src/main.c ****     status = STATUS_ERROR;
 706              		.loc 1 663 5 view .LVU129
 707              		.loc 1 663 12 is_stmt 0 view .LVU130
 708 000e 0448     		ldr	r0, .L44+4
 709 0010 0121     		movs	r1, #1
 710 0012 0170     		strb	r1, [r0]
 664:Core/Src/main.c ****     rs485_transmit((uint8_t *)&status, 1);
 711              		.loc 1 664 5 is_stmt 1 view .LVU131
 712 0014 FFF7FEFF 		bl	rs485_transmit
 713              	.LVL71:
 714              	.L42:
 665:Core/Src/main.c ****     while (1)
 715              		.loc 1 665 5 view .LVU132
 666:Core/Src/main.c ****     {
 667:Core/Src/main.c ****     }
 716              		.loc 1 667 5 view .LVU133
 665:Core/Src/main.c ****     while (1)
 717              		.loc 1 665 11 view .LVU134
 718 0018 FEE7     		b	.L42
 719              	.L45:
 720 001a 00BF     		.align	2
ARM GAS  /var/folders/rj/9n9dpytj2n74_jwlj_p0xk9m0000gn/T//ccJgApBP.s 			page 44


 721              	.L44:
 722 001c 00040240 		.word	1073873920
 723 0020 00000000 		.word	status
 724              		.cfi_endproc
 725              	.LFE232:
 727              		.section	.text.SystemClock_Config,"ax",%progbits
 728              		.align	1
 729              		.global	SystemClock_Config
 730              		.syntax unified
 731              		.thumb
 732              		.thumb_func
 734              	SystemClock_Config:
 735              	.LFB224:
 341:Core/Src/main.c ****     RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 736              		.loc 1 341 1 view -0
 737              		.cfi_startproc
 738              		@ args = 0, pretend = 0, frame = 80
 739              		@ frame_needed = 0, uses_anonymous_args = 0
 740 0000 00B5     		push	{lr}
 741              		.cfi_def_cfa_offset 4
 742              		.cfi_offset 14, -4
 743 0002 95B0     		sub	sp, sp, #84
 744              		.cfi_def_cfa_offset 88
 342:Core/Src/main.c ****     RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 745              		.loc 1 342 5 view .LVU136
 342:Core/Src/main.c ****     RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 746              		.loc 1 342 24 is_stmt 0 view .LVU137
 747 0004 3022     		movs	r2, #48
 748 0006 0021     		movs	r1, #0
 749 0008 08A8     		add	r0, sp, #32
 750 000a FFF7FEFF 		bl	memset
 751              	.LVL72:
 343:Core/Src/main.c **** 
 752              		.loc 1 343 5 is_stmt 1 view .LVU138
 343:Core/Src/main.c **** 
 753              		.loc 1 343 24 is_stmt 0 view .LVU139
 754 000e 0023     		movs	r3, #0
 755 0010 0393     		str	r3, [sp, #12]
 756 0012 0493     		str	r3, [sp, #16]
 757 0014 0593     		str	r3, [sp, #20]
 758 0016 0693     		str	r3, [sp, #24]
 759 0018 0793     		str	r3, [sp, #28]
 347:Core/Src/main.c ****     __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE2);
 760              		.loc 1 347 5 is_stmt 1 view .LVU140
 761              	.LBB26:
 347:Core/Src/main.c ****     __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE2);
 762              		.loc 1 347 5 view .LVU141
 763 001a 0193     		str	r3, [sp, #4]
 347:Core/Src/main.c ****     __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE2);
 764              		.loc 1 347 5 view .LVU142
 765 001c 194A     		ldr	r2, .L52
 766 001e 116C     		ldr	r1, [r2, #64]
 767 0020 41F08051 		orr	r1, r1, #268435456
 768 0024 1164     		str	r1, [r2, #64]
 347:Core/Src/main.c ****     __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE2);
 769              		.loc 1 347 5 view .LVU143
 770 0026 126C     		ldr	r2, [r2, #64]
ARM GAS  /var/folders/rj/9n9dpytj2n74_jwlj_p0xk9m0000gn/T//ccJgApBP.s 			page 45


 771 0028 02F08052 		and	r2, r2, #268435456
 772 002c 0192     		str	r2, [sp, #4]
 347:Core/Src/main.c ****     __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE2);
 773              		.loc 1 347 5 view .LVU144
 774 002e 019A     		ldr	r2, [sp, #4]
 775              	.LBE26:
 347:Core/Src/main.c ****     __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE2);
 776              		.loc 1 347 5 view .LVU145
 348:Core/Src/main.c **** 
 777              		.loc 1 348 5 view .LVU146
 778              	.LBB27:
 348:Core/Src/main.c **** 
 779              		.loc 1 348 5 view .LVU147
 780 0030 0293     		str	r3, [sp, #8]
 348:Core/Src/main.c **** 
 781              		.loc 1 348 5 view .LVU148
 782 0032 1549     		ldr	r1, .L52+4
 783 0034 0A68     		ldr	r2, [r1]
 784 0036 22F44042 		bic	r2, r2, #49152
 785 003a 42F40042 		orr	r2, r2, #32768
 786 003e 0A60     		str	r2, [r1]
 348:Core/Src/main.c **** 
 787              		.loc 1 348 5 view .LVU149
 788 0040 0A68     		ldr	r2, [r1]
 789 0042 02F44042 		and	r2, r2, #49152
 790 0046 0292     		str	r2, [sp, #8]
 348:Core/Src/main.c **** 
 791              		.loc 1 348 5 view .LVU150
 792 0048 029A     		ldr	r2, [sp, #8]
 793              	.LBE27:
 348:Core/Src/main.c **** 
 794              		.loc 1 348 5 view .LVU151
 353:Core/Src/main.c ****     RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 795              		.loc 1 353 5 view .LVU152
 353:Core/Src/main.c ****     RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 796              		.loc 1 353 38 is_stmt 0 view .LVU153
 797 004a 0222     		movs	r2, #2
 798 004c 0892     		str	r2, [sp, #32]
 354:Core/Src/main.c ****     RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 799              		.loc 1 354 5 is_stmt 1 view .LVU154
 354:Core/Src/main.c ****     RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 800              		.loc 1 354 32 is_stmt 0 view .LVU155
 801 004e 0122     		movs	r2, #1
 802 0050 0B92     		str	r2, [sp, #44]
 355:Core/Src/main.c ****     RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 803              		.loc 1 355 5 is_stmt 1 view .LVU156
 355:Core/Src/main.c ****     RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 804              		.loc 1 355 43 is_stmt 0 view .LVU157
 805 0052 1022     		movs	r2, #16
 806 0054 0C92     		str	r2, [sp, #48]
 356:Core/Src/main.c ****     if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 807              		.loc 1 356 5 is_stmt 1 view .LVU158
 356:Core/Src/main.c ****     if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 808              		.loc 1 356 36 is_stmt 0 view .LVU159
 809 0056 0E93     		str	r3, [sp, #56]
 357:Core/Src/main.c ****     {
 810              		.loc 1 357 5 is_stmt 1 view .LVU160
ARM GAS  /var/folders/rj/9n9dpytj2n74_jwlj_p0xk9m0000gn/T//ccJgApBP.s 			page 46


 357:Core/Src/main.c ****     {
 811              		.loc 1 357 9 is_stmt 0 view .LVU161
 812 0058 08A8     		add	r0, sp, #32
 813 005a FFF7FEFF 		bl	HAL_RCC_OscConfig
 814              	.LVL73:
 357:Core/Src/main.c ****     {
 815              		.loc 1 357 8 discriminator 1 view .LVU162
 816 005e 68B9     		cbnz	r0, .L50
 364:Core/Src/main.c ****     RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_HSI;
 817              		.loc 1 364 5 is_stmt 1 view .LVU163
 364:Core/Src/main.c ****     RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_HSI;
 818              		.loc 1 364 33 is_stmt 0 view .LVU164
 819 0060 0F23     		movs	r3, #15
 820 0062 0393     		str	r3, [sp, #12]
 365:Core/Src/main.c ****     RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 821              		.loc 1 365 5 is_stmt 1 view .LVU165
 365:Core/Src/main.c ****     RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 822              		.loc 1 365 36 is_stmt 0 view .LVU166
 823 0064 0021     		movs	r1, #0
 824 0066 0491     		str	r1, [sp, #16]
 366:Core/Src/main.c ****     RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 825              		.loc 1 366 5 is_stmt 1 view .LVU167
 366:Core/Src/main.c ****     RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 826              		.loc 1 366 37 is_stmt 0 view .LVU168
 827 0068 0591     		str	r1, [sp, #20]
 367:Core/Src/main.c ****     RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 828              		.loc 1 367 5 is_stmt 1 view .LVU169
 367:Core/Src/main.c ****     RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 829              		.loc 1 367 38 is_stmt 0 view .LVU170
 830 006a 0691     		str	r1, [sp, #24]
 368:Core/Src/main.c **** 
 831              		.loc 1 368 5 is_stmt 1 view .LVU171
 368:Core/Src/main.c **** 
 832              		.loc 1 368 38 is_stmt 0 view .LVU172
 833 006c 0791     		str	r1, [sp, #28]
 370:Core/Src/main.c ****     {
 834              		.loc 1 370 5 is_stmt 1 view .LVU173
 370:Core/Src/main.c ****     {
 835              		.loc 1 370 9 is_stmt 0 view .LVU174
 836 006e 03A8     		add	r0, sp, #12
 837 0070 FFF7FEFF 		bl	HAL_RCC_ClockConfig
 838              	.LVL74:
 370:Core/Src/main.c ****     {
 839              		.loc 1 370 8 discriminator 1 view .LVU175
 840 0074 20B9     		cbnz	r0, .L51
 374:Core/Src/main.c **** 
 841              		.loc 1 374 1 view .LVU176
 842 0076 15B0     		add	sp, sp, #84
 843              		.cfi_remember_state
 844              		.cfi_def_cfa_offset 4
 845              		@ sp needed
 846 0078 5DF804FB 		ldr	pc, [sp], #4
 847              	.L50:
 848              		.cfi_restore_state
 359:Core/Src/main.c ****     }
 849              		.loc 1 359 9 is_stmt 1 view .LVU177
 850 007c FFF7FEFF 		bl	Error_Handler
ARM GAS  /var/folders/rj/9n9dpytj2n74_jwlj_p0xk9m0000gn/T//ccJgApBP.s 			page 47


 851              	.LVL75:
 852              	.L51:
 372:Core/Src/main.c ****     }
 853              		.loc 1 372 9 view .LVU178
 854 0080 FFF7FEFF 		bl	Error_Handler
 855              	.LVL76:
 856              	.L53:
 857              		.align	2
 858              	.L52:
 859 0084 00380240 		.word	1073887232
 860 0088 00700040 		.word	1073770496
 861              		.cfi_endproc
 862              	.LFE224:
 864              		.section	.text.rs485_transmit,"ax",%progbits
 865              		.align	1
 866              		.global	rs485_transmit
 867              		.syntax unified
 868              		.thumb
 869              		.thumb_func
 871              	rs485_transmit:
 872              	.LVL77:
 873              	.LFB227:
 455:Core/Src/main.c ****     HAL_GPIO_WritePin(RS485_DE_GPIO_Port, RS485_DE_Pin, GPIO_PIN_SET);
 874              		.loc 1 455 1 view -0
 875              		.cfi_startproc
 876              		@ args = 0, pretend = 0, frame = 0
 877              		@ frame_needed = 0, uses_anonymous_args = 0
 455:Core/Src/main.c ****     HAL_GPIO_WritePin(RS485_DE_GPIO_Port, RS485_DE_Pin, GPIO_PIN_SET);
 878              		.loc 1 455 1 is_stmt 0 view .LVU180
 879 0000 38B5     		push	{r3, r4, r5, lr}
 880              		.cfi_def_cfa_offset 16
 881              		.cfi_offset 3, -16
 882              		.cfi_offset 4, -12
 883              		.cfi_offset 5, -8
 884              		.cfi_offset 14, -4
 885 0002 0446     		mov	r4, r0
 886 0004 0D46     		mov	r5, r1
 456:Core/Src/main.c ****     if (HAL_HalfDuplex_EnableTransmitter(&huart1) != HAL_OK)
 887              		.loc 1 456 5 is_stmt 1 view .LVU181
 888 0006 0122     		movs	r2, #1
 889 0008 8021     		movs	r1, #128
 890              	.LVL78:
 456:Core/Src/main.c ****     if (HAL_HalfDuplex_EnableTransmitter(&huart1) != HAL_OK)
 891              		.loc 1 456 5 is_stmt 0 view .LVU182
 892 000a 0A48     		ldr	r0, .L60
 893              	.LVL79:
 456:Core/Src/main.c ****     if (HAL_HalfDuplex_EnableTransmitter(&huart1) != HAL_OK)
 894              		.loc 1 456 5 view .LVU183
 895 000c FFF7FEFF 		bl	HAL_GPIO_WritePin
 896              	.LVL80:
 457:Core/Src/main.c ****     {
 897              		.loc 1 457 5 is_stmt 1 view .LVU184
 457:Core/Src/main.c ****     {
 898              		.loc 1 457 9 is_stmt 0 view .LVU185
 899 0010 0948     		ldr	r0, .L60+4
 900 0012 FFF7FEFF 		bl	HAL_HalfDuplex_EnableTransmitter
 901              	.LVL81:
ARM GAS  /var/folders/rj/9n9dpytj2n74_jwlj_p0xk9m0000gn/T//ccJgApBP.s 			page 48


 457:Core/Src/main.c ****     {
 902              		.loc 1 457 8 discriminator 1 view .LVU186
 903 0016 40B9     		cbnz	r0, .L58
 461:Core/Src/main.c ****     {
 904              		.loc 1 461 5 is_stmt 1 view .LVU187
 461:Core/Src/main.c ****     {
 905              		.loc 1 461 9 is_stmt 0 view .LVU188
 906 0018 4FF47A73 		mov	r3, #1000
 907 001c 2A46     		mov	r2, r5
 908 001e 2146     		mov	r1, r4
 909 0020 0548     		ldr	r0, .L60+4
 910 0022 FFF7FEFF 		bl	HAL_UART_Transmit
 911              	.LVL82:
 461:Core/Src/main.c ****     {
 912              		.loc 1 461 8 discriminator 1 view .LVU189
 913 0026 10B9     		cbnz	r0, .L59
 465:Core/Src/main.c **** 
 914              		.loc 1 465 1 view .LVU190
 915 0028 38BD     		pop	{r3, r4, r5, pc}
 916              	.LVL83:
 917              	.L58:
 459:Core/Src/main.c ****     }
 918              		.loc 1 459 9 is_stmt 1 view .LVU191
 919 002a FFF7FEFF 		bl	Error_Handler
 920              	.LVL84:
 921              	.L59:
 463:Core/Src/main.c ****     }
 922              		.loc 1 463 9 view .LVU192
 923 002e FFF7FEFF 		bl	Error_Handler
 924              	.LVL85:
 925              	.L61:
 926 0032 00BF     		.align	2
 927              	.L60:
 928 0034 00040240 		.word	1073873920
 929 0038 00000000 		.word	huart1
 930              		.cfi_endproc
 931              	.LFE227:
 933              		.global	__aeabi_dcmpge
 934              		.global	__aeabi_dcmple
 935              		.global	__aeabi_dcmpeq
 936              		.global	__aeabi_dcmpgt
 937              		.global	__aeabi_d2iz
 938              		.global	__aeabi_i2d
 939              		.global	__aeabi_d2uiz
 940              		.global	__aeabi_ddiv
 941              		.section	.rodata.rs485_transmit_double.str1.4,"aMS",%progbits,1
 942              		.align	2
 943              	.LC8:
 944 0000 20202000 		.ascii	"   \000"
 945              		.section	.text.rs485_transmit_double,"ax",%progbits
 946              		.align	1
 947              		.global	rs485_transmit_double
 948              		.syntax unified
 949              		.thumb
 950              		.thumb_func
 952              	rs485_transmit_double:
 953              	.LVL86:
ARM GAS  /var/folders/rj/9n9dpytj2n74_jwlj_p0xk9m0000gn/T//ccJgApBP.s 			page 49


 954              	.LFB228:
 468:Core/Src/main.c ****     if ((value >= 1000) | (value <= -100))
 955              		.loc 1 468 1 view -0
 956              		.cfi_startproc
 957              		@ args = 0, pretend = 0, frame = 8
 958              		@ frame_needed = 0, uses_anonymous_args = 0
 468:Core/Src/main.c ****     if ((value >= 1000) | (value <= -100))
 959              		.loc 1 468 1 is_stmt 0 view .LVU194
 960 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 961              		.cfi_def_cfa_offset 20
 962              		.cfi_offset 4, -20
 963              		.cfi_offset 5, -16
 964              		.cfi_offset 6, -12
 965              		.cfi_offset 7, -8
 966              		.cfi_offset 14, -4
 967 0002 2DED048B 		vpush.64	{d8, d9}
 968              		.cfi_def_cfa_offset 36
 969              		.cfi_offset 80, -36
 970              		.cfi_offset 81, -32
 971              		.cfi_offset 82, -28
 972              		.cfi_offset 83, -24
 973 0006 83B0     		sub	sp, sp, #12
 974              		.cfi_def_cfa_offset 48
 975 0008 55EC104B 		vmov	r4, r5, d0
 469:Core/Src/main.c ****     {
 976              		.loc 1 469 5 is_stmt 1 view .LVU195
 469:Core/Src/main.c ****     {
 977              		.loc 1 469 25 is_stmt 0 view .LVU196
 978 000c 4FF00106 		mov	r6, #1
 979 0010 0022     		movs	r2, #0
 980 0012 954B     		ldr	r3, .L85+16
 981 0014 2046     		mov	r0, r4
 982 0016 2946     		mov	r1, r5
 983 0018 FFF7FEFF 		bl	__aeabi_dcmpge
 984              	.LVL87:
 469:Core/Src/main.c ****     {
 985              		.loc 1 469 25 view .LVU197
 986 001c 08B9     		cbnz	r0, .L63
 987 001e 4FF00006 		mov	r6, #0
 988              	.L63:
 989 0022 4FF00107 		mov	r7, #1
 990 0026 0022     		movs	r2, #0
 991 0028 904B     		ldr	r3, .L85+20
 992 002a 2046     		mov	r0, r4
 993 002c 2946     		mov	r1, r5
 994 002e FFF7FEFF 		bl	__aeabi_dcmple
 995              	.LVL88:
 996 0032 08B9     		cbnz	r0, .L64
 997 0034 4FF00007 		mov	r7, #0
 998              	.L64:
 999 0038 3E43     		orrs	r6, r6, r7
 469:Core/Src/main.c ****     {
 1000              		.loc 1 469 8 view .LVU198
 1001 003a 16F0FF0F 		tst	r6, #255
 1002 003e 16D1     		bne	.L82
 475:Core/Src/main.c **** 
 1003              		.loc 1 475 5 is_stmt 1 view .LVU199
ARM GAS  /var/folders/rj/9n9dpytj2n74_jwlj_p0xk9m0000gn/T//ccJgApBP.s 			page 50


 477:Core/Src/main.c ****     {
 1004              		.loc 1 477 5 view .LVU200
 477:Core/Src/main.c ****     {
 1005              		.loc 1 477 8 is_stmt 0 view .LVU201
 1006 0040 0022     		movs	r2, #0
 1007 0042 0023     		movs	r3, #0
 1008 0044 2046     		mov	r0, r4
 1009 0046 2946     		mov	r1, r5
 1010 0048 FFF7FEFF 		bl	__aeabi_dcmpeq
 1011              	.LVL89:
 1012 004c D8B1     		cbz	r0, .L79
 479:Core/Src/main.c ****         digits[1] = 0;
 1013              		.loc 1 479 9 is_stmt 1 view .LVU202
 479:Core/Src/main.c ****         digits[1] = 0;
 1014              		.loc 1 479 19 is_stmt 0 view .LVU203
 1015 004e 1023     		movs	r3, #16
 1016 0050 8DF80430 		strb	r3, [sp, #4]
 480:Core/Src/main.c ****         digits[2] = 0;
 1017              		.loc 1 480 9 is_stmt 1 view .LVU204
 480:Core/Src/main.c ****         digits[2] = 0;
 1018              		.loc 1 480 19 is_stmt 0 view .LVU205
 1019 0054 0023     		movs	r3, #0
 1020 0056 8DF80530 		strb	r3, [sp, #5]
 481:Core/Src/main.c ****     }
 1021              		.loc 1 481 9 is_stmt 1 view .LVU206
 481:Core/Src/main.c ****     }
 1022              		.loc 1 481 19 is_stmt 0 view .LVU207
 1023 005a 8DF80630 		strb	r3, [sp, #6]
 1024              	.LVL90:
 1025              	.L69:
 542:Core/Src/main.c **** }
 1026              		.loc 1 542 5 is_stmt 1 view .LVU208
 542:Core/Src/main.c **** }
 1027              		.loc 1 542 12 is_stmt 0 view .LVU209
 1028 005e 0321     		movs	r1, #3
 1029 0060 01A8     		add	r0, sp, #4
 1030 0062 FFF7FEFF 		bl	rs485_transmit
 1031              	.LVL91:
 1032              	.L62:
 543:Core/Src/main.c **** 
 1033              		.loc 1 543 1 view .LVU210
 1034 0066 03B0     		add	sp, sp, #12
 1035              		.cfi_remember_state
 1036              		.cfi_def_cfa_offset 36
 1037              		@ sp needed
 1038 0068 BDEC048B 		vldm	sp!, {d8-d9}
 1039              		.cfi_restore 82
 1040              		.cfi_restore 83
 1041              		.cfi_restore 80
 1042              		.cfi_restore 81
 1043              		.cfi_def_cfa_offset 20
 1044 006c F0BD     		pop	{r4, r5, r6, r7, pc}
 1045              	.LVL92:
 1046              	.L82:
 1047              		.cfi_restore_state
 1048              	.LBB28:
 471:Core/Src/main.c ****         return rs485_transmit(digits, DATA_PACKET_SIZE);
ARM GAS  /var/folders/rj/9n9dpytj2n74_jwlj_p0xk9m0000gn/T//ccJgApBP.s 			page 51


 1049              		.loc 1 471 9 is_stmt 1 view .LVU211
 471:Core/Src/main.c ****         return rs485_transmit(digits, DATA_PACKET_SIZE);
 1050              		.loc 1 471 17 is_stmt 0 view .LVU212
 1051 006e 804B     		ldr	r3, .L85+24
 1052 0070 1B68     		ldr	r3, [r3]
 1053 0072 ADF80030 		strh	r3, [sp]	@ movhi
 1054 0076 1B0C     		lsrs	r3, r3, #16
 1055 0078 8DF80230 		strb	r3, [sp, #2]
 472:Core/Src/main.c ****     }
 1056              		.loc 1 472 9 is_stmt 1 view .LVU213
 472:Core/Src/main.c ****     }
 1057              		.loc 1 472 16 is_stmt 0 view .LVU214
 1058 007c 0321     		movs	r1, #3
 1059 007e 6846     		mov	r0, sp
 1060 0080 FFF7FEFF 		bl	rs485_transmit
 1061              	.LVL93:
 1062 0084 EFE7     		b	.L62
 1063              	.L79:
 1064              	.LBE28:
 483:Core/Src/main.c ****     {
 1065              		.loc 1 483 10 is_stmt 1 view .LVU215
 483:Core/Src/main.c ****     {
 1066              		.loc 1 483 13 is_stmt 0 view .LVU216
 1067 0086 0022     		movs	r2, #0
 1068 0088 0023     		movs	r3, #0
 1069 008a 2046     		mov	r0, r4
 1070 008c 2946     		mov	r1, r5
 1071 008e FFF7FEFF 		bl	__aeabi_dcmpgt
 1072              	.LVL94:
 1073 0092 0028     		cmp	r0, #0
 1074 0094 69D0     		beq	.L80
 1075              	.LBB29:
 485:Core/Src/main.c ****         if (log_value > 0)
 1076              		.loc 1 485 9 is_stmt 1 view .LVU217
 485:Core/Src/main.c ****         if (log_value > 0)
 1077              		.loc 1 485 36 is_stmt 0 view .LVU218
 1078 0096 45EC104B 		vmov	d0, r4, r5
 1079 009a FFF7FEFF 		bl	log10
 1080              	.LVL95:
 1081 009e 51EC100B 		vmov	r0, r1, d0
 485:Core/Src/main.c ****         if (log_value > 0)
 1082              		.loc 1 485 16 discriminator 1 view .LVU219
 1083 00a2 FFF7FEFF 		bl	__aeabi_d2iz
 1084              	.LVL96:
 1085 00a6 46B2     		sxtb	r6, r0
 1086              	.LVL97:
 486:Core/Src/main.c ****         {
 1087              		.loc 1 486 9 is_stmt 1 view .LVU220
 486:Core/Src/main.c ****         {
 1088              		.loc 1 486 12 is_stmt 0 view .LVU221
 1089 00a8 002E     		cmp	r6, #0
 1090 00aa 47DC     		bgt	.L83
 1091              	.L72:
 491:Core/Src/main.c ****         value = fmod(value, 1) * 10;
 1092              		.loc 1 491 9 is_stmt 1 view .LVU222
 491:Core/Src/main.c ****         value = fmod(value, 1) * 10;
 1093              		.loc 1 491 21 is_stmt 0 view .LVU223
ARM GAS  /var/folders/rj/9n9dpytj2n74_jwlj_p0xk9m0000gn/T//ccJgApBP.s 			page 52


 1094 00ac 2046     		mov	r0, r4
 1095 00ae 2946     		mov	r1, r5
 1096 00b0 FFF7FEFF 		bl	__aeabi_d2uiz
 1097              	.LVL98:
 1098 00b4 C7B2     		uxtb	r7, r0
 491:Core/Src/main.c ****         value = fmod(value, 1) * 10;
 1099              		.loc 1 491 19 view .LVU224
 1100 00b6 8DF80470 		strb	r7, [sp, #4]
 492:Core/Src/main.c ****         digits[1] = (uint8_t)value;
 1101              		.loc 1 492 9 is_stmt 1 view .LVU225
 492:Core/Src/main.c ****         digits[1] = (uint8_t)value;
 1102              		.loc 1 492 17 is_stmt 0 view .LVU226
 1103 00ba 9FED679B 		vldr.64	d9, .L85
 1104 00be B0EE491A 		vmov.f32	s2, s18
 1105 00c2 F0EE691A 		vmov.f32	s3, s19
 1106 00c6 45EC104B 		vmov	d0, r4, r5
 1107 00ca FFF7FEFF 		bl	fmod
 1108              	.LVL99:
 1109 00ce 51EC100B 		vmov	r0, r1, d0
 492:Core/Src/main.c ****         digits[1] = (uint8_t)value;
 1110              		.loc 1 492 15 discriminator 1 view .LVU227
 1111 00d2 0022     		movs	r2, #0
 1112 00d4 674B     		ldr	r3, .L85+28
 1113 00d6 FFF7FEFF 		bl	__aeabi_dmul
 1114              	.LVL100:
 1115 00da 0246     		mov	r2, r0
 1116 00dc 0B46     		mov	r3, r1
 1117 00de 43EC182B 		vmov	d8, r2, r3
 1118              	.LVL101:
 493:Core/Src/main.c ****         value = fmod(value, 1) * 10;
 1119              		.loc 1 493 9 is_stmt 1 view .LVU228
 493:Core/Src/main.c ****         value = fmod(value, 1) * 10;
 1120              		.loc 1 493 21 is_stmt 0 view .LVU229
 1121 00e2 FFF7FEFF 		bl	__aeabi_d2uiz
 1122              	.LVL102:
 493:Core/Src/main.c ****         value = fmod(value, 1) * 10;
 1123              		.loc 1 493 19 view .LVU230
 1124 00e6 8DF80500 		strb	r0, [sp, #5]
 494:Core/Src/main.c ****         digits[2] = (uint8_t)round(value);
 1125              		.loc 1 494 9 is_stmt 1 view .LVU231
 494:Core/Src/main.c ****         digits[2] = (uint8_t)round(value);
 1126              		.loc 1 494 17 is_stmt 0 view .LVU232
 1127 00ea B0EE491A 		vmov.f32	s2, s18
 1128 00ee F0EE691A 		vmov.f32	s3, s19
 1129 00f2 B0EE480A 		vmov.f32	s0, s16
 1130 00f6 F0EE680A 		vmov.f32	s1, s17
 1131 00fa FFF7FEFF 		bl	fmod
 1132              	.LVL103:
 1133 00fe 51EC100B 		vmov	r0, r1, d0
 494:Core/Src/main.c ****         digits[2] = (uint8_t)round(value);
 1134              		.loc 1 494 15 discriminator 1 view .LVU233
 1135 0102 0022     		movs	r2, #0
 1136 0104 5B4B     		ldr	r3, .L85+28
 1137 0106 FFF7FEFF 		bl	__aeabi_dmul
 1138              	.LVL104:
 495:Core/Src/main.c **** 
 1139              		.loc 1 495 9 is_stmt 1 view .LVU234
ARM GAS  /var/folders/rj/9n9dpytj2n74_jwlj_p0xk9m0000gn/T//ccJgApBP.s 			page 53


 495:Core/Src/main.c **** 
 1140              		.loc 1 495 30 is_stmt 0 view .LVU235
 1141 010a 41EC100B 		vmov	d0, r0, r1
 1142 010e FFF7FEFF 		bl	round
 1143              	.LVL105:
 495:Core/Src/main.c **** 
 1144              		.loc 1 495 30 view .LVU236
 1145 0112 51EC100B 		vmov	r0, r1, d0
 495:Core/Src/main.c **** 
 1146              		.loc 1 495 21 discriminator 1 view .LVU237
 1147 0116 FFF7FEFF 		bl	__aeabi_d2uiz
 1148              	.LVL106:
 495:Core/Src/main.c **** 
 1149              		.loc 1 495 19 discriminator 1 view .LVU238
 1150 011a 8DF80600 		strb	r0, [sp, #6]
 497:Core/Src/main.c ****         {
 1151              		.loc 1 497 9 is_stmt 1 view .LVU239
 497:Core/Src/main.c ****         {
 1152              		.loc 1 497 12 is_stmt 0 view .LVU240
 1153 011e 002E     		cmp	r6, #0
 1154 0120 1EDD     		ble	.L73
 499:Core/Src/main.c ****             {
 1155              		.loc 1 499 13 is_stmt 1 view .LVU241
 499:Core/Src/main.c ****             {
 1156              		.loc 1 499 16 is_stmt 0 view .LVU242
 1157 0122 012E     		cmp	r6, #1
 1158 0124 9BDC     		bgt	.L69
 501:Core/Src/main.c ****             }
 1159              		.loc 1 501 17 is_stmt 1 view .LVU243
 501:Core/Src/main.c ****             }
 1160              		.loc 1 501 23 is_stmt 0 view .LVU244
 1161 0126 06F10803 		add	r3, r6, #8
 1162 012a 0DEB0300 		add	r0, sp, r3
 1163 012e 10F8043C 		ldrb	r3, [r0, #-4]	@ zero_extendqisi2
 501:Core/Src/main.c ****             }
 1164              		.loc 1 501 35 view .LVU245
 1165 0132 43F01003 		orr	r3, r3, #16
 1166 0136 00F8043C 		strb	r3, [r0, #-4]
 1167 013a 90E7     		b	.L69
 1168              	.LVL107:
 1169              	.L83:
 488:Core/Src/main.c ****         }
 1170              		.loc 1 488 13 is_stmt 1 view .LVU246
 488:Core/Src/main.c ****         }
 1171              		.loc 1 488 29 is_stmt 0 view .LVU247
 1172 013c 7042     		rsbs	r0, r6, #0
 1173 013e FFF7FEFF 		bl	__aeabi_i2d
 1174              	.LVL108:
 1175 0142 41EC110B 		vmov	d1, r0, r1
 1176 0146 9FED460B 		vldr.64	d0, .L85+8
 1177 014a FFF7FEFF 		bl	pow
 1178              	.LVL109:
 1179 014e 53EC102B 		vmov	r2, r3, d0
 488:Core/Src/main.c ****         }
 1180              		.loc 1 488 19 discriminator 1 view .LVU248
 1181 0152 2046     		mov	r0, r4
 1182 0154 2946     		mov	r1, r5
ARM GAS  /var/folders/rj/9n9dpytj2n74_jwlj_p0xk9m0000gn/T//ccJgApBP.s 			page 54


 1183 0156 FFF7FEFF 		bl	__aeabi_dmul
 1184              	.LVL110:
 1185 015a 0446     		mov	r4, r0
 1186              	.LVL111:
 488:Core/Src/main.c ****         }
 1187              		.loc 1 488 19 discriminator 1 view .LVU249
 1188 015c 0D46     		mov	r5, r1
 1189              	.LVL112:
 488:Core/Src/main.c ****         }
 1190              		.loc 1 488 19 discriminator 1 view .LVU250
 1191 015e A5E7     		b	.L72
 1192              	.LVL113:
 1193              	.L73:
 507:Core/Src/main.c ****         }
 1194              		.loc 1 507 13 is_stmt 1 view .LVU251
 507:Core/Src/main.c ****         }
 1195              		.loc 1 507 23 is_stmt 0 view .LVU252
 1196 0160 47F01007 		orr	r7, r7, #16
 1197 0164 8DF80470 		strb	r7, [sp, #4]
 1198 0168 79E7     		b	.L69
 1199              	.LVL114:
 1200              	.L80:
 507:Core/Src/main.c ****         }
 1201              		.loc 1 507 23 view .LVU253
 1202              	.LBE29:
 1203              	.LBB30:
 512:Core/Src/main.c ****         int8_t log_value = (int8_t)log10(value) + 1;
 1204              		.loc 1 512 9 is_stmt 1 view .LVU254
 512:Core/Src/main.c ****         int8_t log_value = (int8_t)log10(value) + 1;
 1205              		.loc 1 512 15 is_stmt 0 view .LVU255
 1206 016a 2646     		mov	r6, r4
 1207 016c 05F10047 		add	r7, r5, #-2147483648
 1208              	.LVL115:
 513:Core/Src/main.c ****         if (log_value > 0)
 1209              		.loc 1 513 9 is_stmt 1 view .LVU256
 513:Core/Src/main.c ****         if (log_value > 0)
 1210              		.loc 1 513 36 is_stmt 0 view .LVU257
 1211 0170 47EC106B 		vmov	d0, r6, r7
 1212 0174 FFF7FEFF 		bl	log10
 1213              	.LVL116:
 1214 0178 51EC100B 		vmov	r0, r1, d0
 513:Core/Src/main.c ****         if (log_value > 0)
 1215              		.loc 1 513 28 discriminator 1 view .LVU258
 1216 017c FFF7FEFF 		bl	__aeabi_d2iz
 1217              	.LVL117:
 1218 0180 C4B2     		uxtb	r4, r0
 513:Core/Src/main.c ****         if (log_value > 0)
 1219              		.loc 1 513 49 discriminator 1 view .LVU259
 1220 0182 0134     		adds	r4, r4, #1
 513:Core/Src/main.c ****         if (log_value > 0)
 1221              		.loc 1 513 16 discriminator 1 view .LVU260
 1222 0184 64B2     		sxtb	r4, r4
 1223              	.LVL118:
 514:Core/Src/main.c ****         {
 1224              		.loc 1 514 9 is_stmt 1 view .LVU261
 514:Core/Src/main.c ****         {
 1225              		.loc 1 514 12 is_stmt 0 view .LVU262
ARM GAS  /var/folders/rj/9n9dpytj2n74_jwlj_p0xk9m0000gn/T//ccJgApBP.s 			page 55


 1226 0186 002C     		cmp	r4, #0
 1227 0188 09DC     		bgt	.L84
 518:Core/Src/main.c ****         {
 1228              		.loc 1 518 14 is_stmt 1 view .LVU263
 518:Core/Src/main.c ****         {
 1229              		.loc 1 518 17 is_stmt 0 view .LVU264
 1230 018a CCB9     		cbnz	r4, .L75
 520:Core/Src/main.c ****         }
 1231              		.loc 1 520 13 is_stmt 1 view .LVU265
 520:Core/Src/main.c ****         }
 1232              		.loc 1 520 19 is_stmt 0 view .LVU266
 1233 018c 0022     		movs	r2, #0
 1234 018e 394B     		ldr	r3, .L85+28
 1235 0190 3046     		mov	r0, r6
 1236 0192 3946     		mov	r1, r7
 1237 0194 FFF7FEFF 		bl	__aeabi_ddiv
 1238              	.LVL119:
 1239 0198 0646     		mov	r6, r0
 1240              	.LVL120:
 520:Core/Src/main.c ****         }
 1241              		.loc 1 520 19 view .LVU267
 1242 019a 0F46     		mov	r7, r1
 1243              	.LVL121:
 520:Core/Src/main.c ****         }
 1244              		.loc 1 520 19 view .LVU268
 1245 019c 10E0     		b	.L75
 1246              	.L84:
 516:Core/Src/main.c ****         }
 1247              		.loc 1 516 13 is_stmt 1 view .LVU269
 516:Core/Src/main.c ****         }
 1248              		.loc 1 516 29 is_stmt 0 view .LVU270
 1249 019e 6042     		rsbs	r0, r4, #0
 1250 01a0 FFF7FEFF 		bl	__aeabi_i2d
 1251              	.LVL122:
 1252 01a4 41EC110B 		vmov	d1, r0, r1
 1253 01a8 9FED2D0B 		vldr.64	d0, .L85+8
 1254 01ac FFF7FEFF 		bl	pow
 1255              	.LVL123:
 1256 01b0 53EC102B 		vmov	r2, r3, d0
 516:Core/Src/main.c ****         }
 1257              		.loc 1 516 19 discriminator 1 view .LVU271
 1258 01b4 3046     		mov	r0, r6
 1259 01b6 3946     		mov	r1, r7
 1260 01b8 FFF7FEFF 		bl	__aeabi_dmul
 1261              	.LVL124:
 1262 01bc 0646     		mov	r6, r0
 1263              	.LVL125:
 516:Core/Src/main.c ****         }
 1264              		.loc 1 516 19 discriminator 1 view .LVU272
 1265 01be 0F46     		mov	r7, r1
 1266              	.LVL126:
 1267              	.L75:
 523:Core/Src/main.c ****         value = fmod(value, 1) * 10;
 1268              		.loc 1 523 9 is_stmt 1 view .LVU273
 523:Core/Src/main.c ****         value = fmod(value, 1) * 10;
 1269              		.loc 1 523 19 is_stmt 0 view .LVU274
 1270 01c0 2023     		movs	r3, #32
ARM GAS  /var/folders/rj/9n9dpytj2n74_jwlj_p0xk9m0000gn/T//ccJgApBP.s 			page 56


 1271 01c2 8DF80430 		strb	r3, [sp, #4]
 524:Core/Src/main.c ****         digits[1] = (uint8_t)value;
 1272              		.loc 1 524 9 is_stmt 1 view .LVU275
 524:Core/Src/main.c ****         digits[1] = (uint8_t)value;
 1273              		.loc 1 524 17 is_stmt 0 view .LVU276
 1274 01c6 9FED249B 		vldr.64	d9, .L85
 1275 01ca B0EE491A 		vmov.f32	s2, s18
 1276 01ce F0EE691A 		vmov.f32	s3, s19
 1277 01d2 47EC106B 		vmov	d0, r6, r7
 1278 01d6 FFF7FEFF 		bl	fmod
 1279              	.LVL127:
 1280 01da 51EC100B 		vmov	r0, r1, d0
 524:Core/Src/main.c ****         digits[1] = (uint8_t)value;
 1281              		.loc 1 524 15 discriminator 1 view .LVU277
 1282 01de 0022     		movs	r2, #0
 1283 01e0 244B     		ldr	r3, .L85+28
 1284 01e2 FFF7FEFF 		bl	__aeabi_dmul
 1285              	.LVL128:
 1286 01e6 0246     		mov	r2, r0
 1287 01e8 0B46     		mov	r3, r1
 1288 01ea 43EC182B 		vmov	d8, r2, r3
 1289              	.LVL129:
 525:Core/Src/main.c ****         value = fmod(value, 1) * 10;
 1290              		.loc 1 525 9 is_stmt 1 view .LVU278
 525:Core/Src/main.c ****         value = fmod(value, 1) * 10;
 1291              		.loc 1 525 21 is_stmt 0 view .LVU279
 1292 01ee FFF7FEFF 		bl	__aeabi_d2uiz
 1293              	.LVL130:
 525:Core/Src/main.c ****         value = fmod(value, 1) * 10;
 1294              		.loc 1 525 21 view .LVU280
 1295 01f2 C5B2     		uxtb	r5, r0
 525:Core/Src/main.c ****         value = fmod(value, 1) * 10;
 1296              		.loc 1 525 19 view .LVU281
 1297 01f4 8DF80550 		strb	r5, [sp, #5]
 526:Core/Src/main.c ****         digits[2] = (uint8_t)round(value);
 1298              		.loc 1 526 9 is_stmt 1 view .LVU282
 526:Core/Src/main.c ****         digits[2] = (uint8_t)round(value);
 1299              		.loc 1 526 17 is_stmt 0 view .LVU283
 1300 01f8 B0EE491A 		vmov.f32	s2, s18
 1301 01fc F0EE691A 		vmov.f32	s3, s19
 1302 0200 B0EE480A 		vmov.f32	s0, s16
 1303 0204 F0EE680A 		vmov.f32	s1, s17
 1304 0208 FFF7FEFF 		bl	fmod
 1305              	.LVL131:
 1306 020c 51EC100B 		vmov	r0, r1, d0
 526:Core/Src/main.c ****         digits[2] = (uint8_t)round(value);
 1307              		.loc 1 526 15 discriminator 1 view .LVU284
 1308 0210 0022     		movs	r2, #0
 1309 0212 184B     		ldr	r3, .L85+28
 1310 0214 FFF7FEFF 		bl	__aeabi_dmul
 1311              	.LVL132:
 527:Core/Src/main.c **** 
 1312              		.loc 1 527 9 is_stmt 1 view .LVU285
 527:Core/Src/main.c **** 
 1313              		.loc 1 527 30 is_stmt 0 view .LVU286
 1314 0218 41EC100B 		vmov	d0, r0, r1
 1315 021c FFF7FEFF 		bl	round
ARM GAS  /var/folders/rj/9n9dpytj2n74_jwlj_p0xk9m0000gn/T//ccJgApBP.s 			page 57


 1316              	.LVL133:
 527:Core/Src/main.c **** 
 1317              		.loc 1 527 30 view .LVU287
 1318 0220 51EC100B 		vmov	r0, r1, d0
 527:Core/Src/main.c **** 
 1319              		.loc 1 527 21 discriminator 1 view .LVU288
 1320 0224 FFF7FEFF 		bl	__aeabi_d2uiz
 1321              	.LVL134:
 527:Core/Src/main.c **** 
 1322              		.loc 1 527 19 discriminator 1 view .LVU289
 1323 0228 8DF80600 		strb	r0, [sp, #6]
 529:Core/Src/main.c ****         {
 1324              		.loc 1 529 9 is_stmt 1 view .LVU290
 529:Core/Src/main.c ****         {
 1325              		.loc 1 529 12 is_stmt 0 view .LVU291
 1326 022c 002C     		cmp	r4, #0
 1327 022e 0DDD     		ble	.L76
 531:Core/Src/main.c ****             {
 1328              		.loc 1 531 13 is_stmt 1 view .LVU292
 531:Core/Src/main.c ****             {
 1329              		.loc 1 531 16 is_stmt 0 view .LVU293
 1330 0230 012C     		cmp	r4, #1
 1331 0232 3FF714AF 		bgt	.L69
 533:Core/Src/main.c ****             }
 1332              		.loc 1 533 17 is_stmt 1 view .LVU294
 533:Core/Src/main.c ****             }
 1333              		.loc 1 533 23 is_stmt 0 view .LVU295
 1334 0236 04F10803 		add	r3, r4, #8
 1335 023a 0DEB0304 		add	r4, sp, r3
 1336              	.LVL135:
 533:Core/Src/main.c ****             }
 1337              		.loc 1 533 23 view .LVU296
 1338 023e 14F8043C 		ldrb	r3, [r4, #-4]	@ zero_extendqisi2
 1339              	.LVL136:
 533:Core/Src/main.c ****             }
 1340              		.loc 1 533 35 view .LVU297
 1341 0242 43F01003 		orr	r3, r3, #16
 1342 0246 04F8043C 		strb	r3, [r4, #-4]
 1343 024a 08E7     		b	.L69
 1344              	.LVL137:
 1345              	.L76:
 538:Core/Src/main.c ****         }
 1346              		.loc 1 538 13 is_stmt 1 view .LVU298
 538:Core/Src/main.c ****         }
 1347              		.loc 1 538 23 is_stmt 0 view .LVU299
 1348 024c 45F01005 		orr	r5, r5, #16
 1349 0250 8DF80550 		strb	r5, [sp, #5]
 1350 0254 03E7     		b	.L69
 1351              	.L86:
 1352 0256 00BF     		.align	3
 1353              	.L85:
 1354 0258 00000000 		.word	0
 1355 025c 0000F03F 		.word	1072693248
 1356 0260 00000000 		.word	0
 1357 0264 00002440 		.word	1076101120
 1358 0268 00408F40 		.word	1083129856
 1359 026c 000059C0 		.word	-1067909120
ARM GAS  /var/folders/rj/9n9dpytj2n74_jwlj_p0xk9m0000gn/T//ccJgApBP.s 			page 58


 1360 0270 00000000 		.word	.LC8
 1361 0274 00002440 		.word	1076101120
 1362              	.LBE30:
 1363              		.cfi_endproc
 1364              	.LFE228:
 1366              		.section	.text.rs485_receive_IT,"ax",%progbits
 1367              		.align	1
 1368              		.global	rs485_receive_IT
 1369              		.syntax unified
 1370              		.thumb
 1371              		.thumb_func
 1373              	rs485_receive_IT:
 1374              	.LVL138:
 1375              	.LFB229:
 546:Core/Src/main.c ****     HAL_GPIO_WritePin(RS485_DE_GPIO_Port, RS485_DE_Pin, GPIO_PIN_RESET);
 1376              		.loc 1 546 1 is_stmt 1 view -0
 1377              		.cfi_startproc
 1378              		@ args = 0, pretend = 0, frame = 0
 1379              		@ frame_needed = 0, uses_anonymous_args = 0
 546:Core/Src/main.c ****     HAL_GPIO_WritePin(RS485_DE_GPIO_Port, RS485_DE_Pin, GPIO_PIN_RESET);
 1380              		.loc 1 546 1 is_stmt 0 view .LVU301
 1381 0000 10B5     		push	{r4, lr}
 1382              		.cfi_def_cfa_offset 8
 1383              		.cfi_offset 4, -8
 1384              		.cfi_offset 14, -4
 1385 0002 0446     		mov	r4, r0
 547:Core/Src/main.c ****     if (HAL_HalfDuplex_EnableReceiver(&huart1) != HAL_OK)
 1386              		.loc 1 547 5 is_stmt 1 view .LVU302
 1387 0004 0022     		movs	r2, #0
 1388 0006 8021     		movs	r1, #128
 1389 0008 0848     		ldr	r0, .L93
 1390              	.LVL139:
 547:Core/Src/main.c ****     if (HAL_HalfDuplex_EnableReceiver(&huart1) != HAL_OK)
 1391              		.loc 1 547 5 is_stmt 0 view .LVU303
 1392 000a FFF7FEFF 		bl	HAL_GPIO_WritePin
 1393              	.LVL140:
 548:Core/Src/main.c ****     {
 1394              		.loc 1 548 5 is_stmt 1 view .LVU304
 548:Core/Src/main.c ****     {
 1395              		.loc 1 548 9 is_stmt 0 view .LVU305
 1396 000e 0848     		ldr	r0, .L93+4
 1397 0010 FFF7FEFF 		bl	HAL_HalfDuplex_EnableReceiver
 1398              	.LVL141:
 548:Core/Src/main.c ****     {
 1399              		.loc 1 548 8 discriminator 1 view .LVU306
 1400 0014 30B9     		cbnz	r0, .L91
 552:Core/Src/main.c ****     {
 1401              		.loc 1 552 5 is_stmt 1 view .LVU307
 552:Core/Src/main.c ****     {
 1402              		.loc 1 552 9 is_stmt 0 view .LVU308
 1403 0016 2246     		mov	r2, r4
 1404 0018 0649     		ldr	r1, .L93+8
 1405 001a 0548     		ldr	r0, .L93+4
 1406 001c FFF7FEFF 		bl	HAL_UART_Receive_IT
 1407              	.LVL142:
 552:Core/Src/main.c ****     {
 1408              		.loc 1 552 8 discriminator 1 view .LVU309
ARM GAS  /var/folders/rj/9n9dpytj2n74_jwlj_p0xk9m0000gn/T//ccJgApBP.s 			page 59


 1409 0020 10B9     		cbnz	r0, .L92
 556:Core/Src/main.c **** 
 1410              		.loc 1 556 1 view .LVU310
 1411 0022 10BD     		pop	{r4, pc}
 1412              	.LVL143:
 1413              	.L91:
 550:Core/Src/main.c ****     }
 1414              		.loc 1 550 9 is_stmt 1 view .LVU311
 1415 0024 FFF7FEFF 		bl	Error_Handler
 1416              	.LVL144:
 1417              	.L92:
 554:Core/Src/main.c ****     }
 1418              		.loc 1 554 9 view .LVU312
 1419 0028 FFF7FEFF 		bl	Error_Handler
 1420              	.LVL145:
 1421              	.L94:
 1422              		.align	2
 1423              	.L93:
 1424 002c 00040240 		.word	1073873920
 1425 0030 00000000 		.word	huart1
 1426 0034 00000000 		.word	rx_buffer
 1427              		.cfi_endproc
 1428              	.LFE229:
 1430              		.global	__aeabi_ui2d
 1431              		.section	.text.main,"ax",%progbits
 1432              		.align	1
 1433              		.global	main
 1434              		.syntax unified
 1435              		.thumb
 1436              		.thumb_func
 1438              	main:
 1439              	.LFB223:
 101:Core/Src/main.c ****     /* USER CODE BEGIN 1 */
 1440              		.loc 1 101 1 view -0
 1441              		.cfi_startproc
 1442              		@ args = 0, pretend = 0, frame = 24584
 1443              		@ frame_needed = 0, uses_anonymous_args = 0
 1444 0000 70B5     		push	{r4, r5, r6, lr}
 1445              		.cfi_def_cfa_offset 16
 1446              		.cfi_offset 4, -16
 1447              		.cfi_offset 5, -12
 1448              		.cfi_offset 6, -8
 1449              		.cfi_offset 14, -4
 1450 0002 2DED048B 		vpush.64	{d8, d9}
 1451              		.cfi_def_cfa_offset 32
 1452              		.cfi_offset 80, -32
 1453              		.cfi_offset 81, -28
 1454              		.cfi_offset 82, -24
 1455              		.cfi_offset 83, -20
 1456 0006 ADF5C04D 		sub	sp, sp, #24576
 1457              		.cfi_def_cfa_offset 24608
 1458 000a 88B0     		sub	sp, sp, #32
 1459              		.cfi_def_cfa_offset 24640
 109:Core/Src/main.c **** 
 1460              		.loc 1 109 5 view .LVU314
 1461 000c FFF7FEFF 		bl	HAL_Init
 1462              	.LVL146:
ARM GAS  /var/folders/rj/9n9dpytj2n74_jwlj_p0xk9m0000gn/T//ccJgApBP.s 			page 60


 116:Core/Src/main.c **** 
 1463              		.loc 1 116 5 view .LVU315
 1464 0010 FFF7FEFF 		bl	SystemClock_Config
 1465              	.LVL147:
 123:Core/Src/main.c ****     MX_ADC1_Init();
 1466              		.loc 1 123 5 view .LVU316
 1467 0014 FFF7FEFF 		bl	MX_GPIO_Init
 1468              	.LVL148:
 124:Core/Src/main.c ****     MX_I2C1_Init();
 1469              		.loc 1 124 5 view .LVU317
 1470 0018 FFF7FEFF 		bl	MX_ADC1_Init
 1471              	.LVL149:
 125:Core/Src/main.c ****     MX_USART1_UART_Init();
 1472              		.loc 1 125 5 view .LVU318
 1473 001c FFF7FEFF 		bl	MX_I2C1_Init
 1474              	.LVL150:
 126:Core/Src/main.c ****     MX_USART6_UART_Init();
 1475              		.loc 1 126 5 view .LVU319
 1476 0020 FFF7FEFF 		bl	MX_USART1_UART_Init
 1477              	.LVL151:
 127:Core/Src/main.c ****     MX_TIM10_Init();
 1478              		.loc 1 127 5 view .LVU320
 1479 0024 FFF7FEFF 		bl	MX_USART6_UART_Init
 1480              	.LVL152:
 128:Core/Src/main.c **** 
 1481              		.loc 1 128 5 view .LVU321
 1482 0028 FFF7FEFF 		bl	MX_TIM10_Init
 1483              	.LVL153:
 131:Core/Src/main.c ****     /* USER CODE BEGIN 2 */
 1484              		.loc 1 131 5 view .LVU322
 1485 002c FFF7FEFF 		bl	MX_NVIC_Init
 1486              	.LVL154:
 133:Core/Src/main.c ****     HAL_GPIO_WritePin(LED_Green_GPIO_Port, LED_Green_Pin, GPIO_PIN_SET);
 1487              		.loc 1 133 5 view .LVU323
 1488 0030 FFF7FEFF 		bl	voltage_init
 1489              	.LVL155:
 134:Core/Src/main.c ****     /* USER CODE END 2 */
 1490              		.loc 1 134 5 view .LVU324
 1491 0034 0122     		movs	r2, #1
 1492 0036 0421     		movs	r1, #4
 1493 0038 AB48     		ldr	r0, .L107+8
 1494 003a FFF7FEFF 		bl	HAL_GPIO_WritePin
 1495              	.LVL156:
 139:Core/Src/main.c ****     VoltageSample_TypeDef voltage_samples[MAX_SAMPLES];
 1496              		.loc 1 139 5 view .LVU325
 140:Core/Src/main.c ****     ResistanceSample_TypeDef resistance_samples[MAX_SAMPLES];
 1497              		.loc 1 140 5 view .LVU326
 141:Core/Src/main.c ****     memset(voltage_samples, 0, sizeof(voltage_samples));
 1498              		.loc 1 141 5 view .LVU327
 142:Core/Src/main.c ****     HAL_Delay(5000);
 1499              		.loc 1 142 5 view .LVU328
 1500 003e 4FF40052 		mov	r2, #8192
 1501 0042 0021     		movs	r1, #0
 1502 0044 0DF58040 		add	r0, sp, #16384
 1503 0048 1830     		adds	r0, r0, #24
 1504 004a FFF7FEFF 		bl	memset
 1505              	.LVL157:
ARM GAS  /var/folders/rj/9n9dpytj2n74_jwlj_p0xk9m0000gn/T//ccJgApBP.s 			page 61


 143:Core/Src/main.c **** 
 1506              		.loc 1 143 5 view .LVU329
 1507 004e 41F28830 		movw	r0, #5000
 1508 0052 FFF7FEFF 		bl	HAL_Delay
 1509              	.LVL158:
 172:Core/Src/main.c ****         voltage_samples,
 1510              		.loc 1 172 5 view .LVU330
 1511 0056 0025     		movs	r5, #0
 1512 0058 0595     		str	r5, [sp, #20]
 1513 005a 6423     		movs	r3, #100
 1514 005c 0493     		str	r3, [sp, #16]
 1515 005e 0523     		movs	r3, #5
 1516 0060 0393     		str	r3, [sp, #12]
 1517 0062 0124     		movs	r4, #1
 1518 0064 0294     		str	r4, [sp, #8]
 1519 0066 4FF40073 		mov	r3, #512
 1520 006a 0193     		str	r3, [sp, #4]
 1521 006c 0093     		str	r3, [sp]
 1522 006e 0223     		movs	r3, #2
 1523 0070 2A46     		mov	r2, r5
 1524 0072 2146     		mov	r1, r4
 1525 0074 0DF58040 		add	r0, sp, #16384
 1526 0078 1830     		adds	r0, r0, #24
 1527 007a FFF7FEFF 		bl	measure_voltage_sweep
 1528              	.LVL159:
 183:Core/Src/main.c ****     temperature = measure_temperature();
 1529              		.loc 1 183 5 view .LVU331
 1530 007e 2A46     		mov	r2, r5
 1531 0080 2146     		mov	r1, r4
 1532 0082 0DF58040 		add	r0, sp, #16384
 1533 0086 1830     		adds	r0, r0, #24
 1534 0088 FFF7FEFF 		bl	transmit_sample_data_binary
 1535              	.LVL160:
 184:Core/Src/main.c ****     transmit_sample_data_readable(&temperature, 1, VALUE_TEMPERATURE);
 1536              		.loc 1 184 5 view .LVU332
 184:Core/Src/main.c ****     transmit_sample_data_readable(&temperature, 1, VALUE_TEMPERATURE);
 1537              		.loc 1 184 19 is_stmt 0 view .LVU333
 1538 008c FFF7FEFF 		bl	measure_temperature
 1539              	.LVL161:
 184:Core/Src/main.c ****     transmit_sample_data_readable(&temperature, 1, VALUE_TEMPERATURE);
 1540              		.loc 1 184 17 discriminator 1 view .LVU334
 1541 0090 0DF5C043 		add	r3, sp, #24576
 1542 0094 1833     		adds	r3, r3, #24
 1543 0096 83ED000B 		vstr.64	d0, [r3]
 185:Core/Src/main.c **** 
 1544              		.loc 1 185 5 is_stmt 1 view .LVU335
 1545 009a 0322     		movs	r2, #3
 1546 009c 2146     		mov	r1, r4
 1547 009e 1846     		mov	r0, r3
 1548 00a0 FFF7FEFF 		bl	transmit_sample_data_readable
 1549              	.LVL162:
 187:Core/Src/main.c **** 
 1550              		.loc 1 187 5 view .LVU336
 1551 00a4 2046     		mov	r0, r4
 1552 00a6 FFF7FEFF 		bl	rs485_receive_IT
 1553              	.LVL163:
 1554 00aa 1AE0     		b	.L97
ARM GAS  /var/folders/rj/9n9dpytj2n74_jwlj_p0xk9m0000gn/T//ccJgApBP.s 			page 62


 1555              	.L103:
 224:Core/Src/main.c ****             current_task = TASK_NONE;
 1556              		.loc 1 224 13 view .LVU337
 224:Core/Src/main.c ****             current_task = TASK_NONE;
 1557              		.loc 1 224 20 is_stmt 0 view .LVU338
 1558 00ac 8F4C     		ldr	r4, .L107+12
 1559 00ae 0223     		movs	r3, #2
 1560 00b0 2370     		strb	r3, [r4]
 225:Core/Src/main.c **** 
 1561              		.loc 1 225 13 is_stmt 1 view .LVU339
 225:Core/Src/main.c **** 
 1562              		.loc 1 225 26 is_stmt 0 view .LVU340
 1563 00b2 0025     		movs	r5, #0
 1564 00b4 8E4B     		ldr	r3, .L107+16
 1565 00b6 1D70     		strb	r5, [r3]
 227:Core/Src/main.c ****             HAL_UART_Abort_IT(&huart1);
 1566              		.loc 1 227 13 is_stmt 1 view .LVU341
 227:Core/Src/main.c ****             HAL_UART_Abort_IT(&huart1);
 1567              		.loc 1 227 27 is_stmt 0 view .LVU342
 1568 00b8 FFF7FEFF 		bl	measure_temperature
 1569              	.LVL164:
 227:Core/Src/main.c ****             HAL_UART_Abort_IT(&huart1);
 1570              		.loc 1 227 25 discriminator 1 view .LVU343
 1571 00bc 0DF5C043 		add	r3, sp, #24576
 1572 00c0 1833     		adds	r3, r3, #24
 1573 00c2 83ED000B 		vstr.64	d0, [r3]
 228:Core/Src/main.c ****             rs485_transmit_double(temperature);
 1574              		.loc 1 228 13 is_stmt 1 view .LVU344
 1575 00c6 8B48     		ldr	r0, .L107+20
 1576 00c8 FFF7FEFF 		bl	HAL_UART_Abort_IT
 1577              	.LVL165:
 229:Core/Src/main.c **** 
 1578              		.loc 1 229 13 view .LVU345
 1579 00cc 0DF5C043 		add	r3, sp, #24576
 1580 00d0 1833     		adds	r3, r3, #24
 1581 00d2 93ED000B 		vldr.64	d0, [r3]
 1582 00d6 FFF7FEFF 		bl	rs485_transmit_double
 1583              	.LVL166:
 231:Core/Src/main.c ****             rs485_receive_IT(1);
 1584              		.loc 1 231 13 view .LVU346
 231:Core/Src/main.c ****             rs485_receive_IT(1);
 1585              		.loc 1 231 20 is_stmt 0 view .LVU347
 1586 00da 2570     		strb	r5, [r4]
 232:Core/Src/main.c ****             break;
 1587              		.loc 1 232 13 is_stmt 1 view .LVU348
 1588 00dc 0120     		movs	r0, #1
 1589 00de FFF7FEFF 		bl	rs485_receive_IT
 1590              	.LVL167:
 233:Core/Src/main.c ****         case TASK_MEASURE_DEPTH:
 1591              		.loc 1 233 13 view .LVU349
 1592              	.L97:
 189:Core/Src/main.c ****     {
 1593              		.loc 1 189 5 view .LVU350
 218:Core/Src/main.c ****         {
 1594              		.loc 1 218 9 view .LVU351
 1595 00e2 834B     		ldr	r3, .L107+16
 1596 00e4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
ARM GAS  /var/folders/rj/9n9dpytj2n74_jwlj_p0xk9m0000gn/T//ccJgApBP.s 			page 63


 1597 00e6 013B     		subs	r3, r3, #1
 1598 00e8 042B     		cmp	r3, #4
 1599 00ea FAD8     		bhi	.L97
 1600 00ec 01A2     		adr	r2, .L99
 1601 00ee 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 1602 00f2 00BF     		.p2align 2
 1603              	.L99:
 1604 00f4 AD000000 		.word	.L103+1
 1605 00f8 09010000 		.word	.L102+1
 1606 00fc 3D010000 		.word	.L101+1
 1607 0100 AB010000 		.word	.L100+1
 1608 0104 1B020000 		.word	.L98+1
 1609              		.p2align 1
 1610              	.L102:
 235:Core/Src/main.c ****             current_task = TASK_NONE;
 1611              		.loc 1 235 13 view .LVU352
 235:Core/Src/main.c ****             current_task = TASK_NONE;
 1612              		.loc 1 235 20 is_stmt 0 view .LVU353
 1613 0108 784C     		ldr	r4, .L107+12
 1614 010a 0223     		movs	r3, #2
 1615 010c 2370     		strb	r3, [r4]
 236:Core/Src/main.c **** 
 1616              		.loc 1 236 13 is_stmt 1 view .LVU354
 236:Core/Src/main.c **** 
 1617              		.loc 1 236 26 is_stmt 0 view .LVU355
 1618 010e 0025     		movs	r5, #0
 1619 0110 774B     		ldr	r3, .L107+16
 1620 0112 1D70     		strb	r5, [r3]
 238:Core/Src/main.c ****             HAL_UART_Abort_IT(&huart1);
 1621              		.loc 1 238 13 is_stmt 1 view .LVU356
 238:Core/Src/main.c ****             HAL_UART_Abort_IT(&huart1);
 1622              		.loc 1 238 24 is_stmt 0 view .LVU357
 1623 0114 FFF7FEFF 		bl	measure_pressure
 1624              	.LVL168:
 1625 0118 B0EE408A 		vmov.f32	s16, s0
 1626 011c F0EE608A 		vmov.f32	s17, s1
 1627              	.LVL169:
 239:Core/Src/main.c ****             rs485_transmit_double(pressure);
 1628              		.loc 1 239 13 is_stmt 1 view .LVU358
 1629 0120 7448     		ldr	r0, .L107+20
 1630 0122 FFF7FEFF 		bl	HAL_UART_Abort_IT
 1631              	.LVL170:
 240:Core/Src/main.c **** 
 1632              		.loc 1 240 13 view .LVU359
 1633 0126 B0EE480A 		vmov.f32	s0, s16
 1634 012a F0EE680A 		vmov.f32	s1, s17
 1635 012e FFF7FEFF 		bl	rs485_transmit_double
 1636              	.LVL171:
 242:Core/Src/main.c ****             rs485_receive_IT(1);
 1637              		.loc 1 242 13 view .LVU360
 242:Core/Src/main.c ****             rs485_receive_IT(1);
 1638              		.loc 1 242 20 is_stmt 0 view .LVU361
 1639 0132 2570     		strb	r5, [r4]
 243:Core/Src/main.c ****             break;
 1640              		.loc 1 243 13 is_stmt 1 view .LVU362
 1641 0134 0120     		movs	r0, #1
 1642 0136 FFF7FEFF 		bl	rs485_receive_IT
ARM GAS  /var/folders/rj/9n9dpytj2n74_jwlj_p0xk9m0000gn/T//ccJgApBP.s 			page 64


 1643              	.LVL172:
 244:Core/Src/main.c ****         case TASK_MEASURE_RESISTANCE:
 1644              		.loc 1 244 13 view .LVU363
 1645 013a D2E7     		b	.L97
 1646              	.LVL173:
 1647              	.L101:
 246:Core/Src/main.c ****             current_task = TASK_NONE;
 1648              		.loc 1 246 13 view .LVU364
 246:Core/Src/main.c ****             current_task = TASK_NONE;
 1649              		.loc 1 246 20 is_stmt 0 view .LVU365
 1650 013c 6B4E     		ldr	r6, .L107+12
 1651 013e 0223     		movs	r3, #2
 1652 0140 3370     		strb	r3, [r6]
 247:Core/Src/main.c **** 
 1653              		.loc 1 247 13 is_stmt 1 view .LVU366
 247:Core/Src/main.c **** 
 1654              		.loc 1 247 26 is_stmt 0 view .LVU367
 1655 0142 0025     		movs	r5, #0
 1656 0144 6A4B     		ldr	r3, .L107+16
 1657 0146 1D70     		strb	r5, [r3]
 249:Core/Src/main.c ****                 voltage_samples,
 1658              		.loc 1 249 13 is_stmt 1 view .LVU368
 1659 0148 6B4C     		ldr	r4, .L107+24
 1660 014a 0595     		str	r5, [sp, #20]
 1661 014c 238A     		ldrh	r3, [r4, #16]
 1662 014e 0493     		str	r3, [sp, #16]
 1663 0150 6389     		ldrh	r3, [r4, #10]
 1664 0152 0393     		str	r3, [sp, #12]
 1665 0154 2389     		ldrh	r3, [r4, #8]
 1666 0156 0293     		str	r3, [sp, #8]
 1667 0158 E388     		ldrh	r3, [r4, #6]
 1668 015a 0193     		str	r3, [sp, #4]
 1669 015c A388     		ldrh	r3, [r4, #4]
 1670 015e 0093     		str	r3, [sp]
 1671 0160 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 1672 0162 6278     		ldrb	r2, [r4, #1]	@ zero_extendqisi2
 1673 0164 A178     		ldrb	r1, [r4, #2]	@ zero_extendqisi2
 1674 0166 0DF58040 		add	r0, sp, #16384
 1675 016a 1830     		adds	r0, r0, #24
 1676 016c FFF7FEFF 		bl	measure_voltage_sweep
 1677              	.LVL174:
 260:Core/Src/main.c **** 
 1678              		.loc 1 260 13 view .LVU369
 1679 0170 2289     		ldrh	r2, [r4, #8]
 1680 0172 06A9     		add	r1, sp, #24
 1681 0174 0DF58040 		add	r0, sp, #16384
 1682 0178 1830     		adds	r0, r0, #24
 1683 017a FFF7FEFF 		bl	calculate_resistance
 1684              	.LVL175:
 262:Core/Src/main.c **** 
 1685              		.loc 1 262 13 view .LVU370
 262:Core/Src/main.c **** 
 1686              		.loc 1 262 26 is_stmt 0 view .LVU371
 1687 017e 2189     		ldrh	r1, [r4, #8]
 1688 0180 06A8     		add	r0, sp, #24
 1689 0182 FFF7FEFF 		bl	calculate_average_resistance
 1690              	.LVL176:
ARM GAS  /var/folders/rj/9n9dpytj2n74_jwlj_p0xk9m0000gn/T//ccJgApBP.s 			page 65


 1691 0186 B0EE408A 		vmov.f32	s16, s0
 1692 018a F0EE608A 		vmov.f32	s17, s1
 1693              	.LVL177:
 264:Core/Src/main.c ****             rs485_transmit_double(resistance);
 1694              		.loc 1 264 13 is_stmt 1 view .LVU372
 1695 018e 5948     		ldr	r0, .L107+20
 1696 0190 FFF7FEFF 		bl	HAL_UART_Abort_IT
 1697              	.LVL178:
 265:Core/Src/main.c **** 
 1698              		.loc 1 265 13 view .LVU373
 1699 0194 B0EE480A 		vmov.f32	s0, s16
 1700 0198 F0EE680A 		vmov.f32	s1, s17
 1701 019c FFF7FEFF 		bl	rs485_transmit_double
 1702              	.LVL179:
 267:Core/Src/main.c ****             rs485_receive_IT(1);
 1703              		.loc 1 267 13 view .LVU374
 267:Core/Src/main.c ****             rs485_receive_IT(1);
 1704              		.loc 1 267 20 is_stmt 0 view .LVU375
 1705 01a0 3570     		strb	r5, [r6]
 268:Core/Src/main.c ****             break;
 1706              		.loc 1 268 13 is_stmt 1 view .LVU376
 1707 01a2 0120     		movs	r0, #1
 1708 01a4 FFF7FEFF 		bl	rs485_receive_IT
 1709              	.LVL180:
 269:Core/Src/main.c ****         case TASK_MEASURE_CONDUCTIVITY:
 1710              		.loc 1 269 13 view .LVU377
 1711 01a8 9BE7     		b	.L97
 1712              	.LVL181:
 1713              	.L100:
 271:Core/Src/main.c ****             current_task = TASK_NONE;
 1714              		.loc 1 271 13 view .LVU378
 271:Core/Src/main.c ****             current_task = TASK_NONE;
 1715              		.loc 1 271 20 is_stmt 0 view .LVU379
 1716 01aa 504E     		ldr	r6, .L107+12
 1717 01ac 0223     		movs	r3, #2
 1718 01ae 3370     		strb	r3, [r6]
 272:Core/Src/main.c **** 
 1719              		.loc 1 272 13 is_stmt 1 view .LVU380
 272:Core/Src/main.c **** 
 1720              		.loc 1 272 26 is_stmt 0 view .LVU381
 1721 01b0 0025     		movs	r5, #0
 1722 01b2 4F4B     		ldr	r3, .L107+16
 1723 01b4 1D70     		strb	r5, [r3]
 274:Core/Src/main.c ****                 voltage_samples,
 1724              		.loc 1 274 13 is_stmt 1 view .LVU382
 1725 01b6 504C     		ldr	r4, .L107+24
 1726 01b8 0595     		str	r5, [sp, #20]
 1727 01ba 238A     		ldrh	r3, [r4, #16]
 1728 01bc 0493     		str	r3, [sp, #16]
 1729 01be 6389     		ldrh	r3, [r4, #10]
 1730 01c0 0393     		str	r3, [sp, #12]
 1731 01c2 2389     		ldrh	r3, [r4, #8]
 1732 01c4 0293     		str	r3, [sp, #8]
 1733 01c6 E388     		ldrh	r3, [r4, #6]
 1734 01c8 0193     		str	r3, [sp, #4]
 1735 01ca A388     		ldrh	r3, [r4, #4]
 1736 01cc 0093     		str	r3, [sp]
ARM GAS  /var/folders/rj/9n9dpytj2n74_jwlj_p0xk9m0000gn/T//ccJgApBP.s 			page 66


 1737 01ce 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 1738 01d0 6278     		ldrb	r2, [r4, #1]	@ zero_extendqisi2
 1739 01d2 A178     		ldrb	r1, [r4, #2]	@ zero_extendqisi2
 1740 01d4 0DF58040 		add	r0, sp, #16384
 1741 01d8 1830     		adds	r0, r0, #24
 1742 01da FFF7FEFF 		bl	measure_voltage_sweep
 1743              	.LVL182:
 285:Core/Src/main.c **** 
 1744              		.loc 1 285 13 view .LVU383
 1745 01de 2289     		ldrh	r2, [r4, #8]
 1746 01e0 06A9     		add	r1, sp, #24
 1747 01e2 0DF58040 		add	r0, sp, #16384
 1748 01e6 1830     		adds	r0, r0, #24
 1749 01e8 FFF7FEFF 		bl	calculate_resistance
 1750              	.LVL183:
 287:Core/Src/main.c **** 
 1751              		.loc 1 287 13 view .LVU384
 287:Core/Src/main.c **** 
 1752              		.loc 1 287 28 is_stmt 0 view .LVU385
 1753 01ec 2289     		ldrh	r2, [r4, #8]
 1754 01ee 06A9     		add	r1, sp, #24
 1755 01f0 2078     		ldrb	r0, [r4]	@ zero_extendqisi2
 1756 01f2 FFF7FEFF 		bl	calculate_conductivity
 1757              	.LVL184:
 1758 01f6 B0EE408A 		vmov.f32	s16, s0
 1759 01fa F0EE608A 		vmov.f32	s17, s1
 1760              	.LVL185:
 289:Core/Src/main.c ****             rs485_transmit_double(conductivity);
 1761              		.loc 1 289 13 is_stmt 1 view .LVU386
 1762 01fe 3D48     		ldr	r0, .L107+20
 1763 0200 FFF7FEFF 		bl	HAL_UART_Abort_IT
 1764              	.LVL186:
 290:Core/Src/main.c **** 
 1765              		.loc 1 290 13 view .LVU387
 1766 0204 B0EE480A 		vmov.f32	s0, s16
 1767 0208 F0EE680A 		vmov.f32	s1, s17
 1768 020c FFF7FEFF 		bl	rs485_transmit_double
 1769              	.LVL187:
 292:Core/Src/main.c ****             rs485_receive_IT(1);
 1770              		.loc 1 292 13 view .LVU388
 292:Core/Src/main.c ****             rs485_receive_IT(1);
 1771              		.loc 1 292 20 is_stmt 0 view .LVU389
 1772 0210 3570     		strb	r5, [r6]
 293:Core/Src/main.c ****             break;
 1773              		.loc 1 293 13 is_stmt 1 view .LVU390
 1774 0212 0120     		movs	r0, #1
 1775 0214 FFF7FEFF 		bl	rs485_receive_IT
 1776              	.LVL188:
 294:Core/Src/main.c ****         case TASK_MEASURE_SALINITY:
 1777              		.loc 1 294 13 view .LVU391
 1778 0218 63E7     		b	.L97
 1779              	.LVL189:
 1780              	.L98:
 296:Core/Src/main.c ****             current_task = TASK_NONE;
 1781              		.loc 1 296 13 view .LVU392
 296:Core/Src/main.c ****             current_task = TASK_NONE;
 1782              		.loc 1 296 20 is_stmt 0 view .LVU393
ARM GAS  /var/folders/rj/9n9dpytj2n74_jwlj_p0xk9m0000gn/T//ccJgApBP.s 			page 67


 1783 021a 344E     		ldr	r6, .L107+12
 1784 021c 0223     		movs	r3, #2
 1785 021e 3370     		strb	r3, [r6]
 297:Core/Src/main.c **** 
 1786              		.loc 1 297 13 is_stmt 1 view .LVU394
 297:Core/Src/main.c **** 
 1787              		.loc 1 297 26 is_stmt 0 view .LVU395
 1788 0220 0025     		movs	r5, #0
 1789 0222 334B     		ldr	r3, .L107+16
 1790 0224 1D70     		strb	r5, [r3]
 299:Core/Src/main.c ****                 voltage_samples,
 1791              		.loc 1 299 13 is_stmt 1 view .LVU396
 1792 0226 344C     		ldr	r4, .L107+24
 1793 0228 0595     		str	r5, [sp, #20]
 1794 022a 238A     		ldrh	r3, [r4, #16]
 1795 022c 0493     		str	r3, [sp, #16]
 1796 022e 6389     		ldrh	r3, [r4, #10]
 1797 0230 0393     		str	r3, [sp, #12]
 1798 0232 2389     		ldrh	r3, [r4, #8]
 1799 0234 0293     		str	r3, [sp, #8]
 1800 0236 E388     		ldrh	r3, [r4, #6]
 1801 0238 0193     		str	r3, [sp, #4]
 1802 023a A388     		ldrh	r3, [r4, #4]
 1803 023c 0093     		str	r3, [sp]
 1804 023e 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 1805 0240 6278     		ldrb	r2, [r4, #1]	@ zero_extendqisi2
 1806 0242 A178     		ldrb	r1, [r4, #2]	@ zero_extendqisi2
 1807 0244 0DF58040 		add	r0, sp, #16384
 1808 0248 1830     		adds	r0, r0, #24
 1809 024a FFF7FEFF 		bl	measure_voltage_sweep
 1810              	.LVL190:
 310:Core/Src/main.c **** 
 1811              		.loc 1 310 13 view .LVU397
 1812 024e 2289     		ldrh	r2, [r4, #8]
 1813 0250 06A9     		add	r1, sp, #24
 1814 0252 0DF58040 		add	r0, sp, #16384
 1815 0256 1830     		adds	r0, r0, #24
 1816 0258 FFF7FEFF 		bl	calculate_resistance
 1817              	.LVL191:
 312:Core/Src/main.c ****             temperature = measure_temperature();
 1818              		.loc 1 312 13 view .LVU398
 312:Core/Src/main.c ****             temperature = measure_temperature();
 1819              		.loc 1 312 28 is_stmt 0 view .LVU399
 1820 025c 2289     		ldrh	r2, [r4, #8]
 1821 025e 06A9     		add	r1, sp, #24
 1822 0260 2078     		ldrb	r0, [r4]	@ zero_extendqisi2
 1823 0262 FFF7FEFF 		bl	calculate_conductivity
 1824              	.LVL192:
 1825 0266 B0EE408A 		vmov.f32	s16, s0
 1826 026a F0EE608A 		vmov.f32	s17, s1
 1827              	.LVL193:
 313:Core/Src/main.c ****             pressure = measure_pressure();
 1828              		.loc 1 313 13 is_stmt 1 view .LVU400
 313:Core/Src/main.c ****             pressure = measure_pressure();
 1829              		.loc 1 313 27 is_stmt 0 view .LVU401
 1830 026e FFF7FEFF 		bl	measure_temperature
 1831              	.LVL194:
ARM GAS  /var/folders/rj/9n9dpytj2n74_jwlj_p0xk9m0000gn/T//ccJgApBP.s 			page 68


 313:Core/Src/main.c ****             pressure = measure_pressure();
 1832              		.loc 1 313 25 discriminator 1 view .LVU402
 1833 0272 0DF5C043 		add	r3, sp, #24576
 1834 0276 1833     		adds	r3, r3, #24
 1835 0278 83ED000B 		vstr.64	d0, [r3]
 314:Core/Src/main.c **** 
 1836              		.loc 1 314 13 is_stmt 1 view .LVU403
 314:Core/Src/main.c **** 
 1837              		.loc 1 314 24 is_stmt 0 view .LVU404
 1838 027c FFF7FEFF 		bl	measure_pressure
 1839              	.LVL195:
 1840 0280 B0EE409A 		vmov.f32	s18, s0
 1841 0284 F0EE609A 		vmov.f32	s19, s1
 1842              	.LVL196:
 316:Core/Src/main.c ****             HAL_UART_Abort_IT(&huart1);
 1843              		.loc 1 316 13 is_stmt 1 view .LVU405
 316:Core/Src/main.c ****             HAL_UART_Abort_IT(&huart1);
 1844              		.loc 1 316 80 is_stmt 0 view .LVU406
 1845 0288 E068     		ldr	r0, [r4, #12]
 1846 028a FFF7FEFF 		bl	__aeabi_ui2d
 1847              	.LVL197:
 316:Core/Src/main.c ****             HAL_UART_Abort_IT(&huart1);
 1848              		.loc 1 316 24 view .LVU407
 1849 028e 14A3     		adr	r3, .L107
 1850 0290 D3E90023 		ldrd	r2, [r3]
 1851 0294 FFF7FEFF 		bl	__aeabi_ddiv
 1852              	.LVL198:
 1853 0298 41EC130B 		vmov	d3, r0, r1
 1854 029c B0EE492A 		vmov.f32	s4, s18
 1855 02a0 F0EE692A 		vmov.f32	s5, s19
 1856 02a4 0DF5C043 		add	r3, sp, #24576
 1857 02a8 1833     		adds	r3, r3, #24
 1858 02aa 93ED001B 		vldr.64	d1, [r3]
 1859 02ae B0EE480A 		vmov.f32	s0, s16
 1860 02b2 F0EE680A 		vmov.f32	s1, s17
 1861 02b6 FFF7FEFF 		bl	calculate_salinity
 1862              	.LVL199:
 1863 02ba B0EE408A 		vmov.f32	s16, s0
 1864 02be F0EE608A 		vmov.f32	s17, s1
 1865              	.LVL200:
 317:Core/Src/main.c ****             rs485_transmit_double(salinity);
 1866              		.loc 1 317 13 is_stmt 1 view .LVU408
 1867 02c2 0C48     		ldr	r0, .L107+20
 1868 02c4 FFF7FEFF 		bl	HAL_UART_Abort_IT
 1869              	.LVL201:
 318:Core/Src/main.c **** 
 1870              		.loc 1 318 13 view .LVU409
 1871 02c8 B0EE480A 		vmov.f32	s0, s16
 1872 02cc F0EE680A 		vmov.f32	s1, s17
 1873 02d0 FFF7FEFF 		bl	rs485_transmit_double
 1874              	.LVL202:
 320:Core/Src/main.c ****             rs485_receive_IT(1);
 1875              		.loc 1 320 13 view .LVU410
 320:Core/Src/main.c ****             rs485_receive_IT(1);
 1876              		.loc 1 320 20 is_stmt 0 view .LVU411
 1877 02d4 3570     		strb	r5, [r6]
 321:Core/Src/main.c ****             break;
ARM GAS  /var/folders/rj/9n9dpytj2n74_jwlj_p0xk9m0000gn/T//ccJgApBP.s 			page 69


 1878              		.loc 1 321 13 is_stmt 1 view .LVU412
 1879 02d6 0120     		movs	r0, #1
 1880 02d8 FFF7FEFF 		bl	rs485_receive_IT
 1881              	.LVL203:
 322:Core/Src/main.c ****         case TASK_WAITING_FOR_CONFIG:
 1882              		.loc 1 322 13 view .LVU413
 1883 02dc 01E7     		b	.L97
 1884              	.L108:
 1885 02de 00BF     		.align	3
 1886              	.L107:
 1887 02e0 00000000 		.word	0
 1888 02e4 80842E41 		.word	1093567616
 1889 02e8 00040240 		.word	1073873920
 1890 02ec 00000000 		.word	status
 1891 02f0 00000000 		.word	current_task
 1892 02f4 00000000 		.word	huart1
 1893 02f8 00000000 		.word	probe_config
 1894              		.cfi_endproc
 1895              	.LFE223:
 1897              		.section	.text.HAL_UART_RxCpltCallback,"ax",%progbits
 1898              		.align	1
 1899              		.global	HAL_UART_RxCpltCallback
 1900              		.syntax unified
 1901              		.thumb
 1902              		.thumb_func
 1904              	HAL_UART_RxCpltCallback:
 1905              	.LVL204:
 1906              	.LFB226:
 393:Core/Src/main.c ****     HAL_GPIO_TogglePin(LED_Green_GPIO_Port, LED_Green_Pin);
 1907              		.loc 1 393 1 view -0
 1908              		.cfi_startproc
 1909              		@ args = 0, pretend = 0, frame = 8
 1910              		@ frame_needed = 0, uses_anonymous_args = 0
 393:Core/Src/main.c ****     HAL_GPIO_TogglePin(LED_Green_GPIO_Port, LED_Green_Pin);
 1911              		.loc 1 393 1 is_stmt 0 view .LVU415
 1912 0000 30B5     		push	{r4, r5, lr}
 1913              		.cfi_def_cfa_offset 12
 1914              		.cfi_offset 4, -12
 1915              		.cfi_offset 5, -8
 1916              		.cfi_offset 14, -4
 1917 0002 83B0     		sub	sp, sp, #12
 1918              		.cfi_def_cfa_offset 24
 1919 0004 0446     		mov	r4, r0
 394:Core/Src/main.c ****     uint8_t response;
 1920              		.loc 1 394 5 is_stmt 1 view .LVU416
 1921 0006 0421     		movs	r1, #4
 1922 0008 3B48     		ldr	r0, .L127
 1923              	.LVL205:
 394:Core/Src/main.c ****     uint8_t response;
 1924              		.loc 1 394 5 is_stmt 0 view .LVU417
 1925 000a FFF7FEFF 		bl	HAL_GPIO_TogglePin
 1926              	.LVL206:
 395:Core/Src/main.c ****     if (huart->Instance == USART1)
 1927              		.loc 1 395 5 is_stmt 1 view .LVU418
 396:Core/Src/main.c ****     {
 1928              		.loc 1 396 5 view .LVU419
 396:Core/Src/main.c ****     {
ARM GAS  /var/folders/rj/9n9dpytj2n74_jwlj_p0xk9m0000gn/T//ccJgApBP.s 			page 70


 1929              		.loc 1 396 14 is_stmt 0 view .LVU420
 1930 000e 2268     		ldr	r2, [r4]
 396:Core/Src/main.c ****     {
 1931              		.loc 1 396 8 view .LVU421
 1932 0010 3A4B     		ldr	r3, .L127+4
 1933 0012 9A42     		cmp	r2, r3
 1934 0014 01D0     		beq	.L125
 1935              	.LVL207:
 1936              	.L109:
 452:Core/Src/main.c **** 
 1937              		.loc 1 452 1 view .LVU422
 1938 0016 03B0     		add	sp, sp, #12
 1939              		.cfi_remember_state
 1940              		.cfi_def_cfa_offset 12
 1941              		@ sp needed
 1942 0018 30BD     		pop	{r4, r5, pc}
 1943              	.LVL208:
 1944              	.L125:
 1945              		.cfi_restore_state
 398:Core/Src/main.c ****         {
 1946              		.loc 1 398 9 is_stmt 1 view .LVU423
 398:Core/Src/main.c ****         {
 1947              		.loc 1 398 26 is_stmt 0 view .LVU424
 1948 001a 394B     		ldr	r3, .L127+8
 1949 001c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 398:Core/Src/main.c ****         {
 1950              		.loc 1 398 12 view .LVU425
 1951 001e 062B     		cmp	r3, #6
 1952 0020 0BD0     		beq	.L126
 410:Core/Src/main.c ****             {
 1953              		.loc 1 410 13 is_stmt 1 view .LVU426
 410:Core/Src/main.c ****             {
 1954              		.loc 1 410 45 is_stmt 0 view .LVU427
 1955 0022 384B     		ldr	r3, .L127+12
 1956 0024 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 410:Core/Src/main.c ****             {
 1957              		.loc 1 410 13 view .LVU428
 1958 0026 072B     		cmp	r3, #7
 1959 0028 1BD8     		bhi	.L112
 1960 002a 072B     		cmp	r3, #7
 1961 002c 57D8     		bhi	.L113
 1962 002e DFE803F0 		tbb	[pc, r3]
 1963              	.L115:
 1964 0032 1D       		.byte	(.L121-.L115)/2
 1965 0033 25       		.byte	(.L120-.L115)/2
 1966 0034 2B       		.byte	(.L119-.L115)/2
 1967 0035 32       		.byte	(.L118-.L115)/2
 1968 0036 39       		.byte	(.L117-.L115)/2
 1969 0037 40       		.byte	(.L116-.L115)/2
 1970 0038 56       		.byte	(.L113-.L115)/2
 1971 0039 47       		.byte	(.L114-.L115)/2
 1972              		.p2align 1
 1973              	.L126:
 400:Core/Src/main.c ****             response = RESPONSE_ACK;
 1974              		.loc 1 400 13 is_stmt 1 view .LVU429
 400:Core/Src/main.c ****             response = RESPONSE_ACK;
 1975              		.loc 1 400 26 is_stmt 0 view .LVU430
ARM GAS  /var/folders/rj/9n9dpytj2n74_jwlj_p0xk9m0000gn/T//ccJgApBP.s 			page 71


 1976 003a 0023     		movs	r3, #0
 1977 003c 304A     		ldr	r2, .L127+8
 1978 003e 1370     		strb	r3, [r2]
 401:Core/Src/main.c ****             rs485_transmit(&response, 1);
 1979              		.loc 1 401 13 is_stmt 1 view .LVU431
 401:Core/Src/main.c ****             rs485_transmit(&response, 1);
 1980              		.loc 1 401 22 is_stmt 0 view .LVU432
 1981 0040 8DF80730 		strb	r3, [sp, #7]
 402:Core/Src/main.c **** 
 1982              		.loc 1 402 13 is_stmt 1 view .LVU433
 1983 0044 0121     		movs	r1, #1
 1984 0046 0DF10700 		add	r0, sp, #7
 1985 004a FFF7FEFF 		bl	rs485_transmit
 1986              	.LVL209:
 404:Core/Src/main.c **** 
 1987              		.loc 1 404 13 view .LVU434
 1988 004e 2E4C     		ldr	r4, .L127+16
 1989              	.LVL210:
 404:Core/Src/main.c **** 
 1990              		.loc 1 404 13 is_stmt 0 view .LVU435
 1991 0050 2C4D     		ldr	r5, .L127+12
 1992 0052 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 1993 0054 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 1994 0056 2B68     		ldr	r3, [r5]
 1995 0058 2360     		str	r3, [r4]
 406:Core/Src/main.c ****         }
 1996              		.loc 1 406 13 is_stmt 1 view .LVU436
 1997 005a 0120     		movs	r0, #1
 1998 005c FFF7FEFF 		bl	rs485_receive_IT
 1999              	.LVL211:
 2000 0060 D9E7     		b	.L109
 2001              	.LVL212:
 2002              	.L112:
 410:Core/Src/main.c ****             {
 2003              		.loc 1 410 13 is_stmt 0 view .LVU437
 2004 0062 FF2B     		cmp	r3, #255
 2005 0064 3BD1     		bne	.L113
 443:Core/Src/main.c ****                 break;
 2006              		.loc 1 443 17 is_stmt 1 view .LVU438
 2007 0066 FFF7FEFF 		bl	HAL_NVIC_SystemReset
 2008              	.LVL213:
 444:Core/Src/main.c ****             default:
 2009              		.loc 1 444 17 view .LVU439
 2010 006a D4E7     		b	.L109
 2011              	.L121:
 413:Core/Src/main.c ****                 rs485_receive_IT(1);
 2012              		.loc 1 413 17 view .LVU440
 2013 006c 0121     		movs	r1, #1
 2014 006e 2748     		ldr	r0, .L127+20
 2015 0070 FFF7FEFF 		bl	rs485_transmit
 2016              	.LVL214:
 414:Core/Src/main.c ****                 break;
 2017              		.loc 1 414 17 view .LVU441
 2018 0074 0120     		movs	r0, #1
 2019 0076 FFF7FEFF 		bl	rs485_receive_IT
 2020              	.LVL215:
 415:Core/Src/main.c ****             case COMMAND_GET_TEMPERATURE:
ARM GAS  /var/folders/rj/9n9dpytj2n74_jwlj_p0xk9m0000gn/T//ccJgApBP.s 			page 72


 2021              		.loc 1 415 17 view .LVU442
 2022 007a CCE7     		b	.L109
 2023              	.L120:
 417:Core/Src/main.c ****                 rs485_receive_IT(1);
 2024              		.loc 1 417 17 view .LVU443
 417:Core/Src/main.c ****                 rs485_receive_IT(1);
 2025              		.loc 1 417 30 is_stmt 0 view .LVU444
 2026 007c 0120     		movs	r0, #1
 2027 007e 204B     		ldr	r3, .L127+8
 2028 0080 1870     		strb	r0, [r3]
 418:Core/Src/main.c ****                 break;
 2029              		.loc 1 418 17 is_stmt 1 view .LVU445
 2030 0082 FFF7FEFF 		bl	rs485_receive_IT
 2031              	.LVL216:
 419:Core/Src/main.c ****             case COMMAND_GET_DEPTH:
 2032              		.loc 1 419 17 view .LVU446
 2033 0086 C6E7     		b	.L109
 2034              	.L119:
 421:Core/Src/main.c ****                 rs485_receive_IT(1);
 2035              		.loc 1 421 17 view .LVU447
 421:Core/Src/main.c ****                 rs485_receive_IT(1);
 2036              		.loc 1 421 30 is_stmt 0 view .LVU448
 2037 0088 1D4B     		ldr	r3, .L127+8
 2038 008a 0222     		movs	r2, #2
 2039 008c 1A70     		strb	r2, [r3]
 422:Core/Src/main.c ****                 break;
 2040              		.loc 1 422 17 is_stmt 1 view .LVU449
 2041 008e 0120     		movs	r0, #1
 2042 0090 FFF7FEFF 		bl	rs485_receive_IT
 2043              	.LVL217:
 423:Core/Src/main.c ****             case COMMAND_GET_RESISTANCE:
 2044              		.loc 1 423 17 view .LVU450
 2045 0094 BFE7     		b	.L109
 2046              	.L118:
 425:Core/Src/main.c ****                 rs485_receive_IT(1);
 2047              		.loc 1 425 17 view .LVU451
 425:Core/Src/main.c ****                 rs485_receive_IT(1);
 2048              		.loc 1 425 30 is_stmt 0 view .LVU452
 2049 0096 1A4B     		ldr	r3, .L127+8
 2050 0098 0322     		movs	r2, #3
 2051 009a 1A70     		strb	r2, [r3]
 426:Core/Src/main.c ****                 break;
 2052              		.loc 1 426 17 is_stmt 1 view .LVU453
 2053 009c 0120     		movs	r0, #1
 2054 009e FFF7FEFF 		bl	rs485_receive_IT
 2055              	.LVL218:
 427:Core/Src/main.c ****             case COMMAND_GET_CONDUCTIVITY:
 2056              		.loc 1 427 17 view .LVU454
 2057 00a2 B8E7     		b	.L109
 2058              	.L117:
 429:Core/Src/main.c ****                 rs485_receive_IT(1);
 2059              		.loc 1 429 17 view .LVU455
 429:Core/Src/main.c ****                 rs485_receive_IT(1);
 2060              		.loc 1 429 30 is_stmt 0 view .LVU456
 2061 00a4 164B     		ldr	r3, .L127+8
 2062 00a6 0422     		movs	r2, #4
 2063 00a8 1A70     		strb	r2, [r3]
ARM GAS  /var/folders/rj/9n9dpytj2n74_jwlj_p0xk9m0000gn/T//ccJgApBP.s 			page 73


 430:Core/Src/main.c ****                 break;
 2064              		.loc 1 430 17 is_stmt 1 view .LVU457
 2065 00aa 0120     		movs	r0, #1
 2066 00ac FFF7FEFF 		bl	rs485_receive_IT
 2067              	.LVL219:
 431:Core/Src/main.c ****             case COMMAND_GET_SALINITY:
 2068              		.loc 1 431 17 view .LVU458
 2069 00b0 B1E7     		b	.L109
 2070              	.L116:
 433:Core/Src/main.c ****                 rs485_receive_IT(1);
 2071              		.loc 1 433 17 view .LVU459
 433:Core/Src/main.c ****                 rs485_receive_IT(1);
 2072              		.loc 1 433 30 is_stmt 0 view .LVU460
 2073 00b2 134B     		ldr	r3, .L127+8
 2074 00b4 0522     		movs	r2, #5
 2075 00b6 1A70     		strb	r2, [r3]
 434:Core/Src/main.c ****                 break;
 2076              		.loc 1 434 17 is_stmt 1 view .LVU461
 2077 00b8 0120     		movs	r0, #1
 2078 00ba FFF7FEFF 		bl	rs485_receive_IT
 2079              	.LVL220:
 435:Core/Src/main.c ****             case COMMAND_SET_CONFIG:
 2080              		.loc 1 435 17 view .LVU462
 2081 00be AAE7     		b	.L109
 2082              	.L114:
 437:Core/Src/main.c ****                 response = RESPONSE_ACK;
 2083              		.loc 1 437 17 view .LVU463
 437:Core/Src/main.c ****                 response = RESPONSE_ACK;
 2084              		.loc 1 437 30 is_stmt 0 view .LVU464
 2085 00c0 0F4B     		ldr	r3, .L127+8
 2086 00c2 0622     		movs	r2, #6
 2087 00c4 1A70     		strb	r2, [r3]
 438:Core/Src/main.c ****                 rs485_transmit(&response, 1);
 2088              		.loc 1 438 17 is_stmt 1 view .LVU465
 438:Core/Src/main.c ****                 rs485_transmit(&response, 1);
 2089              		.loc 1 438 26 is_stmt 0 view .LVU466
 2090 00c6 0023     		movs	r3, #0
 2091 00c8 8DF80730 		strb	r3, [sp, #7]
 439:Core/Src/main.c ****                 rs485_receive_IT(CONFIG_PACKET_SIZE);
 2092              		.loc 1 439 17 is_stmt 1 view .LVU467
 2093 00cc 0121     		movs	r1, #1
 2094 00ce 0DF10700 		add	r0, sp, #7
 2095 00d2 FFF7FEFF 		bl	rs485_transmit
 2096              	.LVL221:
 440:Core/Src/main.c ****                 break;
 2097              		.loc 1 440 17 view .LVU468
 2098 00d6 1420     		movs	r0, #20
 2099 00d8 FFF7FEFF 		bl	rs485_receive_IT
 2100              	.LVL222:
 441:Core/Src/main.c ****             case COMMAND_RESET:
 2101              		.loc 1 441 17 view .LVU469
 2102 00dc 9BE7     		b	.L109
 2103              	.L113:
 446:Core/Src/main.c ****                 rs485_transmit(&response, 1);
 2104              		.loc 1 446 17 view .LVU470
 446:Core/Src/main.c ****                 rs485_transmit(&response, 1);
 2105              		.loc 1 446 26 is_stmt 0 view .LVU471
ARM GAS  /var/folders/rj/9n9dpytj2n74_jwlj_p0xk9m0000gn/T//ccJgApBP.s 			page 74


 2106 00de 0124     		movs	r4, #1
 2107              	.LVL223:
 446:Core/Src/main.c ****                 rs485_transmit(&response, 1);
 2108              		.loc 1 446 26 view .LVU472
 2109 00e0 8DF80740 		strb	r4, [sp, #7]
 447:Core/Src/main.c ****                 rs485_receive_IT(1);
 2110              		.loc 1 447 17 is_stmt 1 view .LVU473
 2111 00e4 2146     		mov	r1, r4
 2112 00e6 0DF10700 		add	r0, sp, #7
 2113 00ea FFF7FEFF 		bl	rs485_transmit
 2114              	.LVL224:
 448:Core/Src/main.c ****             }
 2115              		.loc 1 448 17 view .LVU474
 2116 00ee 2046     		mov	r0, r4
 2117 00f0 FFF7FEFF 		bl	rs485_receive_IT
 2118              	.LVL225:
 452:Core/Src/main.c **** 
 2119              		.loc 1 452 1 is_stmt 0 view .LVU475
 2120 00f4 8FE7     		b	.L109
 2121              	.L128:
 2122 00f6 00BF     		.align	2
 2123              	.L127:
 2124 00f8 00040240 		.word	1073873920
 2125 00fc 00100140 		.word	1073811456
 2126 0100 00000000 		.word	current_task
 2127 0104 00000000 		.word	rx_buffer
 2128 0108 00000000 		.word	probe_config
 2129 010c 00000000 		.word	status
 2130              		.cfi_endproc
 2131              	.LFE226:
 2133              		.global	probe_config
 2134              		.section	.data.probe_config,"aw"
 2135              		.align	2
 2138              	probe_config:
 2139 0000 00       		.byte	0
 2140 0001 00       		.byte	0
 2141 0002 01       		.byte	1
 2142 0003 00       		.space	1
 2143 0004 5D00     		.short	93
 2144 0006 6403     		.short	868
 2145 0008 0A00     		.short	10
 2146 000a 0200     		.short	2
 2147 000c 404B4C00 		.word	5000000
 2148 0010 0C00     		.short	12
 2149 0012 0000     		.space	2
 2150              		.global	status
 2151              		.section	.bss.status,"aw",%nobits
 2154              	status:
 2155 0000 00       		.space	1
 2156              		.global	rx_buffer
 2157              		.section	.bss.rx_buffer,"aw",%nobits
 2158              		.align	2
 2161              	rx_buffer:
 2162 0000 00000000 		.space	20
 2162      00000000 
 2162      00000000 
 2162      00000000 
ARM GAS  /var/folders/rj/9n9dpytj2n74_jwlj_p0xk9m0000gn/T//ccJgApBP.s 			page 75


 2162      00000000 
 2163              		.global	current_task
 2164              		.section	.bss.current_task,"aw",%nobits
 2167              	current_task:
 2168 0000 00       		.space	1
 2169              		.text
 2170              	.Letext0:
 2171              		.file 3 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f401xc.h"
 2172              		.file 4 "/opt/local/arm-none-eabi/include/machine/_default_types.h"
 2173              		.file 5 "/opt/local/arm-none-eabi/include/sys/_stdint.h"
 2174              		.file 6 "/opt/local/lib/gcc/arm-none-eabi/13.1.0/include/stddef.h"
 2175              		.file 7 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h"
 2176              		.file 8 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc_ex.h"
 2177              		.file 9 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc.h"
 2178              		.file 10 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_gpio.h"
 2179              		.file 11 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_dma.h"
 2180              		.file 12 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_uart.h"
 2181              		.file 13 "Core/Inc/usart.h"
 2182              		.file 14 "../RS485/ProbeConfig.h"
 2183              		.file 15 "Core/Inc/voltage.h"
 2184              		.file 16 "Core/Inc/salinity.h"
 2185              		.file 17 "../RS485/RS485.h"
 2186              		.file 18 "/opt/local/arm-none-eabi/include/string.h"
 2187              		.file 19 "/opt/local/arm-none-eabi/include/stdio.h"
 2188              		.file 20 "/opt/local/arm-none-eabi/include/math.h"
 2189              		.file 21 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_cortex.h"
 2190              		.file 22 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal.h"
 2191              		.file 23 "Core/Inc/tim.h"
 2192              		.file 24 "Core/Inc/i2c.h"
 2193              		.file 25 "Core/Inc/adc.h"
 2194              		.file 26 "Core/Inc/gpio.h"
 2195              		.file 27 "<built-in>"
ARM GAS  /var/folders/rj/9n9dpytj2n74_jwlj_p0xk9m0000gn/T//ccJgApBP.s 			page 76


DEFINED SYMBOLS
                            *ABS*:00000000 main.c
/var/folders/rj/9n9dpytj2n74_jwlj_p0xk9m0000gn/T//ccJgApBP.s:21     .text.MX_NVIC_Init:00000000 $t
/var/folders/rj/9n9dpytj2n74_jwlj_p0xk9m0000gn/T//ccJgApBP.s:26     .text.MX_NVIC_Init:00000000 MX_NVIC_Init
/var/folders/rj/9n9dpytj2n74_jwlj_p0xk9m0000gn/T//ccJgApBP.s:64     .rodata.transmit_sample_data_readable.str1.4:00000000 $d
/var/folders/rj/9n9dpytj2n74_jwlj_p0xk9m0000gn/T//ccJgApBP.s:84     .text.transmit_sample_data_readable:00000000 $t
/var/folders/rj/9n9dpytj2n74_jwlj_p0xk9m0000gn/T//ccJgApBP.s:90     .text.transmit_sample_data_readable:00000000 transmit_sample_data_readable
/var/folders/rj/9n9dpytj2n74_jwlj_p0xk9m0000gn/T//ccJgApBP.s:121    .text.transmit_sample_data_readable:00000016 $d
/var/folders/rj/9n9dpytj2n74_jwlj_p0xk9m0000gn/T//ccJgApBP.s:128    .text.transmit_sample_data_readable:00000022 $t
/var/folders/rj/9n9dpytj2n74_jwlj_p0xk9m0000gn/T//ccJgApBP.s:520    .text.transmit_sample_data_readable:00000250 $d
/var/folders/rj/9n9dpytj2n74_jwlj_p0xk9m0000gn/T//ccJgApBP.s:535    .rodata.transmit_sample_data_binary.str1.4:00000000 $d
/var/folders/rj/9n9dpytj2n74_jwlj_p0xk9m0000gn/T//ccJgApBP.s:543    .text.transmit_sample_data_binary:00000000 $t
/var/folders/rj/9n9dpytj2n74_jwlj_p0xk9m0000gn/T//ccJgApBP.s:549    .text.transmit_sample_data_binary:00000000 transmit_sample_data_binary
/var/folders/rj/9n9dpytj2n74_jwlj_p0xk9m0000gn/T//ccJgApBP.s:661    .text.transmit_sample_data_binary:00000080 $d
/var/folders/rj/9n9dpytj2n74_jwlj_p0xk9m0000gn/T//ccJgApBP.s:668    .text.Error_Handler:00000000 $t
/var/folders/rj/9n9dpytj2n74_jwlj_p0xk9m0000gn/T//ccJgApBP.s:674    .text.Error_Handler:00000000 Error_Handler
/var/folders/rj/9n9dpytj2n74_jwlj_p0xk9m0000gn/T//ccJgApBP.s:871    .text.rs485_transmit:00000000 rs485_transmit
/var/folders/rj/9n9dpytj2n74_jwlj_p0xk9m0000gn/T//ccJgApBP.s:722    .text.Error_Handler:0000001c $d
/var/folders/rj/9n9dpytj2n74_jwlj_p0xk9m0000gn/T//ccJgApBP.s:2154   .bss.status:00000000 status
/var/folders/rj/9n9dpytj2n74_jwlj_p0xk9m0000gn/T//ccJgApBP.s:728    .text.SystemClock_Config:00000000 $t
/var/folders/rj/9n9dpytj2n74_jwlj_p0xk9m0000gn/T//ccJgApBP.s:734    .text.SystemClock_Config:00000000 SystemClock_Config
/var/folders/rj/9n9dpytj2n74_jwlj_p0xk9m0000gn/T//ccJgApBP.s:859    .text.SystemClock_Config:00000084 $d
/var/folders/rj/9n9dpytj2n74_jwlj_p0xk9m0000gn/T//ccJgApBP.s:865    .text.rs485_transmit:00000000 $t
/var/folders/rj/9n9dpytj2n74_jwlj_p0xk9m0000gn/T//ccJgApBP.s:928    .text.rs485_transmit:00000034 $d
/var/folders/rj/9n9dpytj2n74_jwlj_p0xk9m0000gn/T//ccJgApBP.s:942    .rodata.rs485_transmit_double.str1.4:00000000 $d
/var/folders/rj/9n9dpytj2n74_jwlj_p0xk9m0000gn/T//ccJgApBP.s:946    .text.rs485_transmit_double:00000000 $t
/var/folders/rj/9n9dpytj2n74_jwlj_p0xk9m0000gn/T//ccJgApBP.s:952    .text.rs485_transmit_double:00000000 rs485_transmit_double
/var/folders/rj/9n9dpytj2n74_jwlj_p0xk9m0000gn/T//ccJgApBP.s:1354   .text.rs485_transmit_double:00000258 $d
/var/folders/rj/9n9dpytj2n74_jwlj_p0xk9m0000gn/T//ccJgApBP.s:1367   .text.rs485_receive_IT:00000000 $t
/var/folders/rj/9n9dpytj2n74_jwlj_p0xk9m0000gn/T//ccJgApBP.s:1373   .text.rs485_receive_IT:00000000 rs485_receive_IT
/var/folders/rj/9n9dpytj2n74_jwlj_p0xk9m0000gn/T//ccJgApBP.s:1424   .text.rs485_receive_IT:0000002c $d
/var/folders/rj/9n9dpytj2n74_jwlj_p0xk9m0000gn/T//ccJgApBP.s:2161   .bss.rx_buffer:00000000 rx_buffer
/var/folders/rj/9n9dpytj2n74_jwlj_p0xk9m0000gn/T//ccJgApBP.s:1432   .text.main:00000000 $t
/var/folders/rj/9n9dpytj2n74_jwlj_p0xk9m0000gn/T//ccJgApBP.s:1438   .text.main:00000000 main
/var/folders/rj/9n9dpytj2n74_jwlj_p0xk9m0000gn/T//ccJgApBP.s:1604   .text.main:000000f4 $d
/var/folders/rj/9n9dpytj2n74_jwlj_p0xk9m0000gn/T//ccJgApBP.s:1609   .text.main:00000108 $t
/var/folders/rj/9n9dpytj2n74_jwlj_p0xk9m0000gn/T//ccJgApBP.s:1887   .text.main:000002e0 $d
/var/folders/rj/9n9dpytj2n74_jwlj_p0xk9m0000gn/T//ccJgApBP.s:2167   .bss.current_task:00000000 current_task
/var/folders/rj/9n9dpytj2n74_jwlj_p0xk9m0000gn/T//ccJgApBP.s:2138   .data.probe_config:00000000 probe_config
/var/folders/rj/9n9dpytj2n74_jwlj_p0xk9m0000gn/T//ccJgApBP.s:1898   .text.HAL_UART_RxCpltCallback:00000000 $t
/var/folders/rj/9n9dpytj2n74_jwlj_p0xk9m0000gn/T//ccJgApBP.s:1904   .text.HAL_UART_RxCpltCallback:00000000 HAL_UART_RxCpltCallback
/var/folders/rj/9n9dpytj2n74_jwlj_p0xk9m0000gn/T//ccJgApBP.s:1964   .text.HAL_UART_RxCpltCallback:00000032 $d
/var/folders/rj/9n9dpytj2n74_jwlj_p0xk9m0000gn/T//ccJgApBP.s:1972   .text.HAL_UART_RxCpltCallback:0000003a $t
/var/folders/rj/9n9dpytj2n74_jwlj_p0xk9m0000gn/T//ccJgApBP.s:2124   .text.HAL_UART_RxCpltCallback:000000f8 $d
/var/folders/rj/9n9dpytj2n74_jwlj_p0xk9m0000gn/T//ccJgApBP.s:2135   .data.probe_config:00000000 $d
/var/folders/rj/9n9dpytj2n74_jwlj_p0xk9m0000gn/T//ccJgApBP.s:2155   .bss.status:00000000 $d
/var/folders/rj/9n9dpytj2n74_jwlj_p0xk9m0000gn/T//ccJgApBP.s:2158   .bss.rx_buffer:00000000 $d
/var/folders/rj/9n9dpytj2n74_jwlj_p0xk9m0000gn/T//ccJgApBP.s:2168   .bss.current_task:00000000 $d

UNDEFINED SYMBOLS
HAL_NVIC_SetPriority
HAL_NVIC_EnableIRQ
__aeabi_f2d
__aeabi_dmul
sprintf
strlen
HAL_UART_Transmit
ARM GAS  /var/folders/rj/9n9dpytj2n74_jwlj_p0xk9m0000gn/T//ccJgApBP.s 			page 77


huart6
HAL_GPIO_WritePin
memset
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_HalfDuplex_EnableTransmitter
huart1
__aeabi_dcmpge
__aeabi_dcmple
__aeabi_dcmpeq
__aeabi_dcmpgt
__aeabi_d2iz
__aeabi_i2d
__aeabi_d2uiz
__aeabi_ddiv
log10
fmod
round
pow
HAL_HalfDuplex_EnableReceiver
HAL_UART_Receive_IT
__aeabi_ui2d
HAL_Init
MX_GPIO_Init
MX_ADC1_Init
MX_I2C1_Init
MX_USART1_UART_Init
MX_USART6_UART_Init
MX_TIM10_Init
voltage_init
HAL_Delay
measure_voltage_sweep
measure_temperature
HAL_UART_Abort_IT
measure_pressure
calculate_resistance
calculate_average_resistance
calculate_conductivity
calculate_salinity
HAL_GPIO_TogglePin
HAL_NVIC_SystemReset
